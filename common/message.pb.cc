// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Position;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Texture;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Tint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Entity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TextureProfile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TintProfile;
}  // namespace protobuf_message_2eproto
namespace pb {
class ChannelMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelMessage>
      _instance;
} _ChannelMessage_default_instance_;
class CommandMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommandMessage>
      _instance;
} _CommandMessage_default_instance_;
class EntityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entity>
      _instance;
} _Entity_default_instance_;
class EntitiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entities>
      _instance;
} _Entities_default_instance_;
class PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Position>
      _instance;
} _Position_default_instance_;
class TextureProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextureProfile>
      _instance;
} _TextureProfile_default_instance_;
class TextureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Texture>
      _instance;
} _Texture_default_instance_;
class TintProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TintProfile>
      _instance;
} _TintProfile_default_instance_;
class TintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tint>
      _instance;
} _Tint_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event>
      _instance;
} _Event_default_instance_;
class DeathEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeathEvent>
      _instance;
} _DeathEvent_default_instance_;
class DamageEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DamageEvent>
      _instance;
} _DamageEvent_default_instance_;
class EntityEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityEvent>
      _instance;
} _EntityEvent_default_instance_;
class ChannelMessageEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelMessageEvent>
      _instance;
} _ChannelMessageEvent_default_instance_;
class SpecialMessageEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpecialMessageEvent>
      _instance;
} _SpecialMessageEvent_default_instance_;
class NewZoneEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewZoneEvent>
      _instance;
} _NewZoneEvent_default_instance_;
class WearChangeEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WearChangeEvent>
      _instance;
} _WearChangeEvent_default_instance_;
class DeleteSpawnEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSpawnEvent>
      _instance;
} _DeleteSpawnEvent_default_instance_;
class HPEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HPEvent>
      _instance;
} _HPEvent_default_instance_;
class PlayerPositionUpdateEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerPositionUpdateEvent>
      _instance;
} _PlayerPositionUpdateEvent_default_instance_;
class AnimationEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnimationEvent>
      _instance;
} _AnimationEvent_default_instance_;
class SpawnEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpawnEvent>
      _instance;
} _SpawnEvent_default_instance_;
class AlternateAdvancementStatsEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlternateAdvancementStatsEvent>
      _instance;
} _AlternateAdvancementStatsEvent_default_instance_;
class ZoneCompleteEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZoneCompleteEvent>
      _instance;
} _ZoneCompleteEvent_default_instance_;
class UseAAEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UseAAEvent>
      _instance;
} _UseAAEvent_default_instance_;
class DailyGainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DailyGain>
      _instance;
} _DailyGain_default_instance_;
}  // namespace pb
namespace protobuf_message_2eproto {
static void InitDefaultsChannelMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ChannelMessage_default_instance_;
    new (ptr) ::pb::ChannelMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ChannelMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChannelMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChannelMessage}, {}};

static void InitDefaultsCommandMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_CommandMessage_default_instance_;
    new (ptr) ::pb::CommandMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::CommandMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommandMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommandMessage}, {}};

static void InitDefaultsEntity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Entity_default_instance_;
    new (ptr) ::pb::Entity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Entity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Entity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEntity}, {
      &protobuf_message_2eproto::scc_info_Position.base,}};

static void InitDefaultsEntities() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Entities_default_instance_;
    new (ptr) ::pb::Entities();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Entities::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Entities =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEntities}, {
      &protobuf_message_2eproto::scc_info_Entity.base,}};

static void InitDefaultsPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Position_default_instance_;
    new (ptr) ::pb::Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Position::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Position =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPosition}, {}};

static void InitDefaultsTextureProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_TextureProfile_default_instance_;
    new (ptr) ::pb::TextureProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::TextureProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TextureProfile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTextureProfile}, {
      &protobuf_message_2eproto::scc_info_Texture.base,}};

static void InitDefaultsTexture() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Texture_default_instance_;
    new (ptr) ::pb::Texture();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Texture::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Texture =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTexture}, {}};

static void InitDefaultsTintProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_TintProfile_default_instance_;
    new (ptr) ::pb::TintProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::TintProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TintProfile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTintProfile}, {
      &protobuf_message_2eproto::scc_info_Tint.base,}};

static void InitDefaultsTint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Tint_default_instance_;
    new (ptr) ::pb::Tint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Tint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Tint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTint}, {}};

static void InitDefaultsEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Event_default_instance_;
    new (ptr) ::pb::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEvent}, {}};

static void InitDefaultsDeathEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_DeathEvent_default_instance_;
    new (ptr) ::pb::DeathEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DeathEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeathEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeathEvent}, {}};

static void InitDefaultsDamageEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_DamageEvent_default_instance_;
    new (ptr) ::pb::DamageEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DamageEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DamageEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDamageEvent}, {}};

static void InitDefaultsEntityEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_EntityEvent_default_instance_;
    new (ptr) ::pb::EntityEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::EntityEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntityEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntityEvent}, {}};

static void InitDefaultsChannelMessageEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ChannelMessageEvent_default_instance_;
    new (ptr) ::pb::ChannelMessageEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ChannelMessageEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChannelMessageEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChannelMessageEvent}, {}};

static void InitDefaultsSpecialMessageEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SpecialMessageEvent_default_instance_;
    new (ptr) ::pb::SpecialMessageEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::SpecialMessageEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SpecialMessageEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSpecialMessageEvent}, {}};

static void InitDefaultsNewZoneEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_NewZoneEvent_default_instance_;
    new (ptr) ::pb::NewZoneEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::NewZoneEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NewZoneEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNewZoneEvent}, {}};

static void InitDefaultsWearChangeEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_WearChangeEvent_default_instance_;
    new (ptr) ::pb::WearChangeEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::WearChangeEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WearChangeEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWearChangeEvent}, {
      &protobuf_message_2eproto::scc_info_Tint.base,}};

static void InitDefaultsDeleteSpawnEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_DeleteSpawnEvent_default_instance_;
    new (ptr) ::pb::DeleteSpawnEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DeleteSpawnEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSpawnEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSpawnEvent}, {}};

static void InitDefaultsHPEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_HPEvent_default_instance_;
    new (ptr) ::pb::HPEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::HPEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HPEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHPEvent}, {}};

static void InitDefaultsPlayerPositionUpdateEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PlayerPositionUpdateEvent_default_instance_;
    new (ptr) ::pb::PlayerPositionUpdateEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PlayerPositionUpdateEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerPositionUpdateEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerPositionUpdateEvent}, {}};

static void InitDefaultsAnimationEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_AnimationEvent_default_instance_;
    new (ptr) ::pb::AnimationEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::AnimationEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AnimationEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAnimationEvent}, {}};

static void InitDefaultsSpawnEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SpawnEvent_default_instance_;
    new (ptr) ::pb::SpawnEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::SpawnEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SpawnEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSpawnEvent}, {
      &protobuf_message_2eproto::scc_info_TextureProfile.base,
      &protobuf_message_2eproto::scc_info_TintProfile.base,}};

static void InitDefaultsAlternateAdvancementStatsEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_AlternateAdvancementStatsEvent_default_instance_;
    new (ptr) ::pb::AlternateAdvancementStatsEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::AlternateAdvancementStatsEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlternateAdvancementStatsEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlternateAdvancementStatsEvent}, {}};

static void InitDefaultsZoneCompleteEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ZoneCompleteEvent_default_instance_;
    new (ptr) ::pb::ZoneCompleteEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ZoneCompleteEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ZoneCompleteEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsZoneCompleteEvent}, {}};

static void InitDefaultsUseAAEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_UseAAEvent_default_instance_;
    new (ptr) ::pb::UseAAEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::UseAAEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UseAAEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUseAAEvent}, {}};

static void InitDefaultsDailyGain() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_DailyGain_default_instance_;
    new (ptr) ::pb::DailyGain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DailyGain::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DailyGain =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDailyGain}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommandMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Entity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Entities.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Position.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TextureProfile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Texture.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TintProfile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeathEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DamageEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelMessageEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SpecialMessageEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NewZoneEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WearChangeEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSpawnEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HPEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerPositionUpdateEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnimationEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SpawnEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlternateAdvancementStatsEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ZoneCompleteEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UseAAEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DailyGain.base);
}

::google::protobuf::Metadata file_level_metadata[26];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, guilddbid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, deliverto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, minstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, fromadmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, noreply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, is_emote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, queued_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, from_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, from_entity_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, skip_sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, response_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, response_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, response_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, response_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessage, response_payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, response_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, response_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, response_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, response_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::CommandMessage, response_payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, race_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, class__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, max_hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, spawn_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, lastname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, bodytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, deity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, npctype_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, runspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, texture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, helmtexture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, ac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, atk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, sta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, dex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, agi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, int__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, wis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, cha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, haircolor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, beardcolor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, eyecolor1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, eyecolor2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_db_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_incline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_opentype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_guild_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_lockpick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_keyitem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_nokeyring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_trigger_door_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_trigger_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_invert_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_disable_timer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_is_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_is_ldon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entity, door_client_version_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Entities, entities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Position, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Position, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Position, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Position, h_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, chest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, arms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, wrist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, hands_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, legs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, feet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, primary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TextureProfile, secondary_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Texture, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Texture, material_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Texture, unknown1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Texture, elitemodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Texture, herosforgemodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Texture, unknown2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, chest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, arms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, wrist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, hands_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, legs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, feet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, primary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TintProfile, secondary_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Tint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Tint, blue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Tint, green_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Tint, red_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Tint, usetint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Tint, color_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Event, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Event, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Event, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, spawn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, killer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, corpse_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, bind_zone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, spell_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, attack_skill_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeathEvent, unknown028_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, spellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, meleepush_xy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DamageEvent, meleepush_z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::EntityEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::EntityEvent, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::EntityEvent, target_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessageEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessageEvent, target_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessageEvent, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessageEvent, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessageEvent, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessageEvent, cm_unknown4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessageEvent, skill_in_language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChannelMessageEvent, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpecialMessageEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpecialMessageEvent, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpecialMessageEvent, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpecialMessageEvent, target_spawn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpecialMessageEvent, sayer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpecialMessageEvent, unknown12_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpecialMessageEvent, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, char_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, zone_short_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, zone_long_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, ztype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, fog_red_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, fog_green_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, fog_blue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, unknown323_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, fog_minclip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, fog_maxclip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, gravity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, time_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, rain_chance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, rain_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, snow_chance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, snow_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, unknown360_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, sky_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, unknown331_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, zone_exp_multiplier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, safe_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, safe_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, safe_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, max_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, underworld_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, minclip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, maxclip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, unknown_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, zone_short_name2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, unknown672_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, zone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, zone_instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, unknown688_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, unknown692_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, fog_density_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::NewZoneEvent, suspend_buffs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, spawn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, material_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, unknown06_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, elite_material_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, hero_forge_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, unknown18_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::WearChangeEvent, wear_slot_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeleteSpawnEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeleteSpawnEvent, spawn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeleteSpawnEvent, decay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::HPEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::HPEvent, spawn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::HPEvent, cur_hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::HPEvent, max_hp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, spawn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, delta_heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, x_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, padding0002_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, y_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, animation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, padding0006_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, z_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, delta_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, delta_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, padding0014_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, delta_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerPositionUpdateEvent, padding0018_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AnimationEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AnimationEvent, spawnid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AnimationEvent, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AnimationEvent, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0000_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, gm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0003_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, aaitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0004_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, anon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, face_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, deity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0073_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0079_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, npc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, invis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, haircolor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, curhp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, max_hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, findable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0089_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, deltaheading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, padding0054_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, animation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, padding0058_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, deltay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, deltax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, padding0066_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, deltaz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, padding0070_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, eyecolor1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0115_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, standstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, drakkin_heritage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, drakkin_tattoo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, drakkin_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, showhelm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0140_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, is_npc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, hairstyle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, beard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0147_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, playerstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, beardcolor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, petownerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, guildrank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0194_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, equipment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, runspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, afk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0274_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, set_to_0xff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, helm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, race_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0288_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, lastname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, walkspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0328_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, is_pet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, class__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, eyecolor2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, flymode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, bodytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0336_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, equip_chest2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, mount_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, spawnid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, unknown0344_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, ismercenary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, equipment_tint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, lfg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructiblemodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructiblename2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructiblestring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleappearance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleid1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleid2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleid3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleid4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, destructibleunk9_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, targetable_with_hotkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::SpawnEvent, show_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AlternateAdvancementStatsEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AlternateAdvancementStatsEvent, experience_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AlternateAdvancementStatsEvent, unspent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AlternateAdvancementStatsEvent, unknown006_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AlternateAdvancementStatsEvent, percentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AlternateAdvancementStatsEvent, unknown009_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ZoneCompleteEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::UseAAEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::UseAAEvent, begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::UseAAEvent, ability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::UseAAEvent, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::UseAAEvent, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::UseAAEvent, target_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::UseAAEvent, exp_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DailyGain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DailyGain, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DailyGain, character_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DailyGain, levels_gained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DailyGain, experience_gained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DailyGain, money_earned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DailyGain, identity_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::ChannelMessage)},
  { 27, -1, sizeof(::pb::CommandMessage)},
  { 40, -1, sizeof(::pb::Entity)},
  { 94, -1, sizeof(::pb::Entities)},
  { 100, -1, sizeof(::pb::Position)},
  { 109, -1, sizeof(::pb::TextureProfile)},
  { 123, -1, sizeof(::pb::Texture)},
  { 133, -1, sizeof(::pb::TintProfile)},
  { 147, -1, sizeof(::pb::Tint)},
  { 157, -1, sizeof(::pb::Event)},
  { 165, -1, sizeof(::pb::DeathEvent)},
  { 178, -1, sizeof(::pb::DamageEvent)},
  { 191, -1, sizeof(::pb::EntityEvent)},
  { 198, -1, sizeof(::pb::ChannelMessageEvent)},
  { 210, -1, sizeof(::pb::SpecialMessageEvent)},
  { 221, -1, sizeof(::pb::NewZoneEvent)},
  { 262, -1, sizeof(::pb::WearChangeEvent)},
  { 275, -1, sizeof(::pb::DeleteSpawnEvent)},
  { 282, -1, sizeof(::pb::HPEvent)},
  { 290, -1, sizeof(::pb::PlayerPositionUpdateEvent)},
  { 309, -1, sizeof(::pb::AnimationEvent)},
  { 317, -1, sizeof(::pb::SpawnEvent)},
  { 421, -1, sizeof(::pb::AlternateAdvancementStatsEvent)},
  { 431, -1, sizeof(::pb::ZoneCompleteEvent)},
  { 436, -1, sizeof(::pb::UseAAEvent)},
  { 447, -1, sizeof(::pb::DailyGain)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ChannelMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_CommandMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Entity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Entities_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_TextureProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Texture_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_TintProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Tint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DeathEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DamageEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_EntityEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ChannelMessageEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_SpecialMessageEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_NewZoneEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_WearChangeEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DeleteSpawnEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_HPEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_PlayerPositionUpdateEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_AnimationEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_SpawnEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_AlternateAdvancementStatsEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ZoneCompleteEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_UseAAEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DailyGain_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\022\002pb\"\356\003\n\016ChannelMessage\022\037"
      "\n\006number\030\001 \001(\0162\017.pb.MessageType\022\020\n\010langu"
      "age\030\002 \001(\005\022\014\n\004from\030\003 \001(\t\022\n\n\002to\030\004 \001(\t\022\017\n\007m"
      "essage\030\005 \001(\t\022\021\n\tguilddbid\030\006 \001(\005\022\021\n\tdeliv"
      "erto\030\007 \001(\t\022\014\n\004type\030\010 \001(\005\022\021\n\tminstatus\030\t "
      "\001(\005\022\021\n\tfromadmin\030\n \001(\005\022\017\n\007noreply\030\013 \001(\010\022"
      "\020\n\010is_emote\030\014 \001(\010\022\016\n\006queued\030\r \001(\005\022\026\n\016fro"
      "m_entity_id\030\020 \001(\005\022(\n\020from_entity_type\030\021 "
      "\001(\0162\016.pb.EntityType\022\020\n\010distance\030\022 \001(\002\022\023\n"
      "\013skip_sender\030\023 \001(\010\022\030\n\020response_message\030\024"
      " \001(\t\022\026\n\016response_value\030\025 \001(\005\022%\n\016response"
      "_error\030\026 \001(\0162\r.pb.ErrorType\022\025\n\rresponse_"
      "type\030\027 \001(\t\022\030\n\020response_payload\030\030 \001(\014\"\313\001\n"
      "\016CommandMessage\022\016\n\006author\030\001 \001(\t\022\017\n\007comma"
      "nd\030\002 \001(\t\022\016\n\006params\030\003 \003(\t\022\030\n\020response_mes"
      "sage\030\004 \001(\t\022\026\n\016response_value\030\005 \001(\005\022%\n\016re"
      "sponse_error\030\006 \001(\0162\r.pb.ErrorType\022\025\n\rres"
      "ponse_type\030\007 \001(\t\022\030\n\020response_payload\030\010 \001"
      "(\014\"\337\007\n\006Entity\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022"
      "\034\n\004type\030\003 \001(\0162\016.pb.EntityType\022\n\n\002hp\030\004 \001("
      "\005\022\r\n\005level\030\005 \001(\005\022\036\n\010position\030\006 \001(\0132\014.pb."
      "Position\022\014\n\004race\030\007 \001(\005\022\r\n\005class\030\010 \001(\005\022\016\n"
      "\006max_hp\030\t \001(\005\022\027\n\017spawn_timestamp\030\n \001(\003\022\020"
      "\n\010lastname\030\r \001(\t\022\036\n\006gender\030\016 \001(\0162\016.pb.Ge"
      "nderType\022\036\n\010bodytype\030\017 \001(\0162\014.pb.BodyType"
      "\022\034\n\005deity\030\020 \001(\0162\r.pb.DeityType\022\022\n\nnpctyp"
      "e_id\030\021 \001(\r\022\014\n\004size\030\022 \001(\002\022\020\n\010runspeed\030\023 \001"
      "(\002\022\017\n\007texture\030\025 \001(\005\022\023\n\013helmtexture\030\026 \001(\005"
      "\022\n\n\002ac\030\027 \001(\005\022\013\n\003atk\030\030 \001(\005\022\013\n\003str\030\031 \001(\005\022\013"
      "\n\003sta\030\032 \001(\005\022\013\n\003dex\030\033 \001(\005\022\013\n\003agi\030\034 \001(\005\022\013\n"
      "\003int\030\035 \001(\005\022\013\n\003wis\030\036 \001(\005\022\013\n\003cha\030\037 \001(\005\022\021\n\t"
      "haircolor\030  \001(\005\022\022\n\nbeardcolor\030! \001(\005\022\021\n\te"
      "yecolor1\030\" \001(\005\022\021\n\teyecolor2\030# \001(\005\022\022\n\ndoo"
      "r_db_id\030d \001(\r\022\017\n\007door_id\030e \001(\r\022\021\n\tdoor_n"
      "ame\030g \001(\t\022\024\n\014door_incline\030h \001(\005\022\025\n\rdoor_"
      "opentype\030i \001(\r\022\025\n\rdoor_guild_id\030j \001(\r\022\025\n"
      "\rdoor_lockpick\030k \001(\r\022\024\n\014door_keyitem\030l \001"
      "(\r\022\026\n\016door_nokeyring\030m \001(\r\022\034\n\024door_trigg"
      "er_door_id\030n \001(\r\022\031\n\021door_trigger_type\030o "
      "\001(\r\022\022\n\ndoor_param\030p \001(\r\022\031\n\021door_invert_s"
      "tate\030q \001(\005\022\032\n\022door_disable_timer\030r \001(\010\022\024"
      "\n\014door_is_open\030s \001(\010\022\024\n\014door_is_ldon\030w \001"
      "(\r\022 \n\030door_client_version_mask\030x \001(\r\"(\n\010"
      "Entities\022\034\n\010entities\030\001 \003(\0132\n.pb.Entity\"6"
      "\n\010Position\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 "
      "\001(\002\022\t\n\001h\030\004 \001(\002\"\216\002\n\016TextureProfile\022\031\n\004Hea"
      "d\030\001 \001(\0132\013.pb.Texture\022\032\n\005Chest\030\002 \001(\0132\013.pb"
      ".Texture\022\031\n\004Arms\030\003 \001(\0132\013.pb.Texture\022\032\n\005W"
      "rist\030\004 \001(\0132\013.pb.Texture\022\032\n\005Hands\030\005 \001(\0132\013"
      ".pb.Texture\022\031\n\004Legs\030\006 \001(\0132\013.pb.Texture\022\031"
      "\n\004Feet\030\007 \001(\0132\013.pb.Texture\022\034\n\007Primary\030\010 \001"
      "(\0132\013.pb.Texture\022\036\n\tSecondary\030\t \001(\0132\013.pb."
      "Texture\"l\n\007Texture\022\020\n\010material\030\001 \001(\r\022\020\n\010"
      "unknown1\030\002 \001(\r\022\022\n\nEliteModel\030\003 \001(\r\022\027\n\017He"
      "rosForgeModel\030\004 \001(\r\022\020\n\010Unknown2\030\005 \001(\r\"\360\001"
      "\n\013TintProfile\022\026\n\004Head\030\001 \001(\0132\010.pb.Tint\022\027\n"
      "\005Chest\030\002 \001(\0132\010.pb.Tint\022\026\n\004Arms\030\003 \001(\0132\010.p"
      "b.Tint\022\027\n\005Wrist\030\004 \001(\0132\010.pb.Tint\022\027\n\005Hands"
      "\030\005 \001(\0132\010.pb.Tint\022\026\n\004Legs\030\006 \001(\0132\010.pb.Tint"
      "\022\026\n\004Feet\030\007 \001(\0132\010.pb.Tint\022\031\n\007Primary\030\010 \001("
      "\0132\010.pb.Tint\022\033\n\tSecondary\030\t \001(\0132\010.pb.Tint"
      "\"P\n\004Tint\022\014\n\004Blue\030\001 \001(\r\022\r\n\005Green\030\002 \001(\r\022\013\n"
      "\003Red\030\003 \001(\r\022\017\n\007UseTint\030\004 \001(\r\022\r\n\005Color\030\005 \001"
      "(\r\"C\n\005Event\022\026\n\002op\030\001 \001(\0162\n.pb.OpCode\022\017\n\007p"
      "ayload\030\002 \001(\014\022\021\n\tentity_id\030\003 \001(\r\"\251\001\n\nDeat"
      "hEvent\022\020\n\010spawn_id\030\001 \001(\r\022\021\n\tkiller_id\030\002 "
      "\001(\r\022\021\n\tcorpse_id\030\003 \001(\r\022\024\n\014bind_zone_id\030\004"
      " \001(\r\022\020\n\010spell_id\030\005 \001(\r\022\027\n\017attack_skill_i"
      "d\030\006 \001(\r\022\016\n\006damage\030\007 \001(\r\022\022\n\nunknown028\030\010 "
      "\001(\r\"\226\001\n\013DamageEvent\022\016\n\006target\030\001 \001(\r\022\016\n\006s"
      "ource\030\002 \001(\r\022\014\n\004type\030\003 \001(\r\022\017\n\007spellid\030\004 \001"
      "(\r\022\016\n\006damage\030\005 \001(\r\022\r\n\005force\030\006 \001(\002\022\024\n\014mel"
      "eepush_xy\030\007 \001(\002\022\023\n\013meleepush_z\030\010 \001(\002\"3\n\013"
      "EntityEvent\022\021\n\tentity_id\030\001 \001(\r\022\021\n\ttarget"
      "_id\030\002 \001(\r\"\256\001\n\023ChannelMessageEvent\022\023\n\013tar"
      "get_name\030\001 \001(\t\022\016\n\006sender\030\002 \001(\t\022\020\n\010langua"
      "ge\030\003 \001(\r\022\037\n\006number\030\004 \001(\0162\017.pb.MessageTyp"
      "e\022\023\n\013cm_unknown4\030\005 \001(\r\022\031\n\021skill_in_langu"
      "age\030\006 \001(\r\022\017\n\007message\030\007 \001(\t\"\222\001\n\023SpecialMe"
      "ssageEvent\022\016\n\006header\030\001 \001(\t\022\037\n\006number\030\002 \001"
      "(\0162\017.pb.MessageType\022\027\n\017target_spawn_id\030\003"
      " \001(\r\022\r\n\005sayer\030\004 \001(\t\022\021\n\tunknown12\030\005 \001(\r\022\017"
      "\n\007message\030\006 \001(\t\"\327\005\n\014NewZoneEvent\022\021\n\tchar"
      "_name\030\001 \001(\t\022\027\n\017zone_short_name\030\002 \001(\t\022\026\n\016"
      "zone_long_name\030\003 \001(\t\022\r\n\005ztype\030\004 \001(\r\022\017\n\007f"
      "og_red\030\005 \001(\r\022\021\n\tfog_green\030\006 \001(\r\022\020\n\010fog_b"
      "lue\030\007 \001(\r\022\022\n\nunknown323\030\010 \001(\r\022\023\n\013fog_min"
      "clip\030\t \001(\002\022\023\n\013fog_maxclip\030\n \001(\002\022\017\n\007gravi"
      "ty\030\013 \001(\002\022\021\n\ttime_type\030\014 \001(\r\022\023\n\013rain_chan"
      "ce\030\r \001(\r\022\025\n\rrain_duration\030\016 \001(\r\022\023\n\013snow_"
      "chance\030\017 \001(\r\022\025\n\rsnow_duration\030\020 \001(\r\022\022\n\nu"
      "nknown360\030\021 \001(\r\022\013\n\003sky\030\022 \001(\r\022\022\n\nunknown3"
      "31\030\023 \001(\r\022\033\n\023zone_exp_multiplier\030\024 \001(\002\022\016\n"
      "\006safe_y\030\025 \001(\002\022\016\n\006safe_x\030\026 \001(\002\022\016\n\006safe_z\030"
      "\027 \001(\002\022\r\n\005max_z\030\030 \001(\002\022\022\n\nunderworld\030\031 \001(\002"
      "\022\017\n\007minclip\030\032 \001(\002\022\017\n\007maxclip\030\033 \001(\002\022\023\n\013un"
      "known_end\030\034 \001(\r\022\030\n\020zone_short_name2\030\035 \001("
      "\t\022\022\n\nunknown672\030\036 \001(\t\022\017\n\007zone_id\030\037 \001(\r\022\025"
      "\n\rzone_instance\030  \001(\r\022\022\n\nunknown688\030! \001("
      "\r\022\022\n\nunknown692\030\" \001(\r\022\023\n\013fog_density\030# \001"
      "(\002\022\025\n\rsuspend_buffs\030$ \001(\r\"\274\001\n\017WearChange"
      "Event\022\020\n\010spawn_id\030\001 \001(\r\022\020\n\010material\030\002 \001("
      "\r\022\021\n\tunknown06\030\003 \001(\r\022\026\n\016elite_material\030\004"
      " \001(\r\022\030\n\020hero_forge_model\030\005 \001(\r\022\021\n\tunknow"
      "n18\030\006 \001(\r\022\027\n\005color\030\007 \001(\0132\010.pb.Tint\022\024\n\014we"
      "ar_slot_id\030\010 \001(\r\"3\n\020DeleteSpawnEvent\022\020\n\010"
      "spawn_id\030\001 \001(\r\022\r\n\005decay\030\002 \001(\r\";\n\007HPEvent"
      "\022\020\n\010spawn_id\030\001 \001(\r\022\016\n\006cur_hp\030\002 \001(\r\022\016\n\006ma"
      "x_hp\030\003 \001(\r\"\234\002\n\031PlayerPositionUpdateEvent"
      "\022\020\n\010spawn_id\030\001 \001(\r\022\025\n\rdelta_heading\030\002 \001("
      "\005\022\r\n\005x_pos\030\003 \001(\005\022\023\n\013padding0002\030\004 \001(\005\022\r\n"
      "\005y_pos\030\005 \001(\005\022\021\n\tanimation\030\006 \001(\005\022\023\n\013paddi"
      "ng0006\030\007 \001(\005\022\r\n\005z_pos\030\010 \001(\005\022\017\n\007delta_y\030\t"
      " \001(\005\022\017\n\007delta_x\030\n \001(\005\022\017\n\007heading\030\013 \001(\005\022\023"
      "\n\013padding0014\030\014 \001(\005\022\017\n\007delta_z\030\r \001(\005\022\023\n\013"
      "padding0018\030\016 \001(\005\"@\n\016AnimationEvent\022\017\n\007s"
      "pawnid\030\001 \001(\r\022\r\n\005speed\030\002 \001(\r\022\016\n\006action\030\003 "
      "\001(\r\"\325\017\n\nSpawnEvent\022\023\n\013unknown0000\030\001 \001(\r\022"
      "\n\n\002gm\030\002 \001(\r\022\023\n\013unknown0003\030\003 \001(\r\022\016\n\006aait"
      "le\030\004 \001(\r\022\023\n\013unknown0004\030\005 \001(\r\022\014\n\004anon\030\006 "
      "\001(\r\022\014\n\004face\030\007 \001(\r\022\014\n\004name\030\010 \001(\t\022\r\n\005deity"
      "\030\t \001(\r\022\023\n\013unknown0073\030\n \001(\r\022\014\n\004size\030\013 \001("
      "\002\022\023\n\013unknown0079\030\014 \001(\r\022\013\n\003NPC\030\r \001(\r\022\r\n\005i"
      "nvis\030\016 \001(\r\022\021\n\thaircolor\030\017 \001(\r\022\r\n\005curHp\030\020"
      " \001(\r\022\016\n\006max_hp\030\021 \001(\r\022\020\n\010findable\030\022 \001(\r\022\023"
      "\n\013unknown0089\030\023 \001(\r\022\024\n\014deltaHeading\030\024 \001("
      "\005\022\t\n\001x\030\025 \001(\005\022\023\n\013padding0054\030\026 \001(\005\022\t\n\001y\030\027"
      " \001(\005\022\021\n\tanimation\030\030 \001(\005\022\023\n\013padding0058\030\031"
      " \001(\005\022\t\n\001z\030\032 \001(\005\022\016\n\006deltaY\030\033 \001(\005\022\016\n\006delta"
      "X\030\034 \001(\005\022\017\n\007heading\030\035 \001(\r\022\023\n\013padding0066\030"
      "\036 \001(\005\022\016\n\006deltaZ\030\037 \001(\005\022\023\n\013padding0070\030  \001"
      "(\005\022\021\n\teyecolor1\030! \001(\r\022\023\n\013unknown0115\030\" \001"
      "(\r\022\022\n\nStandState\030# \001(\r\022\030\n\020drakkin_herita"
      "ge\030$ \001(\r\022\026\n\016drakkin_tattoo\030% \001(\r\022\027\n\017drak"
      "kin_details\030& \001(\r\022\020\n\010showhelm\030\' \001(\r\022\023\n\013u"
      "nknown0140\030( \001(\r\022\016\n\006is_npc\030) \001(\r\022\021\n\thair"
      "style\030* \001(\r\022\r\n\005beard\030+ \001(\r\022\023\n\013unknown014"
      "7\030, \001(\r\022\r\n\005level\030- \001(\r\022\023\n\013PlayerState\030. "
      "\001(\r\022\022\n\nbeardcolor\030/ \001(\r\022\016\n\006suffix\0300 \001(\t\022"
      "\022\n\npetOwnerId\0301 \001(\r\022\021\n\tguildrank\0302 \001(\r\022\023"
      "\n\013unknown0194\0303 \001(\r\022%\n\tequipment\0304 \001(\0132\022"
      ".pb.TextureProfile\022\020\n\010runspeed\0305 \001(\002\022\013\n\003"
      "afk\0306 \001(\r\022\017\n\007guildID\0307 \001(\r\022\r\n\005title\0308 \001("
      "\t\022\023\n\013unknown0274\0309 \001(\r\022\023\n\013set_to_0xFF\030: "
      "\001(\r\022\014\n\004helm\030; \001(\r\022\014\n\004race\030< \001(\r\022\023\n\013unkno"
      "wn0288\030= \001(\r\022\020\n\010lastName\030> \001(\t\022\021\n\twalksp"
      "eed\030\? \001(\002\022\023\n\013unknown0328\030@ \001(\r\022\016\n\006is_pet"
      "\030A \001(\r\022\r\n\005light\030B \001(\r\022\016\n\006class_\030C \001(\r\022\021\n"
      "\teyecolor2\030D \001(\r\022\017\n\007flymode\030E \001(\r\022\016\n\006gen"
      "der\030F \001(\r\022\020\n\010bodytype\030G \001(\r\022\023\n\013unknown03"
      "36\030H \001(\r\022\024\n\014equip_chest2\030I \001(\r\022\023\n\013mount_"
      "color\030J \001(\r\022\017\n\007spawnId\030K \001(\r\022\023\n\013unknown0"
      "344\030L \001(\r\022\023\n\013IsMercenary\030M \001(\r\022\'\n\016equipm"
      "ent_tint\030N \001(\0132\017.pb.TintProfile\022\013\n\003lfg\030O"
      " \001(\r\022\032\n\022DestructibleObject\030P \001(\010\022\031\n\021Dest"
      "ructibleModel\030R \001(\t\022\031\n\021DestructibleName2"
      "\030S \001(\t\022\032\n\022DestructibleString\030T \001(\t\022\036\n\026De"
      "structibleAppearance\030U \001(\r\022\030\n\020Destructib"
      "leUnk1\030V \001(\r\022\027\n\017DestructibleID1\030W \001(\r\022\027\n"
      "\017DestructibleID2\030X \001(\r\022\027\n\017DestructibleID"
      "3\030Y \001(\r\022\027\n\017DestructibleID4\030Z \001(\r\022\030\n\020Dest"
      "ructibleUnk2\030[ \001(\r\022\030\n\020DestructibleUnk3\030\\"
      " \001(\r\022\030\n\020DestructibleUnk4\030] \001(\r\022\030\n\020Destru"
      "ctibleUnk5\030^ \001(\r\022\030\n\020DestructibleUnk6\030_ \001"
      "(\r\022\030\n\020DestructibleUnk7\030` \001(\r\022\030\n\020Destruct"
      "ibleUnk8\030a \001(\r\022\030\n\020DestructibleUnk9\030b \001(\r"
      "\022\036\n\026targetable_with_hotkey\030c \001(\010\022\021\n\tshow"
      "_name\030d \001(\010\"\201\001\n\036AlternateAdvancementStat"
      "sEvent\022\022\n\nexperience\030\001 \001(\r\022\017\n\007unspent\030\002 "
      "\001(\r\022\022\n\nunknown006\030\003 \001(\r\022\022\n\npercentage\030\004 "
      "\001(\r\022\022\n\nunknown009\030\005 \001(\r\"\023\n\021ZoneCompleteE"
      "vent\"o\n\nUseAAEvent\022\r\n\005begin\030\001 \001(\r\022\017\n\007abi"
      "lity\030\002 \001(\r\022\013\n\003end\030\003 \001(\r\022\016\n\006action\030\004 \001(\r\022"
      "\021\n\ttarget_id\030\005 \001(\r\022\021\n\texp_value\030\006 \001(\r\"\217\001"
      "\n\tDailyGain\022\022\n\naccount_id\030\001 \001(\005\022\024\n\014chara"
      "cter_id\030\002 \001(\005\022\025\n\rlevels_gained\030\003 \001(\005\022\031\n\021"
      "experience_gained\030\004 \001(\005\022\024\n\014money_earned\030"
      "\005 \001(\005\022\020\n\010identity\030\006 \001(\t*J\n\tErrorType\022\n\n\006"
      "ERR_OK\020\000\022\017\n\013ERR_Request\020\001\022\020\n\014ERR_Interna"
      "l\020\002\022\016\n\nERR_Failed\020\003*\200\001\n\nEntityType\022\007\n\003NP"
      "C\020\000\022\n\n\006Client\020\001\022\007\n\003Mob\020\002\022\r\n\tMercenary\020\003\022"
      "\n\n\006Corpse\020\004\022\010\n\004Door\020\005\022\n\n\006Object\020\006\022\010\n\004Tra"
      "p\020\007\022\n\n\006Beacon\020\t\022\r\n\tEncounter\020\n*\300\002\n\tDeity"
      "Type\022\013\n\007Unknown\020\000\022\020\n\013Agnostic_LB\020\214\001\022\021\n\014B"
      "ertoxxulous\020\311\001\022\021\n\014BrellSirilis\020\312\001\022\017\n\nCaz"
      "icThule\020\313\001\022\021\n\014ErollisiMarr\020\314\001\022\020\n\013Bristle"
      "bane\020\315\001\022\r\n\010Innoruuk\020\316\001\022\013\n\006Karana\020\317\001\022\022\n\rM"
      "ithanielMarr\020\320\001\022\013\n\006Prexus\020\321\001\022\016\n\tQuelliou"
      "s\020\322\001\022\016\n\tRallosZek\020\323\001\022\017\n\nRodcetNife\020\324\001\022\016\n"
      "\tSolusekRo\020\325\001\022\020\n\013TheTribunal\020\326\001\022\013\n\006Tunar"
      "e\020\327\001\022\014\n\007Veeshan\020\330\001\022\r\n\010Agnostic\020\214\003*\341\003\n\014De"
      "ityTypeBit\022\021\n\rbit_DeityNone\020\000\022\025\n\021bit_Dei"
      "tyAgnostic\020\001\022\031\n\025bit_DeityBertoxxulous\020\002\022"
      "\031\n\025bit_DeityBrellSirilis\020\004\022\027\n\023bit_DeityC"
      "azicThule\020\010\022\031\n\025bit_DeityErollisiMarr\020\020\022\030"
      "\n\024bit_DeityBristlebane\020 \022\025\n\021bit_DeityInn"
      "oruuk\020@\022\024\n\017bit_DeityKarana\020\200\001\022\033\n\026bit_Dei"
      "tyMithanielMarr\020\200\002\022\024\n\017bit_DeityPrexus\020\200\004"
      "\022\027\n\022bit_DeityQuellious\020\200\010\022\027\n\022bit_DeityRa"
      "llosZek\020\200\020\022\030\n\023bit_DeityRodcetNife\020\200 \022\027\n\022"
      "bit_DeitySolusekRo\020\200@\022\032\n\024bit_DeityTheTri"
      "bunal\020\200\200\001\022\025\n\017bit_DeityTunare\020\200\200\002\022\026\n\020bit_"
      "DeityVeeshan\020\200\200\004\022\023\n\014bit_DeityAll\020\377\377\377\177*\347\013"
      "\n\013MessageType\022\013\n\007Auction\020\000\022\t\n\005Group\020\002\022\t\n"
      "\005Shout\020\003\022\014\n\010Auction4\020\004\022\007\n\003OOC\020\005\022\r\n\tBroad"
      "cast\020\006\022\010\n\004Tell\020\007\022\007\n\003Say\020\010\022\n\n\006Tell14\020\016\022\010\n"
      "\004Raid\020\017\022\t\n\005Guild\020\021\022\020\n\014GMSayWeird18\020\022\022\020\n\014"
      "LocalEmote20\020\024\022\016\n\nFellowship\020\025\022\t\n\005Emote\020"
      "\026\022\013\n\006Say256\020\200\002\022\014\n\007Tell257\020\201\002\022\r\n\010Group258"
      "\020\202\002\022\r\n\010Shout259\020\203\002\022\017\n\nAuction260\020\204\002\022\013\n\006O"
      "OC261\020\205\002\022\021\n\014Broadcast262\020\206\002\022\014\n\007Tell263\020\207"
      "\002\022\013\n\006Say264\020\210\002\022\020\n\013YouHitOther\020\211\002\022\021\n\014Othe"
      "rHitsYou\020\212\002\022\021\n\014YouMissOther\020\213\002\022\023\n\016OtherM"
      "issesYou\020\214\002\022\013\n\006Skills\020\216\002\022\020\n\013Disciplines\020"
      "\217\002\022\r\n\010Guild273\020\221\002\022\n\n\005GMSay\020\222\002\022\022\n\rMerchan"
      "tOffer\020\223\002\022\024\n\017MerchantBuySell\020\224\002\022\022\n\rFello"
      "wship277\020\225\002\022\r\n\010Emote278\020\226\002\022\016\n\tOtherHits\020"
      "\227\002\022\020\n\013OtherMisses\020\230\002\022\010\n\003Who\020\231\002\022\020\n\013YellFo"
      "rHelp\020\232\002\022\r\n\010NonMelee\020\233\002\022\014\n\007WornOff\020\234\002\022\017\n"
      "\nMoneySplit\020\235\002\022\021\n\014LootMessages\020\236\002\022\r\n\010Dic"
      "eRoll\020\237\002\022\020\n\013OtherSpells\020\240\002\022\021\n\014SpellFailu"
      "re\020\241\002\022\t\n\004Chat\020\242\002\022\r\n\010Channel1\020\243\002\022\r\n\010Chann"
      "el2\020\244\002\022\r\n\010Channel3\020\245\002\022\r\n\010Channel4\020\246\002\022\r\n\010"
      "Channel5\020\247\002\022\r\n\010Channel6\020\250\002\022\r\n\010Channel7\020\251"
      "\002\022\r\n\010Channel8\020\252\002\022\r\n\010Channel9\020\253\002\022\016\n\tChann"
      "el10\020\254\002\022\016\n\tCritMelee\020\255\002\022\017\n\nSpellCrits\020\256\002"
      "\022\017\n\nTooFarAway\020\257\002\022\017\n\nNPCRampage\020\260\002\022\016\n\tNP"
      "CFlurry\020\261\002\022\016\n\tNPCEnrage\020\262\002\022\014\n\007SayEcho\020\263\002"
      "\022\r\n\010TellEcho\020\264\002\022\016\n\tGroupEcho\020\265\002\022\016\n\tGuild"
      "Echo\020\266\002\022\014\n\007OOCEcho\020\267\002\022\r\n\010Auction2\020\270\002\022\016\n\t"
      "ShoutECho\020\271\002\022\016\n\tEmoteEcho\020\272\002\022\016\n\tChat1Ech"
      "o\020\273\002\022\016\n\tChat2Echo\020\274\002\022\016\n\tChat3Echo\020\275\002\022\016\n\t"
      "Chat4Echo\020\276\002\022\016\n\tChat5Echo\020\277\002\022\016\n\tChat6Ech"
      "o\020\300\002\022\016\n\tChat7Echo\020\301\002\022\016\n\tChat8Echo\020\302\002\022\016\n\t"
      "Chat9Echo\020\303\002\022\017\n\nChat10Echo\020\304\002\022\016\n\tDoTDama"
      "ge\020\305\002\022\r\n\010ItemLink\020\306\002\022\014\n\007RaidSay\020\307\002\022\n\n\005My"
      "Pet\020\310\002\022\007\n\002DS\020\311\002\022\017\n\nLeadership\020\312\002\022\016\n\tPetF"
      "lurry\020\313\002\022\014\n\007PetCrit\020\314\002\022\020\n\013FocusEffect\020\315\002"
      "\022\017\n\nExperience\020\316\002\022\013\n\006System\020\317\002\022\r\n\010PetSpe"
      "ll\020\320\002\022\020\n\013PetResponse\020\321\002\022\017\n\nItemSpeech\020\322\002"
      "\022\022\n\rStrikeThrough\020\323\002\022\t\n\004Stun\020\324\002*\257\006\n\010Body"
      "Type\022\024\n\020BodyType_Unknown\020\000\022\025\n\021BodyType_H"
      "umanoid\020\001\022\030\n\024BodyType_Lycanthrope\020\002\022\023\n\017B"
      "odyType_Undead\020\003\022\022\n\016BodyType_Giant\020\004\022\026\n\022"
      "BodyType_Construct\020\005\022\030\n\024BodyType_Extrapl"
      "anar\020\006\022\024\n\020BodyType_Magical\020\007\022\033\n\027BodyType"
      "_SummonedUndead\020\010\022\026\n\022BodyType_RaidGiant\020"
      "\t\022\025\n\021BodyType_NoTarget\020\013\022\024\n\020BodyType_Vam"
      "pire\020\014\022\026\n\022BodyType_Atenha_Ra\020\r\022\033\n\027BodyTy"
      "pe_Greater_Akheva\020\016\022\026\n\022BodyType_Khati_Sh"
      "a\020\017\022\021\n\rBodyType_Seru\020\020\022\030\n\024BodyType_Draz_"
      "Nurakk\020\022\022\020\n\014BodyType_Zek\020\023\022\024\n\020BodyType_L"
      "uggald\020\024\022\023\n\017BodyType_Animal\020\025\022\023\n\017BodyTyp"
      "e_Insect\020\026\022\024\n\020BodyType_Monster\020\027\022\025\n\021Body"
      "Type_Summoned\020\030\022\022\n\016BodyType_Plant\020\031\022\023\n\017B"
      "odyType_Dragon\020\032\022\026\n\022BodyType_Summoned2\020\033"
      "\022\026\n\022BodyType_Summoned3\020\034\022\032\n\026BodyType_Vel"
      "iousDragon\020\036\022\024\n\020BodyType_Dragon3\020 \022\022\n\016Bo"
      "dyType_Boxes\020!\022\025\n\021BodyType_Muramite\020\"\022\026\n"
      "\022BodyType_NoTarget2\020<\022\025\n\021BodyType_SwarmP"
      "et\020\?\022\025\n\021BodyType_InvisMan\020B\022\024\n\020BodyType_"
      "Special\020C*/\n\nGenderType\022\010\n\004Male\020\000\022\n\n\006Fem"
      "ale\020\001\022\013\n\007Neutral\020\002*\302e\n\006OpCode\022\016\n\nOP_Unkn"
      "own\020\000\022\025\n\021OP_ExploreUnknown\020\001\022\r\n\tOP_0x019"
      "3\020\002\022\024\n\020OP_ZoneCompleted\020\003\022\017\n\013OP_AAAction"
      "\020\004\022\022\n\016OP_AAExpUpdate\020\005\022\024\n\020OP_AcceptNewTa"
      "sk\020\006\022\020\n\014OP_AckPacket\020\007\022\r\n\tOP_Action\020\010\022\016\n"
      "\nOP_Action2\020\t\022\026\n\022OP_AddNimbusEffect\020\n\022\024\n"
      "\020OP_AdventureData\020\013\022\027\n\023OP_AdventureDetai"
      "ls\020\014\022\026\n\022OP_AdventureFinish\020\r\022\024\n\020OP_Adven"
      "tureInfo\020\016\022\033\n\027OP_AdventureInfoRequest\020\017\022"
      " \n\034OP_AdventureLeaderboardReply\020\020\022\"\n\036OP_"
      "AdventureLeaderboardRequest\020\021\022 \n\034OP_Adve"
      "ntureMerchantPurchase\020\022\022\037\n\033OP_AdventureM"
      "erchantRequest\020\023\022 \n\034OP_AdventureMerchant"
      "Response\020\024\022\034\n\030OP_AdventureMerchantSell\020\025"
      "\022\034\n\030OP_AdventurePointsUpdate\020\026\022\027\n\023OP_Adv"
      "entureRequest\020\027\022\032\n\026OP_AdventureStatsRepl"
      "y\020\030\022\034\n\030OP_AdventureStatsRequest\020\031\022\026\n\022OP_"
      "AdventureUpdate\020\032\022\033\n\027OP_AggroMeterLockTa"
      "rget\020\033\022\033\n\027OP_AggroMeterTargetInfo\020\034\022\027\n\023O"
      "P_AggroMeterUpdate\020\035\022\022\n\016OP_AltCurrency\020\036"
      "\022\037\n\033OP_AltCurrencyMerchantReply\020\037\022!\n\035OP_"
      "AltCurrencyMerchantRequest\020 \022\032\n\026OP_AltCu"
      "rrencyPurchase\020!\022\031\n\025OP_AltCurrencyReclai"
      "m\020\"\022\026\n\022OP_AltCurrencySell\020#\022\037\n\033OP_AltCur"
      "rencySellSelection\020$\022\020\n\014OP_Animation\020%\022\032"
      "\n\026OP_AnnoyingZoneUnknown\020&\022\022\n\016OP_ApplyPo"
      "ison\020\'\022\022\n\016OP_ApproveName\020(\022\023\n\017OP_Approve"
      "World\020)\022\022\n\016OP_ApproveZone\020*\022\r\n\tOP_Assist"
      "\020+\022\022\n\016OP_AssistGroup\020,\022\022\n\016OP_AugmentInfo"
      "\020-\022\022\n\016OP_AugmentItem\020.\022\021\n\rOP_AutoAttack\020"
      "/\022\022\n\016OP_AutoAttack2\0200\022\017\n\013OP_AutoFire\0201\022\020"
      "\n\014OP_Bandolier\0202\022\023\n\017OP_BankerChange\0203\022\r\n"
      "\tOP_Barter\0204\022\r\n\tOP_Bazaar\0205\022\024\n\020OP_Bazaar"
      "Inspect\0206\022\023\n\017OP_BazaarSearch\0207\022\023\n\017OP_Bec"
      "omeCorpse\0208\022\023\n\017OP_BecomeTrader\0209\022\016\n\nOP_B"
      "egging\020:\022\020\n\014OP_BeginCast\020;\022\021\n\rOP_Bind_Wo"
      "und\020<\022\023\n\017OP_BlockedBuffs\020=\022\020\n\014OP_BoardBo"
      "at\020>\022\013\n\007OP_Buff\020\?\022\021\n\rOP_BuffCreate\020@\022\030\n\024"
      "OP_BuffRemoveRequest\020A\022\n\n\006OP_Bug\020B\022\023\n\017OP"
      "_CameraEffect\020C\022\013\n\007OP_Camp\020D\022\026\n\022OP_Cance"
      "lSneakHide\020E\022\021\n\rOP_CancelTask\020F\022\022\n\016OP_Ca"
      "ncelTrade\020G\022\020\n\014OP_CastSpell\020H\022\021\n\rOP_Chan"
      "geSize\020I\022\025\n\021OP_ChannelMessage\020J\022\026\n\022OP_Ch"
      "aracterCreate\020K\022\035\n\031OP_CharacterCreateReq"
      "uest\020L\022\024\n\020OP_CharInventory\020M\022\014\n\010OP_Charm"
      "\020N\022\022\n\016OP_ChatMessage\020O\022\016\n\nOP_ClearAA\020P\022\030"
      "\n\024OP_ClearBlockedBuffs\020Q\022\037\n\033OP_ClearLead"
      "ershipAbilities\020R\022\024\n\020OP_ClearNPCMarks\020S\022"
      "\022\n\016OP_ClearObject\020T\022\023\n\017OP_ClearSurname\020U"
      "\022\020\n\014OP_ClickDoor\020V\022\022\n\016OP_ClickObject\020W\022\030"
      "\n\024OP_ClickObjectAction\020X\022\022\n\016OP_ClientErr"
      "or\020Y\022\022\n\016OP_ClientReady\020Z\022\026\n\022OP_ClientTim"
      "eStamp\020[\022\023\n\017OP_ClientUpdate\020\\\022\025\n\021OP_Clos"
      "eContainer\020]\022\031\n\025OP_CloseTributeMaster\020^\022"
      "\022\n\016OP_ColoredText\020_\022\024\n\020OP_CombatAbility\020"
      "`\022\016\n\nOP_Command\020a\022\025\n\021OP_CompletedTasks\020b"
      "\022\024\n\020OP_ConfirmDelete\020c\022\016\n\nOP_Consent\020d\022\022"
      "\n\016OP_ConsentDeny\020e\022\026\n\022OP_ConsentResponse"
      "\020f\022\017\n\013OP_Consider\020g\022\025\n\021OP_ConsiderCorpse"
      "\020h\022\016\n\nOP_Consume\020i\022\022\n\016OP_ControlBoat\020j\022\021"
      "\n\rOP_CorpseDrag\020k\022\021\n\rOP_CorpseDrop\020l\022\020\n\014"
      "OP_CrashDump\020m\022\031\n\025OP_CrystalCountUpdate\020"
      "n\022\024\n\020OP_CrystalCreate\020o\022\025\n\021OP_CrystalRec"
      "laim\020p\022\023\n\017OP_CustomTitles\020q\022\r\n\tOP_Damage"
      "\020r\022\014\n\010OP_Death\020s\022\026\n\022OP_DelegateAbility\020t"
      "\022\026\n\022OP_DeleteCharacter\020u\022\023\n\017OP_DeleteCha"
      "rge\020v\022\021\n\rOP_DeleteItem\020w\022\025\n\021OP_DeletePet"
      "ition\020x\022\022\n\016OP_DeleteSpawn\020y\022\022\n\016OP_Delete"
      "Spell\020z\022\023\n\017OP_DenyResponse\020{\022\r\n\tOP_Disar"
      "m\020|\022\022\n\016OP_DisarmTraps\020}\022\026\n\022OP_Discipline"
      "Timer\020~\022\027\n\023OP_DisciplineUpdate\020\177\022 \n\033OP_D"
      "iscordMerchantInventory\020\200\001\022 \n\033OP_DoGroup"
      "LeadershipAbility\020\201\001\022\024\n\017OP_DuelResponse\020"
      "\202\001\022\025\n\020OP_DuelResponse2\020\203\001\022\020\n\013OP_DumpName"
      "\020\204\001\022\013\n\006OP_Dye\020\205\001\022\023\n\016OP_DynamicWall\020\206\001\022\023\n"
      "\016OP_DzAddPlayer\020\207\001\022\024\n\017OP_DzChooseZone\020\210\001"
      "\022\021\n\014OP_DzCompass\020\211\001\022\037\n\032OP_DzExpeditionEn"
      "dsWarning\020\212\001\022\030\n\023OP_DzExpeditionInfo\020\213\001\022\030"
      "\n\023OP_DzExpeditionList\020\214\001\022\037\n\032OP_DzJoinExp"
      "editionConfirm\020\215\001\022\035\n\030OP_DzJoinExpedition"
      "Reply\020\216\001\022\026\n\021OP_DzLeaderStatus\020\217\001\022\024\n\017OP_D"
      "zListTimers\020\220\001\022\024\n\017OP_DzMakeLeader\020\221\001\022\024\n\017"
      "OP_DzMemberList\020\222\001\022\026\n\021OP_DzMemberStatus\020"
      "\223\001\022\024\n\017OP_DzPlayerList\020\224\001\022\016\n\tOP_DzQuit\020\225\001"
      "\022\026\n\021OP_DzRemovePlayer\020\226\001\022\024\n\017OP_DzSwapPla"
      "yer\020\227\001\022\r\n\010OP_Emote\020\230\001\022\026\n\021OP_EndLootReque"
      "st\020\231\001\022\027\n\022OP_EnduranceUpdate\020\232\001\022\021\n\014OP_Ent"
      "erChat\020\233\001\022\022\n\rOP_EnterWorld\020\234\001\022\021\n\014OP_EnvD"
      "amage\020\235\001\022\025\n\020OP_ExpansionInfo\020\236\001\022\021\n\014OP_Ex"
      "pUpdate\020\237\001\022\022\n\rOP_FaceChange\020\240\001\022\020\n\013OP_Fee"
      "dback\020\241\001\022\022\n\rOP_FeignDeath\020\242\001\022\030\n\023OP_Fello"
      "wshipUpdate\020\243\001\022\027\n\022OP_FindPersonReply\020\244\001\022"
      "\031\n\024OP_FindPersonRequest\020\245\001\022\023\n\016OP_FinishT"
      "rade\020\246\001\022\024\n\017OP_FinishWindow\020\247\001\022\025\n\020OP_Fini"
      "shWindow2\020\250\001\022\017\n\nOP_Fishing\020\251\001\022\r\n\010OP_Flin"
      "g\020\252\001\022\026\n\021OP_FloatListThing\020\253\001\022\016\n\tOP_Forag"
      "e\020\254\001\022\027\n\022OP_ForceFindPerson\020\255\001\022\030\n\023OP_Form"
      "attedMessage\020\256\001\022\022\n\rOP_FriendsWho\020\257\001\022\024\n\017O"
      "P_GetGuildMOTD\020\260\001\022\031\n\024OP_GetGuildMOTDRepl"
      "y\020\261\001\022\025\n\020OP_GetGuildsList\020\262\001\022\021\n\014OP_GiveMo"
      "ney\020\263\001\022\022\n\rOP_GMApproval\020\264\001\022\023\n\016OP_GMBecom"
      "eNPC\020\265\001\022\023\n\016OP_GMDelCorpse\020\266\001\022\023\n\016OP_GMEmo"
      "teZone\020\267\001\022\025\n\020OP_GMEndTraining\020\270\001\022\035\n\030OP_G"
      "MEndTrainingResponse\020\271\001\022\016\n\tOP_GMFind\020\272\001\022"
      "\016\n\tOP_GMGoto\020\273\001\022\020\n\013OP_GMHideMe\020\274\001\022\016\n\tOP_"
      "GMKick\020\275\001\022\016\n\tOP_GMKill\020\276\001\022\022\n\rOP_GMLastNa"
      "me\020\277\001\022\024\n\017OP_GMNameChange\020\300\001\022\026\n\021OP_GMSear"
      "chCorpse\020\301\001\022\021\n\014OP_GMServers\020\302\001\022\020\n\013OP_GMS"
      "ummon\020\303\001\022\020\n\013OP_GMToggle\020\304\001\022\022\n\rOP_GMTrain"
      "ing\020\305\001\022\024\n\017OP_GMTrainSkill\020\306\001\022\033\n\026OP_GMTra"
      "inSkillConfirm\020\307\001\022\025\n\020OP_GMZoneRequest\020\310\001"
      "\022\026\n\021OP_GMZoneRequest2\020\311\001\022\023\n\016OP_GroundSpa"
      "wn\020\312\001\022\030\n\023OP_GroupAcknowledge\020\313\001\022\031\n\024OP_Gr"
      "oupCancelInvite\020\314\001\022\023\n\016OP_GroupDelete\020\315\001\022"
      "\024\n\017OP_GroupDisband\020\316\001\022\031\n\024OP_GroupDisband"
      "Other\020\317\001\022\027\n\022OP_GroupDisbandYou\020\320\001\022\023\n\016OP_"
      "GroupFollow\020\321\001\022\024\n\017OP_GroupFollow2\020\322\001\022\023\n\016"
      "OP_GroupInvite\020\323\001\022\024\n\017OP_GroupInvite2\020\324\001\022"
      "\031\n\024OP_GroupLeaderChange\020\325\001\022\037\n\032OP_GroupLe"
      "adershipAAUpdate\020\326\001\022\027\n\022OP_GroupMakeLeade"
      "r\020\327\001\022\023\n\016OP_GroupMentor\020\330\001\022\022\n\rOP_GroupRol"
      "es\020\331\001\022\023\n\016OP_GroupUpdate\020\332\001\022\024\n\017OP_GroupUp"
      "dateB\020\333\001\022\033\n\026OP_GroupUpdateLeaderAA\020\334\001\022\021\n"
      "\014OP_GuildBank\020\335\001\022\031\n\024OP_GuildBankItemList"
      "\020\336\001\022\023\n\016OP_GuildCreate\020\337\001\022\023\n\016OP_GuildDele"
      "te\020\340\001\022\023\n\016OP_GuildDemote\020\341\001\022\023\n\016OP_GuildIn"
      "vite\020\342\001\022\031\n\024OP_GuildInviteAccept\020\343\001\022\023\n\016OP"
      "_GuildLeader\020\344\001\022\026\n\021OP_GuildManageAdd\020\345\001\022"
      "\031\n\024OP_GuildManageBanker\020\346\001\022\031\n\024OP_GuildMa"
      "nageRemove\020\347\001\022\031\n\024OP_GuildManageStatus\020\350\001"
      "\022\036\n\031OP_GuildMemberLevelUpdate\020\351\001\022\027\n\022OP_G"
      "uildMemberList\020\352\001\022\031\n\024OP_GuildMemberUpdat"
      "e\020\353\001\022\021\n\014OP_GuildMOTD\020\354\001\022\022\n\rOP_GuildPeace"
      "\020\355\001\022\024\n\017OP_GuildPromote\020\356\001\022\027\n\022OP_GuildPub"
      "licNote\020\357\001\022\023\n\016OP_GuildRemove\020\360\001\022\022\n\rOP_Gu"
      "ildsList\020\361\001\022\023\n\016OP_GuildStatus\020\362\001\022\030\n\023OP_G"
      "uildTributeInfo\020\363\001\022 \n\033OP_GuildUpdateURLA"
      "ndChannel\020\364\001\022\020\n\013OP_GuildWar\020\365\001\022\021\n\014OP_Hea"
      "rtbeat\020\366\001\022\014\n\007OP_Hide\020\367\001\022\022\n\rOP_HideCorpse"
      "\020\370\001\022\020\n\013OP_HPUpdate\020\371\001\022\020\n\013OP_Illusion\020\372\001\022"
      "\025\n\020OP_IncreaseStats\020\373\001\022\027\n\022OP_InitialHPUp"
      "date\020\374\001\022\030\n\023OP_InitialMobHealth\020\375\001\022\025\n\020OP_"
      "InspectAnswer\020\376\001\022\024\n\017OP_InspectBuffs\020\377\001\022\034"
      "\n\027OP_InspectMessageUpdate\020\200\002\022\026\n\021OP_Inspe"
      "ctRequest\020\201\002\022\024\n\017OP_InstillDoubt\020\202\002\022\025\n\020OP"
      "_InterruptCast\020\203\002\022\025\n\020OP_ItemLinkClick\020\204\002"
      "\022\030\n\023OP_ItemLinkResponse\020\205\002\022\024\n\017OP_ItemLin"
      "kText\020\206\002\022\020\n\013OP_ItemName\020\207\002\022\022\n\rOP_ItemPac"
      "ket\020\210\002\022\023\n\016OP_ItemPreview\020\211\002\022\027\n\022OP_ItemRe"
      "castDelay\020\212\002\022\027\n\022OP_ItemVerifyReply\020\213\002\022\031\n"
      "\024OP_ItemVerifyRequest\020\214\002\022\027\n\022OP_ItemViewU"
      "nknown\020\215\002\022\014\n\007OP_Jump\020\216\002\022\017\n\nOP_KeyRing\020\217\002"
      "\022\025\n\020OP_KnowledgeBase\020\220\002\022\022\n\rOP_LDoNButton"
      "\020\221\002\022\027\n\022OP_LDoNDisarmTraps\020\222\002\022\023\n\016OP_LDoNI"
      "nspect\020\223\002\022\020\n\013OP_LDoNOpen\020\224\002\022\024\n\017OP_LDoNPi"
      "ckLock\020\225\002\022\026\n\021OP_LDoNSenseTraps\020\226\002\022\033\n\026OP_"
      "LeadershipExpToggle\020\227\002\022\033\n\026OP_LeadershipE"
      "xpUpdate\020\230\002\022\026\n\021OP_LeaveAdventure\020\231\002\022\021\n\014O"
      "P_LeaveBoat\020\232\002\022\027\n\022OP_LevelAppearance\020\233\002\022"
      "\023\n\016OP_LevelUpdate\020\234\002\022\025\n\020OP_LFGAppearance"
      "\020\235\002\022\022\n\rOP_LFGCommand\020\236\002\022\034\n\027OP_LFGGetMatc"
      "hesRequest\020\237\002\022\035\n\030OP_LFGGetMatchesRespons"
      "e\020\240\002\022\023\n\016OP_LFGResponse\020\241\002\022\017\n\nOP_LFGuild\020"
      "\242\002\022\022\n\rOP_LFPCommand\020\243\002\022\034\n\027OP_LFPGetMatch"
      "esRequest\020\244\002\022\035\n\030OP_LFPGetMatchesResponse"
      "\020\245\002\022\023\n\016OP_LinkedReuse\020\246\002\022\024\n\017OP_LoadSpell"
      "Set\020\247\002\022\017\n\nOP_LocInfo\020\250\002\022\030\n\023OP_LockoutTim"
      "erInfo\020\251\002\022\r\n\010OP_Login\020\252\002\022\025\n\020OP_LoginAcce"
      "pted\020\253\002\022\025\n\020OP_LoginComplete\020\254\002\022\025\n\020OP_Log"
      "inUnknown1\020\255\002\022\025\n\020OP_LoginUnknown2\020\256\002\022\016\n\t"
      "OP_Logout\020\257\002\022\023\n\016OP_LogoutReply\020\260\002\022\021\n\014OP_"
      "LogServer\020\261\002\022\024\n\017OP_LootComplete\020\262\002\022\020\n\013OP"
      "_LootItem\020\263\002\022\023\n\016OP_LootRequest\020\264\002\022\022\n\rOP_"
      "ManaChange\020\265\002\022\022\n\rOP_ManaUpdate\020\266\002\022\017\n\nOP_"
      "MarkNPC\020\267\002\022\017\n\nOP_Marquee\020\270\002\022\025\n\020OP_Memori"
      "zeSpell\020\271\002\022\014\n\007OP_Mend\020\272\002\022\024\n\017OP_MendHPUpd"
      "ate\020\273\002\022\027\n\022OP_MercenaryAssign\020\274\002\022\030\n\023OP_Me"
      "rcenaryCommand\020\275\002\022\034\n\027OP_MercenaryDataReq"
      "uest\020\276\002\022\035\n\030OP_MercenaryDataResponse\020\277\002\022\033"
      "\n\026OP_MercenaryDataUpdate\020\300\002\022\"\n\035OP_Mercen"
      "aryDataUpdateRequest\020\301\002\022\030\n\023OP_MercenaryD"
      "ismiss\020\302\002\022\025\n\020OP_MercenaryHire\020\303\002\022\037\n\032OP_M"
      "ercenarySuspendRequest\020\304\002\022 \n\033OP_Mercenar"
      "ySuspendResponse\020\305\002\022\026\n\021OP_MercenaryTimer"
      "\020\306\002\022\035\n\030OP_MercenaryTimerRequest\020\307\002\022\031\n\024OP"
      "_MercenaryUnknown1\020\310\002\022\"\n\035OP_MercenaryUns"
      "uspendResponse\020\311\002\022\032\n\025OP_MobEnduranceUpda"
      "te\020\312\002\022\021\n\014OP_MobHealth\020\313\002\022\025\n\020OP_MobManaUp"
      "date\020\314\002\022\021\n\014OP_MobRename\020\315\002\022\021\n\014OP_MobUpda"
      "te\020\316\002\022\025\n\020OP_MoneyOnCorpse\020\317\002\022\023\n\016OP_Money"
      "Update\020\320\002\022\014\n\007OP_MOTD\020\321\002\022\020\n\013OP_MoveCoin\020\322"
      "\002\022\020\n\013OP_MoveDoor\020\323\002\022\020\n\013OP_MoveItem\020\324\002\022\030\n"
      "\023OP_MoveLogDisregard\020\325\002\022\026\n\021OP_MoveLogReq"
      "uest\020\326\002\022\024\n\017OP_MultiLineMsg\020\327\002\022\020\n\013OP_NewS"
      "pawn\020\330\002\022\032\n\025OP_NewTitlesAvailable\020\331\002\022\017\n\nO"
      "P_NewZone\020\332\002\022\026\n\021OP_OnLevelMessage\020\333\002\022\025\n\020"
      "OP_OpenContainer\020\334\002\022\033\n\026OP_OpenDiscordMer"
      "chant\020\335\002\022\036\n\031OP_OpenGuildTributeMaster\020\336\002"
      "\022\025\n\020OP_OpenInventory\020\337\002\022\032\n\025OP_OpenNewTas"
      "ksWindow\020\340\002\022\031\n\024OP_OpenTributeMaster\020\341\002\022\027"
      "\n\022OP_PDeletePetition\020\342\002\022\025\n\020OP_PetBuffWin"
      "dow\020\343\002\022\023\n\016OP_PetCommands\020\344\002\022\027\n\022OP_PetCom"
      "mandState\020\345\002\022\017\n\nOP_PetHoTT\020\346\002\022\020\n\013OP_Peti"
      "tion\020\347\002\022\023\n\016OP_PetitionBug\020\350\002\022\027\n\022OP_Petit"
      "ionCheckIn\020\351\002\022\030\n\023OP_PetitionCheckout\020\352\002\022"
      "\031\n\024OP_PetitionCheckout2\020\353\002\022\026\n\021OP_Petitio"
      "nDelete\020\354\002\022\023\n\016OP_PetitionQue\020\355\002\022\027\n\022OP_Pe"
      "titionRefresh\020\356\002\022\027\n\022OP_PetitionResolve\020\357"
      "\002\022\026\n\021OP_PetitionSearch\020\360\002\022\035\n\030OP_Petition"
      "SearchResults\020\361\002\022\032\n\025OP_PetitionSearchTex"
      "t\020\362\002\022\032\n\025OP_PetitionUnCheckout\020\363\002\022\026\n\021OP_P"
      "etitionUpdate\020\364\002\022\022\n\rOP_PickPocket\020\365\002\022\025\n\020"
      "OP_PlayerProfile\020\366\002\022\026\n\021OP_PlayerStateAdd"
      "\020\367\002\022\031\n\024OP_PlayerStateRemove\020\370\002\022\034\n\027OP_Pla"
      "yEverquestRequest\020\371\002\022\035\n\030OP_PlayEverquest"
      "Response\020\372\002\022\017\n\nOP_PlayMP3\020\373\002\022\014\n\007OP_Poll\020"
      "\374\002\022\024\n\017OP_PollResponse\020\375\002\022\025\n\020OP_PopupResp"
      "onse\020\376\002\022\026\n\021OP_PostEnterWorld\020\377\002\022\022\n\rOP_Po"
      "tionBelt\020\200\003\022\026\n\021OP_PreLogoutReply\020\201\003\022\034\n\027O"
      "P_PurchaseLeadershipAA\020\202\003\022\"\n\035OP_PVPLeade"
      "rBoardDetailsReply\020\203\003\022$\n\037OP_PVPLeaderBoa"
      "rdDetailsRequest\020\204\003\022\033\n\026OP_PVPLeaderBoard"
      "Reply\020\205\003\022\035\n\030OP_PVPLeaderBoardRequest\020\206\003\022"
      "\020\n\013OP_PVPStats\020\207\003\022\032\n\025OP_QueryResponseThi"
      "ng\020\210\003\022\022\n\rOP_RaidInvite\020\211\003\022\020\n\013OP_RaidJoin"
      "\020\212\003\022\022\n\rOP_RaidUpdate\020\213\003\022\033\n\026OP_RandomName"
      "Generator\020\214\003\022\023\n\016OP_RandomReply\020\215\003\022\021\n\014OP_"
      "RandomReq\020\216\003\022\020\n\013OP_ReadBook\020\217\003\022\031\n\024OP_Rec"
      "ipeAutoCombine\020\220\003\022\025\n\020OP_RecipeDetails\020\221\003"
      "\022\023\n\016OP_RecipeReply\020\222\003\022\027\n\022OP_RecipesFavor"
      "ite\020\223\003\022\025\n\020OP_RecipesSearch\020\224\003\022\027\n\022OP_Recl"
      "aimCrystals\020\225\003\022\020\n\013OP_ReloadUI\020\226\003\022\026\n\021OP_R"
      "emoveAllDoors\020\227\003\022\032\n\025OP_RemoveBlockedBuff"
      "s\020\230\003\022\032\n\025OP_RemoveNimbusEffect\020\231\003\022\022\n\rOP_R"
      "emoveTrap\020\232\003\022\016\n\tOP_Report\020\233\003\022\026\n\021OP_ReqCl"
      "ientSpawn\020\234\003\022\022\n\rOP_ReqNewZone\020\235\003\022\037\n\032OP_R"
      "equestClientZoneChange\020\236\003\022\023\n\016OP_RequestD"
      "uel\020\237\003\022\034\n\027OP_RequestKnowledgeBase\020\240\003\022\025\n\020"
      "OP_RequestTitles\020\241\003\022\025\n\020OP_RespawnWindow\020"
      "\242\003\022\021\n\014OP_RespondAA\020\243\003\022\021\n\014OP_RestState\020\244\003"
      "\022\016\n\tOP_Rewind\020\245\003\022\022\n\rOP_RezzAnswer\020\246\003\022\024\n\017"
      "OP_RezzComplete\020\247\003\022\023\n\016OP_RezzRequest\020\250\003\022"
      "\021\n\014OP_Sacrifice\020\251\003\022\027\n\022OP_SafeFallSuccess"
      "\020\252\003\022\021\n\014OP_SafePoint\020\253\003\022\014\n\007OP_Save\020\254\003\022\025\n\020"
      "OP_SaveOnZoneReq\020\255\003\022\025\n\020OP_SelectTribute\020"
      "\256\003\022\023\n\016OP_SendAAStats\020\257\003\022\023\n\016OP_SendAATabl"
      "e\020\260\003\022\024\n\017OP_SendCharInfo\020\261\003\022\025\n\020OP_SendExp"
      "Zonein\020\262\003\022\030\n\023OP_SendFindableNPCs\020\263\003\022\031\n\024O"
      "P_SendGuildTributes\020\264\003\022\025\n\020OP_SendLoginIn"
      "fo\020\265\003\022\031\n\024OP_SendMaxCharacters\020\266\003\022\026\n\021OP_S"
      "endMembership\020\267\003\022\035\n\030OP_SendMembershipDet"
      "ails\020\270\003\022\027\n\022OP_SendSystemStats\020\271\003\022\025\n\020OP_S"
      "endTitleList\020\272\003\022\024\n\017OP_SendTributes\020\273\003\022\026\n"
      "\021OP_SendZonepoints\020\274\003\022\024\n\017OP_SenseHeading"
      "\020\275\003\022\022\n\rOP_SenseTraps\020\276\003\022\031\n\024OP_ServerList"
      "Request\020\277\003\022\032\n\025OP_ServerListResponse\020\300\003\022\024"
      "\n\017OP_SessionReady\020\301\003\022\025\n\020OP_SetChatServer"
      "\020\302\003\022\026\n\021OP_SetChatServer2\020\303\003\022\026\n\021OP_SetGro"
      "upTarget\020\304\003\022\024\n\017OP_SetGuildMOTD\020\305\003\022\024\n\017OP_"
      "SetGuildRank\020\306\003\022\022\n\rOP_SetRunMode\020\307\003\022\027\n\022O"
      "P_SetServerFilter\020\310\003\022\024\n\017OP_SetStartCity\020"
      "\311\003\022\020\n\013OP_SetTitle\020\312\003\022\025\n\020OP_SetTitleReply"
      "\020\313\003\022\021\n\014OP_Shielding\020\314\003\022\023\n\016OP_ShopDelItem"
      "\020\315\003\022\017\n\nOP_ShopEnd\020\316\003\022\026\n\021OP_ShopEndConfir"
      "m\020\317\003\022\020\n\013OP_ShopItem\020\320\003\022\025\n\020OP_ShopPlayerB"
      "uy\020\321\003\022\026\n\021OP_ShopPlayerSell\020\322\003\022\023\n\016OP_Shop"
      "Request\020\323\003\022\025\n\020OP_SimpleMessage\020\324\003\022\023\n\016OP_"
      "SkillUpdate\020\325\003\022\r\n\010OP_Sneak\020\326\003\022\031\n\024OP_Some"
      "3ByteHPUpdate\020\327\003\022\031\n\024OP_Some6ByteHPUpdate"
      "\020\330\003\022\033\n\026OP_SomeItemPacketMaybe\020\331\003\022\r\n\010OP_S"
      "ound\020\332\003\022\027\n\022OP_SpawnAppearance\020\333\003\022\021\n\014OP_S"
      "pawnDoor\020\334\003\022\033\n\026OP_SpawnPositionUpdate\020\335\003"
      "\022\023\n\016OP_SpecialMesg\020\336\003\022\023\n\016OP_SpellEffect\020"
      "\337\003\022\r\n\010OP_Split\020\340\003\022\017\n\nOP_Stamina\020\341\003\022\014\n\007OP"
      "_Stun\020\342\003\022\017\n\nOP_Surname\020\343\003\022\021\n\014OP_SwapSpel"
      "l\020\344\003\022\023\n\016OP_TargetBuffs\020\345\003\022\025\n\020OP_TargetCo"
      "mmand\020\346\003\022\022\n\rOP_TargetHoTT\020\347\003\022\023\n\016OP_Targe"
      "tMouse\020\350\003\022\024\n\017OP_TargetReject\020\351\003\022\024\n\017OP_Ta"
      "skActivity\020\352\003\022\034\n\027OP_TaskActivityComplete"
      "\020\353\003\022\027\n\022OP_TaskDescription\020\354\003\022\030\n\023OP_TaskH"
      "istoryReply\020\355\003\022\032\n\025OP_TaskHistoryRequest\020"
      "\356\003\022\026\n\021OP_TaskMemberList\020\357\003\022\r\n\010OP_Taunt\020\360"
      "\003\022\020\n\013OP_TestBuff\020\361\003\022\013\n\006OP_TGB\020\362\003\022\021\n\014OP_T"
      "imeOfDay\020\363\003\022\r\n\010OP_Track\020\364\003\022\023\n\016OP_TrackTa"
      "rget\020\365\003\022\024\n\017OP_TrackUnknown\020\366\003\022\030\n\023OP_Trad"
      "eAcceptClick\020\367\003\022\021\n\014OP_TradeBusy\020\370\003\022\022\n\rOP"
      "_TradeCoins\020\371\003\022\030\n\023OP_TradeMoneyUpdate\020\372\003"
      "\022\016\n\tOP_Trader\020\373\003\022\021\n\014OP_TraderBuy\020\374\003\022\025\n\020O"
      "P_TraderDelItem\020\375\003\022\024\n\017OP_TradeRequest\020\376\003"
      "\022\027\n\022OP_TradeRequestAck\020\377\003\022\030\n\023OP_TraderIt"
      "emUpdate\020\200\004\022\022\n\rOP_TraderShop\020\201\004\022\031\n\024OP_Tr"
      "adeSkillCombine\020\202\004\022\023\n\016OP_Translocate\020\203\004\022"
      "\023\n\016OP_TributeInfo\020\204\004\022\023\n\016OP_TributeItem\020\205"
      "\004\022\024\n\017OP_TributeMoney\020\206\004\022\022\n\rOP_TributeNPC"
      "\020\207\004\022\032\n\025OP_TributePointUpdate\020\210\004\022\024\n\017OP_Tr"
      "ibuteTimer\020\211\004\022\025\n\020OP_TributeToggle\020\212\004\022\025\n\020"
      "OP_TributeUpdate\020\213\004\022\024\n\017OP_Untargetable\020\214"
      "\004\022\020\n\013OP_UpdateAA\020\215\004\022\022\n\rOP_UpdateAura\020\216\004\022"
      "\032\n\025OP_UpdateLeadershipAA\020\217\004\022\025\n\020OP_VetCla"
      "imReply\020\220\004\022\027\n\022OP_VetClaimRequest\020\221\004\022\033\n\026O"
      "P_VetRewardsAvaliable\020\222\004\022\024\n\017OP_VoiceMacr"
      "oIn\020\223\004\022\025\n\020OP_VoiceMacroOut\020\224\004\022\024\n\017OP_Weap"
      "onEquip1\020\225\004\022\022\n\rOP_WearChange\020\226\004\022\017\n\nOP_We"
      "ather\020\227\004\022\017\n\nOP_Weblink\020\230\004\022\025\n\020OP_WhoAllRe"
      "quest\020\231\004\022\026\n\021OP_WhoAllResponse\020\232\004\022\031\n\024OP_W"
      "orld_Client_CRC1\020\233\004\022\031\n\024OP_World_Client_C"
      "RC2\020\234\004\022\030\n\023OP_WorldClientReady\020\235\004\022\025\n\020OP_W"
      "orldComplete\020\236\004\022\023\n\016OP_WorldLogout\020\237\004\022\030\n\023"
      "OP_WorldObjectsSent\020\240\004\022\027\n\022OP_WorldUnknow"
      "n001\020\241\004\022\034\n\027OP_XTargetAutoAddHaters\020\242\004\022\023\n"
      "\016OP_XTargetOpen\020\243\004\022\033\n\026OP_XTargetOpenResp"
      "onse\020\244\004\022\026\n\021OP_XTargetRequest\020\245\004\022\027\n\022OP_XT"
      "argetResponse\020\246\004\022\023\n\016OP_YellForHelp\020\247\004\022\022\n"
      "\rOP_ZoneChange\020\250\004\022\024\n\017OP_ZoneComplete\020\251\004\022"
      "\021\n\014OP_ZoneEntry\020\252\004\022\025\n\020OP_ZoneGuildList\020\253"
      "\004\022\025\n\020OP_ZoneInUnknown\020\254\004\022\030\n\023OP_ZonePlaye"
      "rToBind\020\255\004\022\026\n\021OP_ZoneServerInfo\020\256\004\022\027\n\022OP"
      "_ZoneServerReady\020\257\004\022\022\n\rOP_ZoneSpawns\020\260\004\022"
      "\023\n\016OP_ZoneUnavail\020\261\004\022\017\n\nOP_ResetAA\020\262\004\022\r\n"
      "\010OP_Buddy\020\263\004\022\033\n\026OP_ChannelAnnounceJoin\020\264"
      "\004\022\034\n\027OP_ChannelAnnounceLeave\020\265\004\022\016\n\tOP_Ig"
      "nore\020\266\004\022\014\n\007OP_Mail\020\267\004\022\025\n\020OP_MailboxChang"
      "e\020\270\004\022\032\n\025OP_MailDeliveryStatus\020\271\004\022\022\n\rOP_M"
      "ailHeader\020\272\004\022\027\n\022OP_MailHeaderCount\020\273\004\022\021\n"
      "\014OP_MailLogin\020\274\004\022\017\n\nOP_MailNew\020\275\004\022\024\n\017OP_"
      "MailSendBody\020\276\004B\005H\001\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 23510);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_2eproto
namespace pb {
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[0];
}
bool ErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EntityType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[1];
}
bool EntityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DeityType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[2];
}
bool DeityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 140:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 396:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DeityTypeBit_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[3];
}
bool DeityTypeBit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 268435455:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[4];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 14:
    case 15:
    case 17:
    case 18:
    case 20:
    case 21:
    case 22:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
    case 270:
    case 271:
    case 273:
    case 274:
    case 275:
    case 276:
    case 277:
    case 278:
    case 279:
    case 280:
    case 281:
    case 282:
    case 283:
    case 284:
    case 285:
    case 286:
    case 287:
    case 288:
    case 289:
    case 290:
    case 291:
    case 292:
    case 293:
    case 294:
    case 295:
    case 296:
    case 297:
    case 298:
    case 299:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 316:
    case 317:
    case 318:
    case 319:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 328:
    case 329:
    case 330:
    case 331:
    case 332:
    case 333:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BodyType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[5];
}
bool BodyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 30:
    case 32:
    case 33:
    case 34:
    case 60:
    case 63:
    case 66:
    case 67:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GenderType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[6];
}
bool GenderType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OpCode_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[7];
}
bool OpCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
    case 269:
    case 270:
    case 271:
    case 272:
    case 273:
    case 274:
    case 275:
    case 276:
    case 277:
    case 278:
    case 279:
    case 280:
    case 281:
    case 282:
    case 283:
    case 284:
    case 285:
    case 286:
    case 287:
    case 288:
    case 289:
    case 290:
    case 291:
    case 292:
    case 293:
    case 294:
    case 295:
    case 296:
    case 297:
    case 298:
    case 299:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 316:
    case 317:
    case 318:
    case 319:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 328:
    case 329:
    case 330:
    case 331:
    case 332:
    case 333:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
    case 341:
    case 342:
    case 343:
    case 344:
    case 345:
    case 346:
    case 347:
    case 348:
    case 349:
    case 350:
    case 351:
    case 352:
    case 353:
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 360:
    case 361:
    case 362:
    case 363:
    case 364:
    case 365:
    case 366:
    case 367:
    case 368:
    case 369:
    case 370:
    case 371:
    case 372:
    case 373:
    case 374:
    case 375:
    case 376:
    case 377:
    case 378:
    case 379:
    case 380:
    case 381:
    case 382:
    case 383:
    case 384:
    case 385:
    case 386:
    case 387:
    case 388:
    case 389:
    case 390:
    case 391:
    case 392:
    case 393:
    case 394:
    case 395:
    case 396:
    case 397:
    case 398:
    case 399:
    case 400:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 408:
    case 409:
    case 410:
    case 411:
    case 412:
    case 413:
    case 414:
    case 415:
    case 416:
    case 417:
    case 418:
    case 419:
    case 420:
    case 421:
    case 422:
    case 423:
    case 424:
    case 425:
    case 426:
    case 427:
    case 428:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 434:
    case 435:
    case 436:
    case 437:
    case 438:
    case 439:
    case 440:
    case 441:
    case 442:
    case 443:
    case 444:
    case 445:
    case 446:
    case 447:
    case 448:
    case 449:
    case 450:
    case 451:
    case 452:
    case 453:
    case 454:
    case 455:
    case 456:
    case 457:
    case 458:
    case 459:
    case 460:
    case 461:
    case 462:
    case 463:
    case 464:
    case 465:
    case 466:
    case 467:
    case 468:
    case 469:
    case 470:
    case 471:
    case 472:
    case 473:
    case 474:
    case 475:
    case 476:
    case 477:
    case 478:
    case 479:
    case 480:
    case 481:
    case 482:
    case 483:
    case 484:
    case 485:
    case 486:
    case 487:
    case 488:
    case 489:
    case 490:
    case 491:
    case 492:
    case 493:
    case 494:
    case 495:
    case 496:
    case 497:
    case 498:
    case 499:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 520:
    case 521:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 539:
    case 540:
    case 541:
    case 542:
    case 543:
    case 544:
    case 545:
    case 546:
    case 547:
    case 548:
    case 549:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 556:
    case 557:
    case 558:
    case 559:
    case 560:
    case 561:
    case 562:
    case 563:
    case 564:
    case 565:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ChannelMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelMessage::kNumberFieldNumber;
const int ChannelMessage::kLanguageFieldNumber;
const int ChannelMessage::kFromFieldNumber;
const int ChannelMessage::kToFieldNumber;
const int ChannelMessage::kMessageFieldNumber;
const int ChannelMessage::kGuilddbidFieldNumber;
const int ChannelMessage::kDelivertoFieldNumber;
const int ChannelMessage::kTypeFieldNumber;
const int ChannelMessage::kMinstatusFieldNumber;
const int ChannelMessage::kFromadminFieldNumber;
const int ChannelMessage::kNoreplyFieldNumber;
const int ChannelMessage::kIsEmoteFieldNumber;
const int ChannelMessage::kQueuedFieldNumber;
const int ChannelMessage::kFromEntityIdFieldNumber;
const int ChannelMessage::kFromEntityTypeFieldNumber;
const int ChannelMessage::kDistanceFieldNumber;
const int ChannelMessage::kSkipSenderFieldNumber;
const int ChannelMessage::kResponseMessageFieldNumber;
const int ChannelMessage::kResponseValueFieldNumber;
const int ChannelMessage::kResponseErrorFieldNumber;
const int ChannelMessage::kResponseTypeFieldNumber;
const int ChannelMessage::kResponsePayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelMessage::ChannelMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ChannelMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ChannelMessage)
}
ChannelMessage::ChannelMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_ChannelMessage.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.ChannelMessage)
}
ChannelMessage::ChannelMessage(const ChannelMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from(),
      GetArenaNoVirtual());
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to(),
      GetArenaNoVirtual());
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  deliverto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deliverto().size() > 0) {
    deliverto_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliverto(),
      GetArenaNoVirtual());
  }
  response_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_message().size() > 0) {
    response_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_message(),
      GetArenaNoVirtual());
  }
  response_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_type().size() > 0) {
    response_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_type(),
      GetArenaNoVirtual());
  }
  response_payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_payload().size() > 0) {
    response_payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_payload(),
      GetArenaNoVirtual());
  }
  ::memcpy(&number_, &from.number_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_error_) -
    reinterpret_cast<char*>(&number_)) + sizeof(response_error_));
  // @@protoc_insertion_point(copy_constructor:pb.ChannelMessage)
}

void ChannelMessage::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliverto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_error_) -
      reinterpret_cast<char*>(&number_)) + sizeof(response_error_));
}

ChannelMessage::~ChannelMessage() {
  // @@protoc_insertion_point(destructor:pb.ChannelMessage)
  SharedDtor();
}

void ChannelMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliverto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChannelMessage::ArenaDtor(void* object) {
  ChannelMessage* _this = reinterpret_cast< ChannelMessage* >(object);
  (void)_this;
}
void ChannelMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ChannelMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelMessage& ChannelMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_ChannelMessage.base);
  return *internal_default_instance();
}


void ChannelMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ChannelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  to_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  deliverto_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_error_) -
      reinterpret_cast<char*>(&number_)) + sizeof(response_error_));
  _internal_metadata_.Clear();
}

bool ChannelMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ChannelMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.MessageType number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_number(static_cast< ::pb::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 language = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessage.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessage.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessage.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guilddbid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guilddbid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deliverto = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliverto()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deliverto().data(), static_cast<int>(this->deliverto().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessage.deliverto"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minstatus = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fromadmin = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromadmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool noreply = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noreply_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_emote = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_emote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 queued = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queued_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 from_entity_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.EntityType from_entity_type = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_entity_type(static_cast< ::pb::EntityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float distance = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool skip_sender = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_message = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_message().data(), static_cast<int>(this->response_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessage.response_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 response_value = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.ErrorType response_error = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_error(static_cast< ::pb::ErrorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_type = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_type().data(), static_cast<int>(this->response_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessage.response_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes response_payload = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_response_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ChannelMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ChannelMessage)
  return false;
#undef DO_
}

void ChannelMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ChannelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.MessageType number = 1;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->number(), output);
  }

  // int32 language = 2;
  if (this->language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->language(), output);
  }

  // string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from(), output);
  }

  // string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->message(), output);
  }

  // int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->guilddbid(), output);
  }

  // string deliverto = 7;
  if (this->deliverto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliverto().data(), static_cast<int>(this->deliverto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.deliverto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->deliverto(), output);
  }

  // int32 type = 8;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->type(), output);
  }

  // int32 minstatus = 9;
  if (this->minstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->minstatus(), output);
  }

  // int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->fromadmin(), output);
  }

  // bool noreply = 11;
  if (this->noreply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->noreply(), output);
  }

  // bool is_emote = 12;
  if (this->is_emote() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_emote(), output);
  }

  // int32 queued = 13;
  if (this->queued() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->queued(), output);
  }

  // int32 from_entity_id = 16;
  if (this->from_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->from_entity_id(), output);
  }

  // .pb.EntityType from_entity_type = 17;
  if (this->from_entity_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->from_entity_type(), output);
  }

  // float distance = 18;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->distance(), output);
  }

  // bool skip_sender = 19;
  if (this->skip_sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->skip_sender(), output);
  }

  // string response_message = 20;
  if (this->response_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_message().data(), static_cast<int>(this->response_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.response_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->response_message(), output);
  }

  // int32 response_value = 21;
  if (this->response_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->response_value(), output);
  }

  // .pb.ErrorType response_error = 22;
  if (this->response_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->response_error(), output);
  }

  // string response_type = 23;
  if (this->response_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type().data(), static_cast<int>(this->response_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.response_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->response_type(), output);
  }

  // bytes response_payload = 24;
  if (this->response_payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      24, this->response_payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ChannelMessage)
}

::google::protobuf::uint8* ChannelMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ChannelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.MessageType number = 1;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->number(), target);
  }

  // int32 language = 2;
  if (this->language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->language(), target);
  }

  // string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from(), target);
  }

  // string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->message(), target);
  }

  // int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->guilddbid(), target);
  }

  // string deliverto = 7;
  if (this->deliverto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliverto().data(), static_cast<int>(this->deliverto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.deliverto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->deliverto(), target);
  }

  // int32 type = 8;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->type(), target);
  }

  // int32 minstatus = 9;
  if (this->minstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->minstatus(), target);
  }

  // int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->fromadmin(), target);
  }

  // bool noreply = 11;
  if (this->noreply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->noreply(), target);
  }

  // bool is_emote = 12;
  if (this->is_emote() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_emote(), target);
  }

  // int32 queued = 13;
  if (this->queued() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->queued(), target);
  }

  // int32 from_entity_id = 16;
  if (this->from_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->from_entity_id(), target);
  }

  // .pb.EntityType from_entity_type = 17;
  if (this->from_entity_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->from_entity_type(), target);
  }

  // float distance = 18;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->distance(), target);
  }

  // bool skip_sender = 19;
  if (this->skip_sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->skip_sender(), target);
  }

  // string response_message = 20;
  if (this->response_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_message().data(), static_cast<int>(this->response_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.response_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->response_message(), target);
  }

  // int32 response_value = 21;
  if (this->response_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->response_value(), target);
  }

  // .pb.ErrorType response_error = 22;
  if (this->response_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->response_error(), target);
  }

  // string response_type = 23;
  if (this->response_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type().data(), static_cast<int>(this->response_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessage.response_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->response_type(), target);
  }

  // bytes response_payload = 24;
  if (this->response_payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        24, this->response_payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ChannelMessage)
  return target;
}

size_t ChannelMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ChannelMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 3;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string message = 5;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string deliverto = 7;
  if (this->deliverto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deliverto());
  }

  // string response_message = 20;
  if (this->response_message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_message());
  }

  // string response_type = 23;
  if (this->response_type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_type());
  }

  // bytes response_payload = 24;
  if (this->response_payload().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->response_payload());
  }

  // .pb.MessageType number = 1;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->number());
  }

  // int32 language = 2;
  if (this->language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->language());
  }

  // int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guilddbid());
  }

  // int32 type = 8;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 minstatus = 9;
  if (this->minstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minstatus());
  }

  // int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromadmin());
  }

  // int32 queued = 13;
  if (this->queued() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->queued());
  }

  // bool noreply = 11;
  if (this->noreply() != 0) {
    total_size += 1 + 1;
  }

  // bool is_emote = 12;
  if (this->is_emote() != 0) {
    total_size += 1 + 1;
  }

  // bool skip_sender = 19;
  if (this->skip_sender() != 0) {
    total_size += 2 + 1;
  }

  // int32 from_entity_id = 16;
  if (this->from_entity_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_entity_id());
  }

  // .pb.EntityType from_entity_type = 17;
  if (this->from_entity_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_entity_type());
  }

  // float distance = 18;
  if (this->distance() != 0) {
    total_size += 2 + 4;
  }

  // int32 response_value = 21;
  if (this->response_value() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_value());
  }

  // .pb.ErrorType response_error = 22;
  if (this->response_error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ChannelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ChannelMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ChannelMessage)
    MergeFrom(*source);
  }
}

void ChannelMessage::MergeFrom(const ChannelMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ChannelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {
    set_from(from.from());
  }
  if (from.to().size() > 0) {
    set_to(from.to());
  }
  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.deliverto().size() > 0) {
    set_deliverto(from.deliverto());
  }
  if (from.response_message().size() > 0) {
    set_response_message(from.response_message());
  }
  if (from.response_type().size() > 0) {
    set_response_type(from.response_type());
  }
  if (from.response_payload().size() > 0) {
    set_response_payload(from.response_payload());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.language() != 0) {
    set_language(from.language());
  }
  if (from.guilddbid() != 0) {
    set_guilddbid(from.guilddbid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.minstatus() != 0) {
    set_minstatus(from.minstatus());
  }
  if (from.fromadmin() != 0) {
    set_fromadmin(from.fromadmin());
  }
  if (from.queued() != 0) {
    set_queued(from.queued());
  }
  if (from.noreply() != 0) {
    set_noreply(from.noreply());
  }
  if (from.is_emote() != 0) {
    set_is_emote(from.is_emote());
  }
  if (from.skip_sender() != 0) {
    set_skip_sender(from.skip_sender());
  }
  if (from.from_entity_id() != 0) {
    set_from_entity_id(from.from_entity_id());
  }
  if (from.from_entity_type() != 0) {
    set_from_entity_type(from.from_entity_type());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
  if (from.response_value() != 0) {
    set_response_value(from.response_value());
  }
  if (from.response_error() != 0) {
    set_response_error(from.response_error());
  }
}

void ChannelMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ChannelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelMessage::CopyFrom(const ChannelMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ChannelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelMessage::IsInitialized() const {
  return true;
}

void ChannelMessage::Swap(ChannelMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ChannelMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ChannelMessage::UnsafeArenaSwap(ChannelMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ChannelMessage::InternalSwap(ChannelMessage* other) {
  using std::swap;
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deliverto_.Swap(&other->deliverto_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_message_.Swap(&other->response_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_type_.Swap(&other->response_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_payload_.Swap(&other->response_payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(number_, other->number_);
  swap(language_, other->language_);
  swap(guilddbid_, other->guilddbid_);
  swap(type_, other->type_);
  swap(minstatus_, other->minstatus_);
  swap(fromadmin_, other->fromadmin_);
  swap(queued_, other->queued_);
  swap(noreply_, other->noreply_);
  swap(is_emote_, other->is_emote_);
  swap(skip_sender_, other->skip_sender_);
  swap(from_entity_id_, other->from_entity_id_);
  swap(from_entity_type_, other->from_entity_type_);
  swap(distance_, other->distance_);
  swap(response_value_, other->response_value_);
  swap(response_error_, other->response_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommandMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandMessage::kAuthorFieldNumber;
const int CommandMessage::kCommandFieldNumber;
const int CommandMessage::kParamsFieldNumber;
const int CommandMessage::kResponseMessageFieldNumber;
const int CommandMessage::kResponseValueFieldNumber;
const int CommandMessage::kResponseErrorFieldNumber;
const int CommandMessage::kResponseTypeFieldNumber;
const int CommandMessage::kResponsePayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandMessage::CommandMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_CommandMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CommandMessage)
}
CommandMessage::CommandMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  params_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_CommandMessage.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.CommandMessage)
}
CommandMessage::CommandMessage(const CommandMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author(),
      GetArenaNoVirtual());
  }
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command().size() > 0) {
    command_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command(),
      GetArenaNoVirtual());
  }
  response_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_message().size() > 0) {
    response_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_message(),
      GetArenaNoVirtual());
  }
  response_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_type().size() > 0) {
    response_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_type(),
      GetArenaNoVirtual());
  }
  response_payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_payload().size() > 0) {
    response_payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_payload(),
      GetArenaNoVirtual());
  }
  ::memcpy(&response_value_, &from.response_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_error_) -
    reinterpret_cast<char*>(&response_value_)) + sizeof(response_error_));
  // @@protoc_insertion_point(copy_constructor:pb.CommandMessage)
}

void CommandMessage::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&response_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_error_) -
      reinterpret_cast<char*>(&response_value_)) + sizeof(response_error_));
}

CommandMessage::~CommandMessage() {
  // @@protoc_insertion_point(destructor:pb.CommandMessage)
  SharedDtor();
}

void CommandMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommandMessage::ArenaDtor(void* object) {
  CommandMessage* _this = reinterpret_cast< CommandMessage* >(object);
  (void)_this;
}
void CommandMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CommandMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommandMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommandMessage& CommandMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_CommandMessage.base);
  return *internal_default_instance();
}


void CommandMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CommandMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  author_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  command_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&response_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_error_) -
      reinterpret_cast<char*>(&response_value_)) + sizeof(response_error_));
  _internal_metadata_.Clear();
}

bool CommandMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CommandMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string author = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CommandMessage.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CommandMessage.command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params(this->params_size() - 1).data(),
            static_cast<int>(this->params(this->params_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CommandMessage.params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_message().data(), static_cast<int>(this->response_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CommandMessage.response_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 response_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.ErrorType response_error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_error(static_cast< ::pb::ErrorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_type().data(), static_cast<int>(this->response_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CommandMessage.response_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes response_payload = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_response_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CommandMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CommandMessage)
  return false;
#undef DO_
}

void CommandMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CommandMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->author(), output);
  }

  // string command = 2;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command(), output);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->params(i), output);
  }

  // string response_message = 4;
  if (this->response_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_message().data(), static_cast<int>(this->response_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.response_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->response_message(), output);
  }

  // int32 response_value = 5;
  if (this->response_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->response_value(), output);
  }

  // .pb.ErrorType response_error = 6;
  if (this->response_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->response_error(), output);
  }

  // string response_type = 7;
  if (this->response_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type().data(), static_cast<int>(this->response_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.response_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->response_type(), output);
  }

  // bytes response_payload = 8;
  if (this->response_payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->response_payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CommandMessage)
}

::google::protobuf::uint8* CommandMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.CommandMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->author(), target);
  }

  // string command = 2;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command(), target);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->params(i), target);
  }

  // string response_message = 4;
  if (this->response_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_message().data(), static_cast<int>(this->response_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.response_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->response_message(), target);
  }

  // int32 response_value = 5;
  if (this->response_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->response_value(), target);
  }

  // .pb.ErrorType response_error = 6;
  if (this->response_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->response_error(), target);
  }

  // string response_type = 7;
  if (this->response_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type().data(), static_cast<int>(this->response_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommandMessage.response_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->response_type(), target);
  }

  // bytes response_payload = 8;
  if (this->response_payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->response_payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CommandMessage)
  return target;
}

size_t CommandMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CommandMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string params = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0, n = this->params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  // string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string command = 2;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  // string response_message = 4;
  if (this->response_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_message());
  }

  // string response_type = 7;
  if (this->response_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_type());
  }

  // bytes response_payload = 8;
  if (this->response_payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->response_payload());
  }

  // int32 response_value = 5;
  if (this->response_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_value());
  }

  // .pb.ErrorType response_error = 6;
  if (this->response_error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CommandMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CommandMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CommandMessage)
    MergeFrom(*source);
  }
}

void CommandMessage::MergeFrom(const CommandMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CommandMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.author().size() > 0) {
    set_author(from.author());
  }
  if (from.command().size() > 0) {
    set_command(from.command());
  }
  if (from.response_message().size() > 0) {
    set_response_message(from.response_message());
  }
  if (from.response_type().size() > 0) {
    set_response_type(from.response_type());
  }
  if (from.response_payload().size() > 0) {
    set_response_payload(from.response_payload());
  }
  if (from.response_value() != 0) {
    set_response_value(from.response_value());
  }
  if (from.response_error() != 0) {
    set_response_error(from.response_error());
  }
}

void CommandMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CommandMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandMessage::CopyFrom(const CommandMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CommandMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandMessage::IsInitialized() const {
  return true;
}

void CommandMessage::Swap(CommandMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CommandMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CommandMessage::UnsafeArenaSwap(CommandMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CommandMessage::InternalSwap(CommandMessage* other) {
  using std::swap;
  params_.InternalSwap(CastToBase(&other->params_));
  author_.Swap(&other->author_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  command_.Swap(&other->command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_message_.Swap(&other->response_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_type_.Swap(&other->response_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_payload_.Swap(&other->response_payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(response_value_, other->response_value_);
  swap(response_error_, other->response_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommandMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Entity::InitAsDefaultInstance() {
  ::pb::_Entity_default_instance_._instance.get_mutable()->position_ = const_cast< ::pb::Position*>(
      ::pb::Position::internal_default_instance());
}
void Entity::unsafe_arena_set_allocated_position(
    ::pb::Position* position) {
  if (GetArenaNoVirtual() == NULL) {
    delete position_;
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.Entity.position)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entity::kIdFieldNumber;
const int Entity::kNameFieldNumber;
const int Entity::kTypeFieldNumber;
const int Entity::kHpFieldNumber;
const int Entity::kLevelFieldNumber;
const int Entity::kPositionFieldNumber;
const int Entity::kRaceFieldNumber;
const int Entity::kClassFieldNumber;
const int Entity::kMaxHpFieldNumber;
const int Entity::kSpawnTimestampFieldNumber;
const int Entity::kLastnameFieldNumber;
const int Entity::kGenderFieldNumber;
const int Entity::kBodytypeFieldNumber;
const int Entity::kDeityFieldNumber;
const int Entity::kNpctypeIdFieldNumber;
const int Entity::kSizeFieldNumber;
const int Entity::kRunspeedFieldNumber;
const int Entity::kTextureFieldNumber;
const int Entity::kHelmtextureFieldNumber;
const int Entity::kAcFieldNumber;
const int Entity::kAtkFieldNumber;
const int Entity::kStrFieldNumber;
const int Entity::kStaFieldNumber;
const int Entity::kDexFieldNumber;
const int Entity::kAgiFieldNumber;
const int Entity::kIntFieldNumber;
const int Entity::kWisFieldNumber;
const int Entity::kChaFieldNumber;
const int Entity::kHaircolorFieldNumber;
const int Entity::kBeardcolorFieldNumber;
const int Entity::kEyecolor1FieldNumber;
const int Entity::kEyecolor2FieldNumber;
const int Entity::kDoorDbIdFieldNumber;
const int Entity::kDoorIdFieldNumber;
const int Entity::kDoorNameFieldNumber;
const int Entity::kDoorInclineFieldNumber;
const int Entity::kDoorOpentypeFieldNumber;
const int Entity::kDoorGuildIdFieldNumber;
const int Entity::kDoorLockpickFieldNumber;
const int Entity::kDoorKeyitemFieldNumber;
const int Entity::kDoorNokeyringFieldNumber;
const int Entity::kDoorTriggerDoorIdFieldNumber;
const int Entity::kDoorTriggerTypeFieldNumber;
const int Entity::kDoorParamFieldNumber;
const int Entity::kDoorInvertStateFieldNumber;
const int Entity::kDoorDisableTimerFieldNumber;
const int Entity::kDoorIsOpenFieldNumber;
const int Entity::kDoorIsLdonFieldNumber;
const int Entity::kDoorClientVersionMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entity::Entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Entity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Entity)
}
Entity::Entity(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Entity.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.Entity)
}
Entity::Entity(const Entity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lastname().size() > 0) {
    lastname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastname(),
      GetArenaNoVirtual());
  }
  door_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.door_name().size() > 0) {
    door_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.door_name(),
      GetArenaNoVirtual());
  }
  if (from.has_position()) {
    position_ = new ::pb::Position(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&door_is_ldon_) -
    reinterpret_cast<char*>(&id_)) + sizeof(door_is_ldon_));
  // @@protoc_insertion_point(copy_constructor:pb.Entity)
}

void Entity::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  door_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&door_is_ldon_) -
      reinterpret_cast<char*>(&position_)) + sizeof(door_is_ldon_));
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:pb.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  door_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
}

void Entity::ArenaDtor(void* object) {
  Entity* _this = reinterpret_cast< Entity* >(object);
  (void)_this;
}
void Entity::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Entity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Entity::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entity& Entity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Entity.base);
  return *internal_default_instance();
}


void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  lastname_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  door_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&door_is_ldon_) -
      reinterpret_cast<char*>(&id_)) + sizeof(door_is_ldon_));
  _internal_metadata_.Clear();
}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Entity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Entity.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.EntityType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::pb::EntityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Position position = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 race = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &race_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 class = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_hp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 spawn_timestamp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &spawn_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lastname = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastname().data(), static_cast<int>(this->lastname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Entity.lastname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.GenderType gender = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gender(static_cast< ::pb::GenderType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.BodyType bodytype = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bodytype(static_cast< ::pb::BodyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.DeityType deity = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_deity(static_cast< ::pb::DeityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 npctype_id = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npctype_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float size = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float runspeed = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &runspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 texture = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &texture_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 helmtexture = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &helmtexture_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ac = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 atk = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 str = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &str_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sta = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dex = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 agi = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wis = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cha = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 haircolor = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &haircolor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 beardcolor = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beardcolor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 eyecolor1 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eyecolor1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 eyecolor2 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eyecolor2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_db_id = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_db_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_id = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 808 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string door_name = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_door_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->door_name().data(), static_cast<int>(this->door_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Entity.door_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 door_incline = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 832 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &door_incline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_opentype = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 840 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_opentype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_guild_id = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 848 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_guild_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_lockpick = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 856 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_lockpick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_keyitem = 108;
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 864 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_keyitem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_nokeyring = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 872 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_nokeyring_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_trigger_door_id = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 880 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_trigger_door_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_trigger_type = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 888 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_trigger_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_param = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 896 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 door_invert_state = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 904 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &door_invert_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool door_disable_timer = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 912 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &door_disable_timer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool door_is_open = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 920 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &door_is_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_is_ldon = 119;
      case 119: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 952 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_is_ldon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 door_client_version_mask = 120;
      case 120: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 960 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_client_version_mask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Entity.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .pb.EntityType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // int32 hp = 4;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hp(), output);
  }

  // int32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // .pb.Position position = 6;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_position(), output);
  }

  // int32 race = 7;
  if (this->race() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->race(), output);
  }

  // int32 class = 8;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->class_(), output);
  }

  // int32 max_hp = 9;
  if (this->max_hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->max_hp(), output);
  }

  // int64 spawn_timestamp = 10;
  if (this->spawn_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->spawn_timestamp(), output);
  }

  // string lastname = 13;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), static_cast<int>(this->lastname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Entity.lastname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->lastname(), output);
  }

  // .pb.GenderType gender = 14;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->gender(), output);
  }

  // .pb.BodyType bodytype = 15;
  if (this->bodytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->bodytype(), output);
  }

  // .pb.DeityType deity = 16;
  if (this->deity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->deity(), output);
  }

  // uint32 npctype_id = 17;
  if (this->npctype_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->npctype_id(), output);
  }

  // float size = 18;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->size(), output);
  }

  // float runspeed = 19;
  if (this->runspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->runspeed(), output);
  }

  // int32 texture = 21;
  if (this->texture() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->texture(), output);
  }

  // int32 helmtexture = 22;
  if (this->helmtexture() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->helmtexture(), output);
  }

  // int32 ac = 23;
  if (this->ac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->ac(), output);
  }

  // int32 atk = 24;
  if (this->atk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->atk(), output);
  }

  // int32 str = 25;
  if (this->str() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->str(), output);
  }

  // int32 sta = 26;
  if (this->sta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->sta(), output);
  }

  // int32 dex = 27;
  if (this->dex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->dex(), output);
  }

  // int32 agi = 28;
  if (this->agi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->agi(), output);
  }

  // int32 int = 29;
  if (this->int_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->int_(), output);
  }

  // int32 wis = 30;
  if (this->wis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->wis(), output);
  }

  // int32 cha = 31;
  if (this->cha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->cha(), output);
  }

  // int32 haircolor = 32;
  if (this->haircolor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->haircolor(), output);
  }

  // int32 beardcolor = 33;
  if (this->beardcolor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->beardcolor(), output);
  }

  // int32 eyecolor1 = 34;
  if (this->eyecolor1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->eyecolor1(), output);
  }

  // int32 eyecolor2 = 35;
  if (this->eyecolor2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->eyecolor2(), output);
  }

  // uint32 door_db_id = 100;
  if (this->door_db_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(100, this->door_db_id(), output);
  }

  // uint32 door_id = 101;
  if (this->door_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(101, this->door_id(), output);
  }

  // string door_name = 103;
  if (this->door_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->door_name().data(), static_cast<int>(this->door_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Entity.door_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->door_name(), output);
  }

  // int32 door_incline = 104;
  if (this->door_incline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(104, this->door_incline(), output);
  }

  // uint32 door_opentype = 105;
  if (this->door_opentype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(105, this->door_opentype(), output);
  }

  // uint32 door_guild_id = 106;
  if (this->door_guild_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(106, this->door_guild_id(), output);
  }

  // uint32 door_lockpick = 107;
  if (this->door_lockpick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(107, this->door_lockpick(), output);
  }

  // uint32 door_keyitem = 108;
  if (this->door_keyitem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(108, this->door_keyitem(), output);
  }

  // uint32 door_nokeyring = 109;
  if (this->door_nokeyring() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(109, this->door_nokeyring(), output);
  }

  // uint32 door_trigger_door_id = 110;
  if (this->door_trigger_door_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(110, this->door_trigger_door_id(), output);
  }

  // uint32 door_trigger_type = 111;
  if (this->door_trigger_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(111, this->door_trigger_type(), output);
  }

  // uint32 door_param = 112;
  if (this->door_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(112, this->door_param(), output);
  }

  // int32 door_invert_state = 113;
  if (this->door_invert_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(113, this->door_invert_state(), output);
  }

  // bool door_disable_timer = 114;
  if (this->door_disable_timer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(114, this->door_disable_timer(), output);
  }

  // bool door_is_open = 115;
  if (this->door_is_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(115, this->door_is_open(), output);
  }

  // uint32 door_is_ldon = 119;
  if (this->door_is_ldon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(119, this->door_is_ldon(), output);
  }

  // uint32 door_client_version_mask = 120;
  if (this->door_client_version_mask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(120, this->door_client_version_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Entity)
}

::google::protobuf::uint8* Entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Entity.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .pb.EntityType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // int32 hp = 4;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hp(), target);
  }

  // int32 level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // .pb.Position position = 6;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_position(), deterministic, target);
  }

  // int32 race = 7;
  if (this->race() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->race(), target);
  }

  // int32 class = 8;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->class_(), target);
  }

  // int32 max_hp = 9;
  if (this->max_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->max_hp(), target);
  }

  // int64 spawn_timestamp = 10;
  if (this->spawn_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->spawn_timestamp(), target);
  }

  // string lastname = 13;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), static_cast<int>(this->lastname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Entity.lastname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->lastname(), target);
  }

  // .pb.GenderType gender = 14;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->gender(), target);
  }

  // .pb.BodyType bodytype = 15;
  if (this->bodytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->bodytype(), target);
  }

  // .pb.DeityType deity = 16;
  if (this->deity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->deity(), target);
  }

  // uint32 npctype_id = 17;
  if (this->npctype_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->npctype_id(), target);
  }

  // float size = 18;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->size(), target);
  }

  // float runspeed = 19;
  if (this->runspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->runspeed(), target);
  }

  // int32 texture = 21;
  if (this->texture() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->texture(), target);
  }

  // int32 helmtexture = 22;
  if (this->helmtexture() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->helmtexture(), target);
  }

  // int32 ac = 23;
  if (this->ac() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->ac(), target);
  }

  // int32 atk = 24;
  if (this->atk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->atk(), target);
  }

  // int32 str = 25;
  if (this->str() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->str(), target);
  }

  // int32 sta = 26;
  if (this->sta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->sta(), target);
  }

  // int32 dex = 27;
  if (this->dex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->dex(), target);
  }

  // int32 agi = 28;
  if (this->agi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->agi(), target);
  }

  // int32 int = 29;
  if (this->int_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->int_(), target);
  }

  // int32 wis = 30;
  if (this->wis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->wis(), target);
  }

  // int32 cha = 31;
  if (this->cha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->cha(), target);
  }

  // int32 haircolor = 32;
  if (this->haircolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->haircolor(), target);
  }

  // int32 beardcolor = 33;
  if (this->beardcolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->beardcolor(), target);
  }

  // int32 eyecolor1 = 34;
  if (this->eyecolor1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->eyecolor1(), target);
  }

  // int32 eyecolor2 = 35;
  if (this->eyecolor2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->eyecolor2(), target);
  }

  // uint32 door_db_id = 100;
  if (this->door_db_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(100, this->door_db_id(), target);
  }

  // uint32 door_id = 101;
  if (this->door_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(101, this->door_id(), target);
  }

  // string door_name = 103;
  if (this->door_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->door_name().data(), static_cast<int>(this->door_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Entity.door_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->door_name(), target);
  }

  // int32 door_incline = 104;
  if (this->door_incline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(104, this->door_incline(), target);
  }

  // uint32 door_opentype = 105;
  if (this->door_opentype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(105, this->door_opentype(), target);
  }

  // uint32 door_guild_id = 106;
  if (this->door_guild_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(106, this->door_guild_id(), target);
  }

  // uint32 door_lockpick = 107;
  if (this->door_lockpick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(107, this->door_lockpick(), target);
  }

  // uint32 door_keyitem = 108;
  if (this->door_keyitem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(108, this->door_keyitem(), target);
  }

  // uint32 door_nokeyring = 109;
  if (this->door_nokeyring() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(109, this->door_nokeyring(), target);
  }

  // uint32 door_trigger_door_id = 110;
  if (this->door_trigger_door_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(110, this->door_trigger_door_id(), target);
  }

  // uint32 door_trigger_type = 111;
  if (this->door_trigger_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(111, this->door_trigger_type(), target);
  }

  // uint32 door_param = 112;
  if (this->door_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(112, this->door_param(), target);
  }

  // int32 door_invert_state = 113;
  if (this->door_invert_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(113, this->door_invert_state(), target);
  }

  // bool door_disable_timer = 114;
  if (this->door_disable_timer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(114, this->door_disable_timer(), target);
  }

  // bool door_is_open = 115;
  if (this->door_is_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(115, this->door_is_open(), target);
  }

  // uint32 door_is_ldon = 119;
  if (this->door_is_ldon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(119, this->door_is_ldon(), target);
  }

  // uint32 door_client_version_mask = 120;
  if (this->door_client_version_mask() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(120, this->door_client_version_mask(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Entity)
  return target;
}

size_t Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Entity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string lastname = 13;
  if (this->lastname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastname());
  }

  // string door_name = 103;
  if (this->door_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->door_name());
  }

  // .pb.Position position = 6;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // .pb.EntityType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 hp = 4;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // int32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 race = 7;
  if (this->race() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->race());
  }

  // int32 class = 8;
  if (this->class_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->class_());
  }

  // int64 spawn_timestamp = 10;
  if (this->spawn_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->spawn_timestamp());
  }

  // int32 max_hp = 9;
  if (this->max_hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_hp());
  }

  // .pb.GenderType gender = 14;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gender());
  }

  // .pb.BodyType bodytype = 15;
  if (this->bodytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bodytype());
  }

  // .pb.DeityType deity = 16;
  if (this->deity() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deity());
  }

  // uint32 npctype_id = 17;
  if (this->npctype_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npctype_id());
  }

  // float size = 18;
  if (this->size() != 0) {
    total_size += 2 + 4;
  }

  // float runspeed = 19;
  if (this->runspeed() != 0) {
    total_size += 2 + 4;
  }

  // int32 texture = 21;
  if (this->texture() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->texture());
  }

  // int32 helmtexture = 22;
  if (this->helmtexture() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->helmtexture());
  }

  // int32 ac = 23;
  if (this->ac() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ac());
  }

  // int32 atk = 24;
  if (this->atk() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->atk());
  }

  // int32 str = 25;
  if (this->str() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->str());
  }

  // int32 sta = 26;
  if (this->sta() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sta());
  }

  // int32 dex = 27;
  if (this->dex() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dex());
  }

  // int32 agi = 28;
  if (this->agi() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->agi());
  }

  // int32 int = 29;
  if (this->int_() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_());
  }

  // int32 wis = 30;
  if (this->wis() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wis());
  }

  // int32 cha = 31;
  if (this->cha() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cha());
  }

  // int32 haircolor = 32;
  if (this->haircolor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->haircolor());
  }

  // int32 beardcolor = 33;
  if (this->beardcolor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->beardcolor());
  }

  // int32 eyecolor1 = 34;
  if (this->eyecolor1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eyecolor1());
  }

  // int32 eyecolor2 = 35;
  if (this->eyecolor2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eyecolor2());
  }

  // uint32 door_client_version_mask = 120;
  if (this->door_client_version_mask() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_client_version_mask());
  }

  // uint32 door_db_id = 100;
  if (this->door_db_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_db_id());
  }

  // uint32 door_id = 101;
  if (this->door_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_id());
  }

  // int32 door_incline = 104;
  if (this->door_incline() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->door_incline());
  }

  // uint32 door_opentype = 105;
  if (this->door_opentype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_opentype());
  }

  // uint32 door_guild_id = 106;
  if (this->door_guild_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_guild_id());
  }

  // uint32 door_lockpick = 107;
  if (this->door_lockpick() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_lockpick());
  }

  // uint32 door_keyitem = 108;
  if (this->door_keyitem() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_keyitem());
  }

  // uint32 door_nokeyring = 109;
  if (this->door_nokeyring() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_nokeyring());
  }

  // uint32 door_trigger_door_id = 110;
  if (this->door_trigger_door_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_trigger_door_id());
  }

  // uint32 door_trigger_type = 111;
  if (this->door_trigger_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_trigger_type());
  }

  // uint32 door_param = 112;
  if (this->door_param() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_param());
  }

  // int32 door_invert_state = 113;
  if (this->door_invert_state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->door_invert_state());
  }

  // bool door_disable_timer = 114;
  if (this->door_disable_timer() != 0) {
    total_size += 2 + 1;
  }

  // bool door_is_open = 115;
  if (this->door_is_open() != 0) {
    total_size += 2 + 1;
  }

  // uint32 door_is_ldon = 119;
  if (this->door_is_ldon() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_is_ldon());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  const Entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Entity)
    MergeFrom(*source);
  }
}

void Entity::MergeFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.lastname().size() > 0) {
    set_lastname(from.lastname());
  }
  if (from.door_name().size() > 0) {
    set_door_name(from.door_name());
  }
  if (from.has_position()) {
    mutable_position()->::pb::Position::MergeFrom(from.position());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.race() != 0) {
    set_race(from.race());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.spawn_timestamp() != 0) {
    set_spawn_timestamp(from.spawn_timestamp());
  }
  if (from.max_hp() != 0) {
    set_max_hp(from.max_hp());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.bodytype() != 0) {
    set_bodytype(from.bodytype());
  }
  if (from.deity() != 0) {
    set_deity(from.deity());
  }
  if (from.npctype_id() != 0) {
    set_npctype_id(from.npctype_id());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.runspeed() != 0) {
    set_runspeed(from.runspeed());
  }
  if (from.texture() != 0) {
    set_texture(from.texture());
  }
  if (from.helmtexture() != 0) {
    set_helmtexture(from.helmtexture());
  }
  if (from.ac() != 0) {
    set_ac(from.ac());
  }
  if (from.atk() != 0) {
    set_atk(from.atk());
  }
  if (from.str() != 0) {
    set_str(from.str());
  }
  if (from.sta() != 0) {
    set_sta(from.sta());
  }
  if (from.dex() != 0) {
    set_dex(from.dex());
  }
  if (from.agi() != 0) {
    set_agi(from.agi());
  }
  if (from.int_() != 0) {
    set_int_(from.int_());
  }
  if (from.wis() != 0) {
    set_wis(from.wis());
  }
  if (from.cha() != 0) {
    set_cha(from.cha());
  }
  if (from.haircolor() != 0) {
    set_haircolor(from.haircolor());
  }
  if (from.beardcolor() != 0) {
    set_beardcolor(from.beardcolor());
  }
  if (from.eyecolor1() != 0) {
    set_eyecolor1(from.eyecolor1());
  }
  if (from.eyecolor2() != 0) {
    set_eyecolor2(from.eyecolor2());
  }
  if (from.door_client_version_mask() != 0) {
    set_door_client_version_mask(from.door_client_version_mask());
  }
  if (from.door_db_id() != 0) {
    set_door_db_id(from.door_db_id());
  }
  if (from.door_id() != 0) {
    set_door_id(from.door_id());
  }
  if (from.door_incline() != 0) {
    set_door_incline(from.door_incline());
  }
  if (from.door_opentype() != 0) {
    set_door_opentype(from.door_opentype());
  }
  if (from.door_guild_id() != 0) {
    set_door_guild_id(from.door_guild_id());
  }
  if (from.door_lockpick() != 0) {
    set_door_lockpick(from.door_lockpick());
  }
  if (from.door_keyitem() != 0) {
    set_door_keyitem(from.door_keyitem());
  }
  if (from.door_nokeyring() != 0) {
    set_door_nokeyring(from.door_nokeyring());
  }
  if (from.door_trigger_door_id() != 0) {
    set_door_trigger_door_id(from.door_trigger_door_id());
  }
  if (from.door_trigger_type() != 0) {
    set_door_trigger_type(from.door_trigger_type());
  }
  if (from.door_param() != 0) {
    set_door_param(from.door_param());
  }
  if (from.door_invert_state() != 0) {
    set_door_invert_state(from.door_invert_state());
  }
  if (from.door_disable_timer() != 0) {
    set_door_disable_timer(from.door_disable_timer());
  }
  if (from.door_is_open() != 0) {
    set_door_is_open(from.door_is_open());
  }
  if (from.door_is_ldon() != 0) {
    set_door_is_ldon(from.door_is_ldon());
  }
}

void Entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entity::IsInitialized() const {
  return true;
}

void Entity::Swap(Entity* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Entity* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Entity::UnsafeArenaSwap(Entity* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Entity::InternalSwap(Entity* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lastname_.Swap(&other->lastname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  door_name_.Swap(&other->door_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(hp_, other->hp_);
  swap(level_, other->level_);
  swap(race_, other->race_);
  swap(class__, other->class__);
  swap(spawn_timestamp_, other->spawn_timestamp_);
  swap(max_hp_, other->max_hp_);
  swap(gender_, other->gender_);
  swap(bodytype_, other->bodytype_);
  swap(deity_, other->deity_);
  swap(npctype_id_, other->npctype_id_);
  swap(size_, other->size_);
  swap(runspeed_, other->runspeed_);
  swap(texture_, other->texture_);
  swap(helmtexture_, other->helmtexture_);
  swap(ac_, other->ac_);
  swap(atk_, other->atk_);
  swap(str_, other->str_);
  swap(sta_, other->sta_);
  swap(dex_, other->dex_);
  swap(agi_, other->agi_);
  swap(int__, other->int__);
  swap(wis_, other->wis_);
  swap(cha_, other->cha_);
  swap(haircolor_, other->haircolor_);
  swap(beardcolor_, other->beardcolor_);
  swap(eyecolor1_, other->eyecolor1_);
  swap(eyecolor2_, other->eyecolor2_);
  swap(door_client_version_mask_, other->door_client_version_mask_);
  swap(door_db_id_, other->door_db_id_);
  swap(door_id_, other->door_id_);
  swap(door_incline_, other->door_incline_);
  swap(door_opentype_, other->door_opentype_);
  swap(door_guild_id_, other->door_guild_id_);
  swap(door_lockpick_, other->door_lockpick_);
  swap(door_keyitem_, other->door_keyitem_);
  swap(door_nokeyring_, other->door_nokeyring_);
  swap(door_trigger_door_id_, other->door_trigger_door_id_);
  swap(door_trigger_type_, other->door_trigger_type_);
  swap(door_param_, other->door_param_);
  swap(door_invert_state_, other->door_invert_state_);
  swap(door_disable_timer_, other->door_disable_timer_);
  swap(door_is_open_, other->door_is_open_);
  swap(door_is_ldon_, other->door_is_ldon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Entities::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entities::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entities::Entities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Entities.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Entities)
}
Entities::Entities(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entities_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Entities.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.Entities)
}
Entities::Entities(const Entities& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.Entities)
}

void Entities::SharedCtor() {
}

Entities::~Entities() {
  // @@protoc_insertion_point(destructor:pb.Entities)
  SharedDtor();
}

void Entities::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Entities::ArenaDtor(void* object) {
  Entities* _this = reinterpret_cast< Entities* >(object);
  (void)_this;
}
void Entities::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Entities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Entities::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entities& Entities::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Entities.base);
  return *internal_default_instance();
}


void Entities::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Entities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entities_.Clear();
  _internal_metadata_.Clear();
}

bool Entities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Entities)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Entity entities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Entities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Entities)
  return false;
#undef DO_
}

void Entities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Entities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Entity entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entities(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Entities)
}

::google::protobuf::uint8* Entities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Entities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Entity entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entities(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Entities)
  return target;
}

size_t Entities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Entities)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.Entity entities = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entities(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Entities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Entities)
  GOOGLE_DCHECK_NE(&from, this);
  const Entities* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Entities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Entities)
    MergeFrom(*source);
  }
}

void Entities::MergeFrom(const Entities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Entities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entities_.MergeFrom(from.entities_);
}

void Entities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Entities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entities::CopyFrom(const Entities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Entities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entities::IsInitialized() const {
  return true;
}

void Entities::Swap(Entities* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Entities* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Entities::UnsafeArenaSwap(Entities* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Entities::InternalSwap(Entities* other) {
  using std::swap;
  CastToBase(&entities_)->InternalSwap(CastToBase(&other->entities_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Entities::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Position::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kXFieldNumber;
const int Position::kYFieldNumber;
const int Position::kZFieldNumber;
const int Position::kHFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Position.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Position)
}
Position::Position(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Position.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&h_) -
    reinterpret_cast<char*>(&x_)) + sizeof(h_));
  // @@protoc_insertion_point(copy_constructor:pb.Position)
}

void Position::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&h_) -
      reinterpret_cast<char*>(&x_)) + sizeof(h_));
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:pb.Position)
  SharedDtor();
}

void Position::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Position::ArenaDtor(void* object) {
  Position* _this = reinterpret_cast< Position* >(object);
  (void)_this;
}
void Position::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position& Position::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Position.base);
  return *internal_default_instance();
}


void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&h_) -
      reinterpret_cast<char*>(&x_)) + sizeof(h_));
  _internal_metadata_.Clear();
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Position)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float h = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float h = 4;
  if (this->h() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->h(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float h = 4;
  if (this->h() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->h(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float h = 4;
  if (this->h() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.h() != 0) {
    set_h(from.h());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Position* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Position::UnsafeArenaSwap(Position* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(h_, other->h_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextureProfile::InitAsDefaultInstance() {
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->head_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->chest_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->arms_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->wrist_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->hands_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->legs_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->feet_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->primary_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
  ::pb::_TextureProfile_default_instance_._instance.get_mutable()->secondary_ = const_cast< ::pb::Texture*>(
      ::pb::Texture::internal_default_instance());
}
void TextureProfile::unsafe_arena_set_allocated_head(
    ::pb::Texture* head) {
  if (GetArenaNoVirtual() == NULL) {
    delete head_;
  }
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Head)
}
void TextureProfile::unsafe_arena_set_allocated_chest(
    ::pb::Texture* chest) {
  if (GetArenaNoVirtual() == NULL) {
    delete chest_;
  }
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Chest)
}
void TextureProfile::unsafe_arena_set_allocated_arms(
    ::pb::Texture* arms) {
  if (GetArenaNoVirtual() == NULL) {
    delete arms_;
  }
  arms_ = arms;
  if (arms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Arms)
}
void TextureProfile::unsafe_arena_set_allocated_wrist(
    ::pb::Texture* wrist) {
  if (GetArenaNoVirtual() == NULL) {
    delete wrist_;
  }
  wrist_ = wrist;
  if (wrist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Wrist)
}
void TextureProfile::unsafe_arena_set_allocated_hands(
    ::pb::Texture* hands) {
  if (GetArenaNoVirtual() == NULL) {
    delete hands_;
  }
  hands_ = hands;
  if (hands) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Hands)
}
void TextureProfile::unsafe_arena_set_allocated_legs(
    ::pb::Texture* legs) {
  if (GetArenaNoVirtual() == NULL) {
    delete legs_;
  }
  legs_ = legs;
  if (legs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Legs)
}
void TextureProfile::unsafe_arena_set_allocated_feet(
    ::pb::Texture* feet) {
  if (GetArenaNoVirtual() == NULL) {
    delete feet_;
  }
  feet_ = feet;
  if (feet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Feet)
}
void TextureProfile::unsafe_arena_set_allocated_primary(
    ::pb::Texture* primary) {
  if (GetArenaNoVirtual() == NULL) {
    delete primary_;
  }
  primary_ = primary;
  if (primary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Primary)
}
void TextureProfile::unsafe_arena_set_allocated_secondary(
    ::pb::Texture* secondary) {
  if (GetArenaNoVirtual() == NULL) {
    delete secondary_;
  }
  secondary_ = secondary;
  if (secondary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TextureProfile.Secondary)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextureProfile::kHeadFieldNumber;
const int TextureProfile::kChestFieldNumber;
const int TextureProfile::kArmsFieldNumber;
const int TextureProfile::kWristFieldNumber;
const int TextureProfile::kHandsFieldNumber;
const int TextureProfile::kLegsFieldNumber;
const int TextureProfile::kFeetFieldNumber;
const int TextureProfile::kPrimaryFieldNumber;
const int TextureProfile::kSecondaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextureProfile::TextureProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_TextureProfile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TextureProfile)
}
TextureProfile::TextureProfile(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_TextureProfile.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.TextureProfile)
}
TextureProfile::TextureProfile(const TextureProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::pb::Texture(*from.head_);
  } else {
    head_ = NULL;
  }
  if (from.has_chest()) {
    chest_ = new ::pb::Texture(*from.chest_);
  } else {
    chest_ = NULL;
  }
  if (from.has_arms()) {
    arms_ = new ::pb::Texture(*from.arms_);
  } else {
    arms_ = NULL;
  }
  if (from.has_wrist()) {
    wrist_ = new ::pb::Texture(*from.wrist_);
  } else {
    wrist_ = NULL;
  }
  if (from.has_hands()) {
    hands_ = new ::pb::Texture(*from.hands_);
  } else {
    hands_ = NULL;
  }
  if (from.has_legs()) {
    legs_ = new ::pb::Texture(*from.legs_);
  } else {
    legs_ = NULL;
  }
  if (from.has_feet()) {
    feet_ = new ::pb::Texture(*from.feet_);
  } else {
    feet_ = NULL;
  }
  if (from.has_primary()) {
    primary_ = new ::pb::Texture(*from.primary_);
  } else {
    primary_ = NULL;
  }
  if (from.has_secondary()) {
    secondary_ = new ::pb::Texture(*from.secondary_);
  } else {
    secondary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.TextureProfile)
}

void TextureProfile::SharedCtor() {
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&secondary_) -
      reinterpret_cast<char*>(&head_)) + sizeof(secondary_));
}

TextureProfile::~TextureProfile() {
  // @@protoc_insertion_point(destructor:pb.TextureProfile)
  SharedDtor();
}

void TextureProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete head_;
  if (this != internal_default_instance()) delete chest_;
  if (this != internal_default_instance()) delete arms_;
  if (this != internal_default_instance()) delete wrist_;
  if (this != internal_default_instance()) delete hands_;
  if (this != internal_default_instance()) delete legs_;
  if (this != internal_default_instance()) delete feet_;
  if (this != internal_default_instance()) delete primary_;
  if (this != internal_default_instance()) delete secondary_;
}

void TextureProfile::ArenaDtor(void* object) {
  TextureProfile* _this = reinterpret_cast< TextureProfile* >(object);
  (void)_this;
}
void TextureProfile::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextureProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextureProfile::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextureProfile& TextureProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_TextureProfile.base);
  return *internal_default_instance();
}


void TextureProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TextureProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) {
    delete chest_;
  }
  chest_ = NULL;
  if (GetArenaNoVirtual() == NULL && arms_ != NULL) {
    delete arms_;
  }
  arms_ = NULL;
  if (GetArenaNoVirtual() == NULL && wrist_ != NULL) {
    delete wrist_;
  }
  wrist_ = NULL;
  if (GetArenaNoVirtual() == NULL && hands_ != NULL) {
    delete hands_;
  }
  hands_ = NULL;
  if (GetArenaNoVirtual() == NULL && legs_ != NULL) {
    delete legs_;
  }
  legs_ = NULL;
  if (GetArenaNoVirtual() == NULL && feet_ != NULL) {
    delete feet_;
  }
  feet_ = NULL;
  if (GetArenaNoVirtual() == NULL && primary_ != NULL) {
    delete primary_;
  }
  primary_ = NULL;
  if (GetArenaNoVirtual() == NULL && secondary_ != NULL) {
    delete secondary_;
  }
  secondary_ = NULL;
  _internal_metadata_.Clear();
}

bool TextureProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TextureProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Texture Head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Texture Chest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Texture Arms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Texture Wrist = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wrist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Texture Hands = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hands()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Texture Legs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_legs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Texture Feet = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_feet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Texture Primary = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_primary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Texture Secondary = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_secondary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TextureProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TextureProfile)
  return false;
#undef DO_
}

void TextureProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TextureProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Texture Head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // .pb.Texture Chest = 2;
  if (this->has_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_chest(), output);
  }

  // .pb.Texture Arms = 3;
  if (this->has_arms()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_arms(), output);
  }

  // .pb.Texture Wrist = 4;
  if (this->has_wrist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_wrist(), output);
  }

  // .pb.Texture Hands = 5;
  if (this->has_hands()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_hands(), output);
  }

  // .pb.Texture Legs = 6;
  if (this->has_legs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_legs(), output);
  }

  // .pb.Texture Feet = 7;
  if (this->has_feet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_feet(), output);
  }

  // .pb.Texture Primary = 8;
  if (this->has_primary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_primary(), output);
  }

  // .pb.Texture Secondary = 9;
  if (this->has_secondary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_secondary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TextureProfile)
}

::google::protobuf::uint8* TextureProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TextureProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Texture Head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // .pb.Texture Chest = 2;
  if (this->has_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_chest(), deterministic, target);
  }

  // .pb.Texture Arms = 3;
  if (this->has_arms()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_arms(), deterministic, target);
  }

  // .pb.Texture Wrist = 4;
  if (this->has_wrist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_wrist(), deterministic, target);
  }

  // .pb.Texture Hands = 5;
  if (this->has_hands()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_hands(), deterministic, target);
  }

  // .pb.Texture Legs = 6;
  if (this->has_legs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_legs(), deterministic, target);
  }

  // .pb.Texture Feet = 7;
  if (this->has_feet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_feet(), deterministic, target);
  }

  // .pb.Texture Primary = 8;
  if (this->has_primary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_primary(), deterministic, target);
  }

  // .pb.Texture Secondary = 9;
  if (this->has_secondary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_secondary(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TextureProfile)
  return target;
}

size_t TextureProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TextureProfile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.Texture Head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // .pb.Texture Chest = 2;
  if (this->has_chest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *chest_);
  }

  // .pb.Texture Arms = 3;
  if (this->has_arms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *arms_);
  }

  // .pb.Texture Wrist = 4;
  if (this->has_wrist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wrist_);
  }

  // .pb.Texture Hands = 5;
  if (this->has_hands()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hands_);
  }

  // .pb.Texture Legs = 6;
  if (this->has_legs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *legs_);
  }

  // .pb.Texture Feet = 7;
  if (this->has_feet()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *feet_);
  }

  // .pb.Texture Primary = 8;
  if (this->has_primary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *primary_);
  }

  // .pb.Texture Secondary = 9;
  if (this->has_secondary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *secondary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextureProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TextureProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const TextureProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextureProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TextureProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TextureProfile)
    MergeFrom(*source);
  }
}

void TextureProfile::MergeFrom(const TextureProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TextureProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::pb::Texture::MergeFrom(from.head());
  }
  if (from.has_chest()) {
    mutable_chest()->::pb::Texture::MergeFrom(from.chest());
  }
  if (from.has_arms()) {
    mutable_arms()->::pb::Texture::MergeFrom(from.arms());
  }
  if (from.has_wrist()) {
    mutable_wrist()->::pb::Texture::MergeFrom(from.wrist());
  }
  if (from.has_hands()) {
    mutable_hands()->::pb::Texture::MergeFrom(from.hands());
  }
  if (from.has_legs()) {
    mutable_legs()->::pb::Texture::MergeFrom(from.legs());
  }
  if (from.has_feet()) {
    mutable_feet()->::pb::Texture::MergeFrom(from.feet());
  }
  if (from.has_primary()) {
    mutable_primary()->::pb::Texture::MergeFrom(from.primary());
  }
  if (from.has_secondary()) {
    mutable_secondary()->::pb::Texture::MergeFrom(from.secondary());
  }
}

void TextureProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TextureProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextureProfile::CopyFrom(const TextureProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TextureProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextureProfile::IsInitialized() const {
  return true;
}

void TextureProfile::Swap(TextureProfile* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextureProfile* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextureProfile::UnsafeArenaSwap(TextureProfile* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextureProfile::InternalSwap(TextureProfile* other) {
  using std::swap;
  swap(head_, other->head_);
  swap(chest_, other->chest_);
  swap(arms_, other->arms_);
  swap(wrist_, other->wrist_);
  swap(hands_, other->hands_);
  swap(legs_, other->legs_);
  swap(feet_, other->feet_);
  swap(primary_, other->primary_);
  swap(secondary_, other->secondary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextureProfile::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Texture::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Texture::kMaterialFieldNumber;
const int Texture::kUnknown1FieldNumber;
const int Texture::kEliteModelFieldNumber;
const int Texture::kHerosForgeModelFieldNumber;
const int Texture::kUnknown2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Texture::Texture()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Texture.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Texture)
}
Texture::Texture(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Texture.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.Texture)
}
Texture::Texture(const Texture& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_, &from.material_,
    static_cast<size_t>(reinterpret_cast<char*>(&unknown2_) -
    reinterpret_cast<char*>(&material_)) + sizeof(unknown2_));
  // @@protoc_insertion_point(copy_constructor:pb.Texture)
}

void Texture::SharedCtor() {
  ::memset(&material_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown2_) -
      reinterpret_cast<char*>(&material_)) + sizeof(unknown2_));
}

Texture::~Texture() {
  // @@protoc_insertion_point(destructor:pb.Texture)
  SharedDtor();
}

void Texture::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Texture::ArenaDtor(void* object) {
  Texture* _this = reinterpret_cast< Texture* >(object);
  (void)_this;
}
void Texture::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Texture::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Texture::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Texture& Texture::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Texture.base);
  return *internal_default_instance();
}


void Texture::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Texture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&material_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown2_) -
      reinterpret_cast<char*>(&material_)) + sizeof(unknown2_));
  _internal_metadata_.Clear();
}

bool Texture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Texture)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EliteModel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elitemodel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HerosForgeModel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herosforgemodel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Unknown2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Texture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Texture)
  return false;
#undef DO_
}

void Texture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Texture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material = 1;
  if (this->material() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->material(), output);
  }

  // uint32 unknown1 = 2;
  if (this->unknown1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unknown1(), output);
  }

  // uint32 EliteModel = 3;
  if (this->elitemodel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->elitemodel(), output);
  }

  // uint32 HerosForgeModel = 4;
  if (this->herosforgemodel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->herosforgemodel(), output);
  }

  // uint32 Unknown2 = 5;
  if (this->unknown2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unknown2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Texture)
}

::google::protobuf::uint8* Texture::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Texture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material = 1;
  if (this->material() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->material(), target);
  }

  // uint32 unknown1 = 2;
  if (this->unknown1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unknown1(), target);
  }

  // uint32 EliteModel = 3;
  if (this->elitemodel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->elitemodel(), target);
  }

  // uint32 HerosForgeModel = 4;
  if (this->herosforgemodel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->herosforgemodel(), target);
  }

  // uint32 Unknown2 = 5;
  if (this->unknown2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unknown2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Texture)
  return target;
}

size_t Texture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Texture)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material = 1;
  if (this->material() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material());
  }

  // uint32 unknown1 = 2;
  if (this->unknown1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown1());
  }

  // uint32 EliteModel = 3;
  if (this->elitemodel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->elitemodel());
  }

  // uint32 HerosForgeModel = 4;
  if (this->herosforgemodel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->herosforgemodel());
  }

  // uint32 Unknown2 = 5;
  if (this->unknown2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Texture::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Texture)
  GOOGLE_DCHECK_NE(&from, this);
  const Texture* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Texture>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Texture)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Texture)
    MergeFrom(*source);
  }
}

void Texture::MergeFrom(const Texture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Texture)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material() != 0) {
    set_material(from.material());
  }
  if (from.unknown1() != 0) {
    set_unknown1(from.unknown1());
  }
  if (from.elitemodel() != 0) {
    set_elitemodel(from.elitemodel());
  }
  if (from.herosforgemodel() != 0) {
    set_herosforgemodel(from.herosforgemodel());
  }
  if (from.unknown2() != 0) {
    set_unknown2(from.unknown2());
  }
}

void Texture::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Texture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Texture::CopyFrom(const Texture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Texture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Texture::IsInitialized() const {
  return true;
}

void Texture::Swap(Texture* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Texture* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Texture::UnsafeArenaSwap(Texture* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Texture::InternalSwap(Texture* other) {
  using std::swap;
  swap(material_, other->material_);
  swap(unknown1_, other->unknown1_);
  swap(elitemodel_, other->elitemodel_);
  swap(herosforgemodel_, other->herosforgemodel_);
  swap(unknown2_, other->unknown2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Texture::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TintProfile::InitAsDefaultInstance() {
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->head_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->chest_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->arms_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->wrist_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->hands_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->legs_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->feet_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->primary_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
  ::pb::_TintProfile_default_instance_._instance.get_mutable()->secondary_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
}
void TintProfile::unsafe_arena_set_allocated_head(
    ::pb::Tint* head) {
  if (GetArenaNoVirtual() == NULL) {
    delete head_;
  }
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Head)
}
void TintProfile::unsafe_arena_set_allocated_chest(
    ::pb::Tint* chest) {
  if (GetArenaNoVirtual() == NULL) {
    delete chest_;
  }
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Chest)
}
void TintProfile::unsafe_arena_set_allocated_arms(
    ::pb::Tint* arms) {
  if (GetArenaNoVirtual() == NULL) {
    delete arms_;
  }
  arms_ = arms;
  if (arms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Arms)
}
void TintProfile::unsafe_arena_set_allocated_wrist(
    ::pb::Tint* wrist) {
  if (GetArenaNoVirtual() == NULL) {
    delete wrist_;
  }
  wrist_ = wrist;
  if (wrist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Wrist)
}
void TintProfile::unsafe_arena_set_allocated_hands(
    ::pb::Tint* hands) {
  if (GetArenaNoVirtual() == NULL) {
    delete hands_;
  }
  hands_ = hands;
  if (hands) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Hands)
}
void TintProfile::unsafe_arena_set_allocated_legs(
    ::pb::Tint* legs) {
  if (GetArenaNoVirtual() == NULL) {
    delete legs_;
  }
  legs_ = legs;
  if (legs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Legs)
}
void TintProfile::unsafe_arena_set_allocated_feet(
    ::pb::Tint* feet) {
  if (GetArenaNoVirtual() == NULL) {
    delete feet_;
  }
  feet_ = feet;
  if (feet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Feet)
}
void TintProfile::unsafe_arena_set_allocated_primary(
    ::pb::Tint* primary) {
  if (GetArenaNoVirtual() == NULL) {
    delete primary_;
  }
  primary_ = primary;
  if (primary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Primary)
}
void TintProfile::unsafe_arena_set_allocated_secondary(
    ::pb::Tint* secondary) {
  if (GetArenaNoVirtual() == NULL) {
    delete secondary_;
  }
  secondary_ = secondary;
  if (secondary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.TintProfile.Secondary)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TintProfile::kHeadFieldNumber;
const int TintProfile::kChestFieldNumber;
const int TintProfile::kArmsFieldNumber;
const int TintProfile::kWristFieldNumber;
const int TintProfile::kHandsFieldNumber;
const int TintProfile::kLegsFieldNumber;
const int TintProfile::kFeetFieldNumber;
const int TintProfile::kPrimaryFieldNumber;
const int TintProfile::kSecondaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TintProfile::TintProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_TintProfile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TintProfile)
}
TintProfile::TintProfile(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_TintProfile.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.TintProfile)
}
TintProfile::TintProfile(const TintProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::pb::Tint(*from.head_);
  } else {
    head_ = NULL;
  }
  if (from.has_chest()) {
    chest_ = new ::pb::Tint(*from.chest_);
  } else {
    chest_ = NULL;
  }
  if (from.has_arms()) {
    arms_ = new ::pb::Tint(*from.arms_);
  } else {
    arms_ = NULL;
  }
  if (from.has_wrist()) {
    wrist_ = new ::pb::Tint(*from.wrist_);
  } else {
    wrist_ = NULL;
  }
  if (from.has_hands()) {
    hands_ = new ::pb::Tint(*from.hands_);
  } else {
    hands_ = NULL;
  }
  if (from.has_legs()) {
    legs_ = new ::pb::Tint(*from.legs_);
  } else {
    legs_ = NULL;
  }
  if (from.has_feet()) {
    feet_ = new ::pb::Tint(*from.feet_);
  } else {
    feet_ = NULL;
  }
  if (from.has_primary()) {
    primary_ = new ::pb::Tint(*from.primary_);
  } else {
    primary_ = NULL;
  }
  if (from.has_secondary()) {
    secondary_ = new ::pb::Tint(*from.secondary_);
  } else {
    secondary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.TintProfile)
}

void TintProfile::SharedCtor() {
  ::memset(&head_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&secondary_) -
      reinterpret_cast<char*>(&head_)) + sizeof(secondary_));
}

TintProfile::~TintProfile() {
  // @@protoc_insertion_point(destructor:pb.TintProfile)
  SharedDtor();
}

void TintProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete head_;
  if (this != internal_default_instance()) delete chest_;
  if (this != internal_default_instance()) delete arms_;
  if (this != internal_default_instance()) delete wrist_;
  if (this != internal_default_instance()) delete hands_;
  if (this != internal_default_instance()) delete legs_;
  if (this != internal_default_instance()) delete feet_;
  if (this != internal_default_instance()) delete primary_;
  if (this != internal_default_instance()) delete secondary_;
}

void TintProfile::ArenaDtor(void* object) {
  TintProfile* _this = reinterpret_cast< TintProfile* >(object);
  (void)_this;
}
void TintProfile::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TintProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TintProfile::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TintProfile& TintProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_TintProfile.base);
  return *internal_default_instance();
}


void TintProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TintProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) {
    delete chest_;
  }
  chest_ = NULL;
  if (GetArenaNoVirtual() == NULL && arms_ != NULL) {
    delete arms_;
  }
  arms_ = NULL;
  if (GetArenaNoVirtual() == NULL && wrist_ != NULL) {
    delete wrist_;
  }
  wrist_ = NULL;
  if (GetArenaNoVirtual() == NULL && hands_ != NULL) {
    delete hands_;
  }
  hands_ = NULL;
  if (GetArenaNoVirtual() == NULL && legs_ != NULL) {
    delete legs_;
  }
  legs_ = NULL;
  if (GetArenaNoVirtual() == NULL && feet_ != NULL) {
    delete feet_;
  }
  feet_ = NULL;
  if (GetArenaNoVirtual() == NULL && primary_ != NULL) {
    delete primary_;
  }
  primary_ = NULL;
  if (GetArenaNoVirtual() == NULL && secondary_ != NULL) {
    delete secondary_;
  }
  secondary_ = NULL;
  _internal_metadata_.Clear();
}

bool TintProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TintProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Tint Head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint Chest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint Arms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint Wrist = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wrist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint Hands = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hands()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint Legs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_legs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint Feet = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_feet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint Primary = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_primary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint Secondary = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_secondary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TintProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TintProfile)
  return false;
#undef DO_
}

void TintProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TintProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Tint Head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // .pb.Tint Chest = 2;
  if (this->has_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_chest(), output);
  }

  // .pb.Tint Arms = 3;
  if (this->has_arms()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_arms(), output);
  }

  // .pb.Tint Wrist = 4;
  if (this->has_wrist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_wrist(), output);
  }

  // .pb.Tint Hands = 5;
  if (this->has_hands()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_hands(), output);
  }

  // .pb.Tint Legs = 6;
  if (this->has_legs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_legs(), output);
  }

  // .pb.Tint Feet = 7;
  if (this->has_feet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_feet(), output);
  }

  // .pb.Tint Primary = 8;
  if (this->has_primary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_primary(), output);
  }

  // .pb.Tint Secondary = 9;
  if (this->has_secondary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_secondary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TintProfile)
}

::google::protobuf::uint8* TintProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TintProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Tint Head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // .pb.Tint Chest = 2;
  if (this->has_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_chest(), deterministic, target);
  }

  // .pb.Tint Arms = 3;
  if (this->has_arms()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_arms(), deterministic, target);
  }

  // .pb.Tint Wrist = 4;
  if (this->has_wrist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_wrist(), deterministic, target);
  }

  // .pb.Tint Hands = 5;
  if (this->has_hands()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_hands(), deterministic, target);
  }

  // .pb.Tint Legs = 6;
  if (this->has_legs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_legs(), deterministic, target);
  }

  // .pb.Tint Feet = 7;
  if (this->has_feet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_feet(), deterministic, target);
  }

  // .pb.Tint Primary = 8;
  if (this->has_primary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_primary(), deterministic, target);
  }

  // .pb.Tint Secondary = 9;
  if (this->has_secondary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_secondary(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TintProfile)
  return target;
}

size_t TintProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TintProfile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.Tint Head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // .pb.Tint Chest = 2;
  if (this->has_chest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *chest_);
  }

  // .pb.Tint Arms = 3;
  if (this->has_arms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *arms_);
  }

  // .pb.Tint Wrist = 4;
  if (this->has_wrist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wrist_);
  }

  // .pb.Tint Hands = 5;
  if (this->has_hands()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hands_);
  }

  // .pb.Tint Legs = 6;
  if (this->has_legs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *legs_);
  }

  // .pb.Tint Feet = 7;
  if (this->has_feet()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *feet_);
  }

  // .pb.Tint Primary = 8;
  if (this->has_primary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *primary_);
  }

  // .pb.Tint Secondary = 9;
  if (this->has_secondary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *secondary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TintProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TintProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const TintProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TintProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TintProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TintProfile)
    MergeFrom(*source);
  }
}

void TintProfile::MergeFrom(const TintProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TintProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::pb::Tint::MergeFrom(from.head());
  }
  if (from.has_chest()) {
    mutable_chest()->::pb::Tint::MergeFrom(from.chest());
  }
  if (from.has_arms()) {
    mutable_arms()->::pb::Tint::MergeFrom(from.arms());
  }
  if (from.has_wrist()) {
    mutable_wrist()->::pb::Tint::MergeFrom(from.wrist());
  }
  if (from.has_hands()) {
    mutable_hands()->::pb::Tint::MergeFrom(from.hands());
  }
  if (from.has_legs()) {
    mutable_legs()->::pb::Tint::MergeFrom(from.legs());
  }
  if (from.has_feet()) {
    mutable_feet()->::pb::Tint::MergeFrom(from.feet());
  }
  if (from.has_primary()) {
    mutable_primary()->::pb::Tint::MergeFrom(from.primary());
  }
  if (from.has_secondary()) {
    mutable_secondary()->::pb::Tint::MergeFrom(from.secondary());
  }
}

void TintProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TintProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TintProfile::CopyFrom(const TintProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TintProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TintProfile::IsInitialized() const {
  return true;
}

void TintProfile::Swap(TintProfile* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TintProfile* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TintProfile::UnsafeArenaSwap(TintProfile* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TintProfile::InternalSwap(TintProfile* other) {
  using std::swap;
  swap(head_, other->head_);
  swap(chest_, other->chest_);
  swap(arms_, other->arms_);
  swap(wrist_, other->wrist_);
  swap(hands_, other->hands_);
  swap(legs_, other->legs_);
  swap(feet_, other->feet_);
  swap(primary_, other->primary_);
  swap(secondary_, other->secondary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TintProfile::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tint::kBlueFieldNumber;
const int Tint::kGreenFieldNumber;
const int Tint::kRedFieldNumber;
const int Tint::kUseTintFieldNumber;
const int Tint::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tint::Tint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Tint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Tint)
}
Tint::Tint(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Tint.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.Tint)
}
Tint::Tint(const Tint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&blue_, &from.blue_,
    static_cast<size_t>(reinterpret_cast<char*>(&color_) -
    reinterpret_cast<char*>(&blue_)) + sizeof(color_));
  // @@protoc_insertion_point(copy_constructor:pb.Tint)
}

void Tint::SharedCtor() {
  ::memset(&blue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&blue_)) + sizeof(color_));
}

Tint::~Tint() {
  // @@protoc_insertion_point(destructor:pb.Tint)
  SharedDtor();
}

void Tint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Tint::ArenaDtor(void* object) {
  Tint* _this = reinterpret_cast< Tint* >(object);
  (void)_this;
}
void Tint::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Tint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tint::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tint& Tint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Tint.base);
  return *internal_default_instance();
}


void Tint::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Tint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&blue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&blue_)) + sizeof(color_));
  _internal_metadata_.Clear();
}

bool Tint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Tint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Blue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Green = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &green_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Red = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 UseTint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usetint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Color = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Tint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Tint)
  return false;
#undef DO_
}

void Tint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Tint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Blue = 1;
  if (this->blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->blue(), output);
  }

  // uint32 Green = 2;
  if (this->green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->green(), output);
  }

  // uint32 Red = 3;
  if (this->red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->red(), output);
  }

  // uint32 UseTint = 4;
  if (this->usetint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->usetint(), output);
  }

  // uint32 Color = 5;
  if (this->color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->color(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Tint)
}

::google::protobuf::uint8* Tint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Tint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Blue = 1;
  if (this->blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->blue(), target);
  }

  // uint32 Green = 2;
  if (this->green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->green(), target);
  }

  // uint32 Red = 3;
  if (this->red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->red(), target);
  }

  // uint32 UseTint = 4;
  if (this->usetint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->usetint(), target);
  }

  // uint32 Color = 5;
  if (this->color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->color(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Tint)
  return target;
}

size_t Tint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Tint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Blue = 1;
  if (this->blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->blue());
  }

  // uint32 Green = 2;
  if (this->green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->green());
  }

  // uint32 Red = 3;
  if (this->red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->red());
  }

  // uint32 UseTint = 4;
  if (this->usetint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usetint());
  }

  // uint32 Color = 5;
  if (this->color() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->color());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Tint)
  GOOGLE_DCHECK_NE(&from, this);
  const Tint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Tint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Tint)
    MergeFrom(*source);
  }
}

void Tint::MergeFrom(const Tint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Tint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blue() != 0) {
    set_blue(from.blue());
  }
  if (from.green() != 0) {
    set_green(from.green());
  }
  if (from.red() != 0) {
    set_red(from.red());
  }
  if (from.usetint() != 0) {
    set_usetint(from.usetint());
  }
  if (from.color() != 0) {
    set_color(from.color());
  }
}

void Tint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Tint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tint::CopyFrom(const Tint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Tint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tint::IsInitialized() const {
  return true;
}

void Tint::Swap(Tint* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Tint* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Tint::UnsafeArenaSwap(Tint* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Tint::InternalSwap(Tint* other) {
  using std::swap;
  swap(blue_, other->blue_);
  swap(green_, other->green_);
  swap(red_, other->red_);
  swap(usetint_, other->usetint_);
  swap(color_, other->color_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tint::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kOpFieldNumber;
const int Event::kPayloadFieldNumber;
const int Event::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Event)
}
Event::Event(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Event.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload(),
      GetArenaNoVirtual());
  }
  ::memcpy(&op_, &from.op_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&op_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:pb.Event)
}

void Event::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&op_)) + sizeof(entity_id_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:pb.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Event::ArenaDtor(void* object) {
  Event* _this = reinterpret_cast< Event* >(object);
  (void)_this;
}
void Event::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Event.base);
  return *internal_default_instance();
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&op_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.OpCode op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::pb::OpCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.OpCode op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.OpCode op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Event)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // .pb.OpCode op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {
    set_payload(from.payload());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Event* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Event::UnsafeArenaSwap(Event* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_, other->op_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeathEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeathEvent::kSpawnIdFieldNumber;
const int DeathEvent::kKillerIdFieldNumber;
const int DeathEvent::kCorpseIdFieldNumber;
const int DeathEvent::kBindZoneIdFieldNumber;
const int DeathEvent::kSpellIdFieldNumber;
const int DeathEvent::kAttackSkillIdFieldNumber;
const int DeathEvent::kDamageFieldNumber;
const int DeathEvent::kUnknown028FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeathEvent::DeathEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_DeathEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DeathEvent)
}
DeathEvent::DeathEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_DeathEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.DeathEvent)
}
DeathEvent::DeathEvent(const DeathEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&spawn_id_, &from.spawn_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&unknown028_) -
    reinterpret_cast<char*>(&spawn_id_)) + sizeof(unknown028_));
  // @@protoc_insertion_point(copy_constructor:pb.DeathEvent)
}

void DeathEvent::SharedCtor() {
  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown028_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(unknown028_));
}

DeathEvent::~DeathEvent() {
  // @@protoc_insertion_point(destructor:pb.DeathEvent)
  SharedDtor();
}

void DeathEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DeathEvent::ArenaDtor(void* object) {
  DeathEvent* _this = reinterpret_cast< DeathEvent* >(object);
  (void)_this;
}
void DeathEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeathEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeathEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeathEvent& DeathEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_DeathEvent.base);
  return *internal_default_instance();
}


void DeathEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DeathEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown028_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(unknown028_));
  _internal_metadata_.Clear();
}

bool DeathEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DeathEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 spawn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 killer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 corpse_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &corpse_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bind_zone_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bind_zone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 spell_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attack_skill_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attack_skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 damage = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown028 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown028_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DeathEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DeathEvent)
  return false;
#undef DO_
}

void DeathEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DeathEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // uint32 killer_id = 2;
  if (this->killer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->killer_id(), output);
  }

  // uint32 corpse_id = 3;
  if (this->corpse_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->corpse_id(), output);
  }

  // uint32 bind_zone_id = 4;
  if (this->bind_zone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bind_zone_id(), output);
  }

  // uint32 spell_id = 5;
  if (this->spell_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->spell_id(), output);
  }

  // uint32 attack_skill_id = 6;
  if (this->attack_skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->attack_skill_id(), output);
  }

  // uint32 damage = 7;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->damage(), output);
  }

  // uint32 unknown028 = 8;
  if (this->unknown028() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->unknown028(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DeathEvent)
}

::google::protobuf::uint8* DeathEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DeathEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // uint32 killer_id = 2;
  if (this->killer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->killer_id(), target);
  }

  // uint32 corpse_id = 3;
  if (this->corpse_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->corpse_id(), target);
  }

  // uint32 bind_zone_id = 4;
  if (this->bind_zone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bind_zone_id(), target);
  }

  // uint32 spell_id = 5;
  if (this->spell_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->spell_id(), target);
  }

  // uint32 attack_skill_id = 6;
  if (this->attack_skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->attack_skill_id(), target);
  }

  // uint32 damage = 7;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->damage(), target);
  }

  // uint32 unknown028 = 8;
  if (this->unknown028() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->unknown028(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DeathEvent)
  return target;
}

size_t DeathEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DeathEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // uint32 killer_id = 2;
  if (this->killer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->killer_id());
  }

  // uint32 corpse_id = 3;
  if (this->corpse_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->corpse_id());
  }

  // uint32 bind_zone_id = 4;
  if (this->bind_zone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bind_zone_id());
  }

  // uint32 spell_id = 5;
  if (this->spell_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spell_id());
  }

  // uint32 attack_skill_id = 6;
  if (this->attack_skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attack_skill_id());
  }

  // uint32 damage = 7;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->damage());
  }

  // uint32 unknown028 = 8;
  if (this->unknown028() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown028());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeathEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DeathEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const DeathEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeathEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DeathEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DeathEvent)
    MergeFrom(*source);
  }
}

void DeathEvent::MergeFrom(const DeathEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DeathEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.killer_id() != 0) {
    set_killer_id(from.killer_id());
  }
  if (from.corpse_id() != 0) {
    set_corpse_id(from.corpse_id());
  }
  if (from.bind_zone_id() != 0) {
    set_bind_zone_id(from.bind_zone_id());
  }
  if (from.spell_id() != 0) {
    set_spell_id(from.spell_id());
  }
  if (from.attack_skill_id() != 0) {
    set_attack_skill_id(from.attack_skill_id());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.unknown028() != 0) {
    set_unknown028(from.unknown028());
  }
}

void DeathEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DeathEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeathEvent::CopyFrom(const DeathEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DeathEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeathEvent::IsInitialized() const {
  return true;
}

void DeathEvent::Swap(DeathEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeathEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeathEvent::UnsafeArenaSwap(DeathEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeathEvent::InternalSwap(DeathEvent* other) {
  using std::swap;
  swap(spawn_id_, other->spawn_id_);
  swap(killer_id_, other->killer_id_);
  swap(corpse_id_, other->corpse_id_);
  swap(bind_zone_id_, other->bind_zone_id_);
  swap(spell_id_, other->spell_id_);
  swap(attack_skill_id_, other->attack_skill_id_);
  swap(damage_, other->damage_);
  swap(unknown028_, other->unknown028_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeathEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DamageEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DamageEvent::kTargetFieldNumber;
const int DamageEvent::kSourceFieldNumber;
const int DamageEvent::kTypeFieldNumber;
const int DamageEvent::kSpellidFieldNumber;
const int DamageEvent::kDamageFieldNumber;
const int DamageEvent::kForceFieldNumber;
const int DamageEvent::kMeleepushXyFieldNumber;
const int DamageEvent::kMeleepushZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DamageEvent::DamageEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_DamageEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DamageEvent)
}
DamageEvent::DamageEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_DamageEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.DamageEvent)
}
DamageEvent::DamageEvent(const DamageEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&meleepush_z_) -
    reinterpret_cast<char*>(&target_)) + sizeof(meleepush_z_));
  // @@protoc_insertion_point(copy_constructor:pb.DamageEvent)
}

void DamageEvent::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meleepush_z_) -
      reinterpret_cast<char*>(&target_)) + sizeof(meleepush_z_));
}

DamageEvent::~DamageEvent() {
  // @@protoc_insertion_point(destructor:pb.DamageEvent)
  SharedDtor();
}

void DamageEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DamageEvent::ArenaDtor(void* object) {
  DamageEvent* _this = reinterpret_cast< DamageEvent* >(object);
  (void)_this;
}
void DamageEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DamageEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DamageEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DamageEvent& DamageEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_DamageEvent.base);
  return *internal_default_instance();
}


void DamageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DamageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meleepush_z_) -
      reinterpret_cast<char*>(&target_)) + sizeof(meleepush_z_));
  _internal_metadata_.Clear();
}

bool DamageEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DamageEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 spellid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spellid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 damage = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float force = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &force_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float meleepush_xy = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &meleepush_xy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float meleepush_z = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &meleepush_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DamageEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DamageEvent)
  return false;
#undef DO_
}

void DamageEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DamageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // uint32 source = 2;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source(), output);
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // uint32 spellid = 4;
  if (this->spellid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->spellid(), output);
  }

  // uint32 damage = 5;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->damage(), output);
  }

  // float force = 6;
  if (this->force() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->force(), output);
  }

  // float meleepush_xy = 7;
  if (this->meleepush_xy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->meleepush_xy(), output);
  }

  // float meleepush_z = 8;
  if (this->meleepush_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->meleepush_z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DamageEvent)
}

::google::protobuf::uint8* DamageEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DamageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // uint32 source = 2;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source(), target);
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // uint32 spellid = 4;
  if (this->spellid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->spellid(), target);
  }

  // uint32 damage = 5;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->damage(), target);
  }

  // float force = 6;
  if (this->force() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->force(), target);
  }

  // float meleepush_xy = 7;
  if (this->meleepush_xy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->meleepush_xy(), target);
  }

  // float meleepush_z = 8;
  if (this->meleepush_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->meleepush_z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DamageEvent)
  return target;
}

size_t DamageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DamageEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // uint32 source = 2;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 spellid = 4;
  if (this->spellid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spellid());
  }

  // uint32 damage = 5;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->damage());
  }

  // float force = 6;
  if (this->force() != 0) {
    total_size += 1 + 4;
  }

  // float meleepush_xy = 7;
  if (this->meleepush_xy() != 0) {
    total_size += 1 + 4;
  }

  // float meleepush_z = 8;
  if (this->meleepush_z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DamageEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DamageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const DamageEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DamageEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DamageEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DamageEvent)
    MergeFrom(*source);
  }
}

void DamageEvent::MergeFrom(const DamageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DamageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.spellid() != 0) {
    set_spellid(from.spellid());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.force() != 0) {
    set_force(from.force());
  }
  if (from.meleepush_xy() != 0) {
    set_meleepush_xy(from.meleepush_xy());
  }
  if (from.meleepush_z() != 0) {
    set_meleepush_z(from.meleepush_z());
  }
}

void DamageEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DamageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DamageEvent::CopyFrom(const DamageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DamageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DamageEvent::IsInitialized() const {
  return true;
}

void DamageEvent::Swap(DamageEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DamageEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DamageEvent::UnsafeArenaSwap(DamageEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DamageEvent::InternalSwap(DamageEvent* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(source_, other->source_);
  swap(type_, other->type_);
  swap(spellid_, other->spellid_);
  swap(damage_, other->damage_);
  swap(force_, other->force_);
  swap(meleepush_xy_, other->meleepush_xy_);
  swap(meleepush_z_, other->meleepush_z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DamageEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityEvent::kEntityIdFieldNumber;
const int EntityEvent::kTargetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityEvent::EntityEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_EntityEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.EntityEvent)
}
EntityEvent::EntityEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_EntityEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.EntityEvent)
}
EntityEvent::EntityEvent(const EntityEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(target_id_));
  // @@protoc_insertion_point(copy_constructor:pb.EntityEvent)
}

void EntityEvent::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(target_id_));
}

EntityEvent::~EntityEvent() {
  // @@protoc_insertion_point(destructor:pb.EntityEvent)
  SharedDtor();
}

void EntityEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void EntityEvent::ArenaDtor(void* object) {
  EntityEvent* _this = reinterpret_cast< EntityEvent* >(object);
  (void)_this;
}
void EntityEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EntityEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityEvent& EntityEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_EntityEvent.base);
  return *internal_default_instance();
}


void EntityEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(target_id_));
  _internal_metadata_.Clear();
}

bool EntityEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.EntityEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.EntityEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.EntityEvent)
  return false;
#undef DO_
}

void EntityEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 target_id = 2;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.EntityEvent)
}

::google::protobuf::uint8* EntityEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 target_id = 2;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.EntityEvent)
  return target;
}

size_t EntityEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.EntityEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 target_id = 2;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.EntityEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.EntityEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.EntityEvent)
    MergeFrom(*source);
  }
}

void EntityEvent::MergeFrom(const EntityEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.EntityEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
}

void EntityEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.EntityEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityEvent::CopyFrom(const EntityEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.EntityEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityEvent::IsInitialized() const {
  return true;
}

void EntityEvent::Swap(EntityEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EntityEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EntityEvent::UnsafeArenaSwap(EntityEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EntityEvent::InternalSwap(EntityEvent* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(target_id_, other->target_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelMessageEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelMessageEvent::kTargetNameFieldNumber;
const int ChannelMessageEvent::kSenderFieldNumber;
const int ChannelMessageEvent::kLanguageFieldNumber;
const int ChannelMessageEvent::kNumberFieldNumber;
const int ChannelMessageEvent::kCmUnknown4FieldNumber;
const int ChannelMessageEvent::kSkillInLanguageFieldNumber;
const int ChannelMessageEvent::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelMessageEvent::ChannelMessageEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ChannelMessageEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ChannelMessageEvent)
}
ChannelMessageEvent::ChannelMessageEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_ChannelMessageEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.ChannelMessageEvent)
}
ChannelMessageEvent::ChannelMessageEvent(const ChannelMessageEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_name().size() > 0) {
    target_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_name(),
      GetArenaNoVirtual());
  }
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender().size() > 0) {
    sender_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender(),
      GetArenaNoVirtual());
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  ::memcpy(&language_, &from.language_,
    static_cast<size_t>(reinterpret_cast<char*>(&skill_in_language_) -
    reinterpret_cast<char*>(&language_)) + sizeof(skill_in_language_));
  // @@protoc_insertion_point(copy_constructor:pb.ChannelMessageEvent)
}

void ChannelMessageEvent::SharedCtor() {
  target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&language_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_in_language_) -
      reinterpret_cast<char*>(&language_)) + sizeof(skill_in_language_));
}

ChannelMessageEvent::~ChannelMessageEvent() {
  // @@protoc_insertion_point(destructor:pb.ChannelMessageEvent)
  SharedDtor();
}

void ChannelMessageEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  target_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChannelMessageEvent::ArenaDtor(void* object) {
  ChannelMessageEvent* _this = reinterpret_cast< ChannelMessageEvent* >(object);
  (void)_this;
}
void ChannelMessageEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ChannelMessageEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelMessageEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelMessageEvent& ChannelMessageEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_ChannelMessageEvent.base);
  return *internal_default_instance();
}


void ChannelMessageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ChannelMessageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  sender_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&language_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_in_language_) -
      reinterpret_cast<char*>(&language_)) + sizeof(skill_in_language_));
  _internal_metadata_.Clear();
}

bool ChannelMessageEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ChannelMessageEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_name().data(), static_cast<int>(this->target_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessageEvent.target_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessageEvent.sender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 language = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.MessageType number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_number(static_cast< ::pb::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cm_unknown4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cm_unknown4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skill_in_language = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_in_language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChannelMessageEvent.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ChannelMessageEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ChannelMessageEvent)
  return false;
#undef DO_
}

void ChannelMessageEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ChannelMessageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_name = 1;
  if (this->target_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_name().data(), static_cast<int>(this->target_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessageEvent.target_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target_name(), output);
  }

  // string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessageEvent.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sender(), output);
  }

  // uint32 language = 3;
  if (this->language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->language(), output);
  }

  // .pb.MessageType number = 4;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->number(), output);
  }

  // uint32 cm_unknown4 = 5;
  if (this->cm_unknown4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cm_unknown4(), output);
  }

  // uint32 skill_in_language = 6;
  if (this->skill_in_language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->skill_in_language(), output);
  }

  // string message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessageEvent.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ChannelMessageEvent)
}

::google::protobuf::uint8* ChannelMessageEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ChannelMessageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_name = 1;
  if (this->target_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_name().data(), static_cast<int>(this->target_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessageEvent.target_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target_name(), target);
  }

  // string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessageEvent.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender(), target);
  }

  // uint32 language = 3;
  if (this->language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->language(), target);
  }

  // .pb.MessageType number = 4;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->number(), target);
  }

  // uint32 cm_unknown4 = 5;
  if (this->cm_unknown4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cm_unknown4(), target);
  }

  // uint32 skill_in_language = 6;
  if (this->skill_in_language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->skill_in_language(), target);
  }

  // string message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChannelMessageEvent.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ChannelMessageEvent)
  return target;
}

size_t ChannelMessageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ChannelMessageEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target_name = 1;
  if (this->target_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_name());
  }

  // string sender = 2;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // string message = 7;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // uint32 language = 3;
  if (this->language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->language());
  }

  // .pb.MessageType number = 4;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->number());
  }

  // uint32 cm_unknown4 = 5;
  if (this->cm_unknown4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cm_unknown4());
  }

  // uint32 skill_in_language = 6;
  if (this->skill_in_language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_in_language());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelMessageEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ChannelMessageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelMessageEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelMessageEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ChannelMessageEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ChannelMessageEvent)
    MergeFrom(*source);
  }
}

void ChannelMessageEvent::MergeFrom(const ChannelMessageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ChannelMessageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_name().size() > 0) {
    set_target_name(from.target_name());
  }
  if (from.sender().size() > 0) {
    set_sender(from.sender());
  }
  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.language() != 0) {
    set_language(from.language());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.cm_unknown4() != 0) {
    set_cm_unknown4(from.cm_unknown4());
  }
  if (from.skill_in_language() != 0) {
    set_skill_in_language(from.skill_in_language());
  }
}

void ChannelMessageEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ChannelMessageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelMessageEvent::CopyFrom(const ChannelMessageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ChannelMessageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelMessageEvent::IsInitialized() const {
  return true;
}

void ChannelMessageEvent::Swap(ChannelMessageEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ChannelMessageEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ChannelMessageEvent::UnsafeArenaSwap(ChannelMessageEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ChannelMessageEvent::InternalSwap(ChannelMessageEvent* other) {
  using std::swap;
  target_name_.Swap(&other->target_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sender_.Swap(&other->sender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(language_, other->language_);
  swap(number_, other->number_);
  swap(cm_unknown4_, other->cm_unknown4_);
  swap(skill_in_language_, other->skill_in_language_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelMessageEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SpecialMessageEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpecialMessageEvent::kHeaderFieldNumber;
const int SpecialMessageEvent::kNumberFieldNumber;
const int SpecialMessageEvent::kTargetSpawnIdFieldNumber;
const int SpecialMessageEvent::kSayerFieldNumber;
const int SpecialMessageEvent::kUnknown12FieldNumber;
const int SpecialMessageEvent::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpecialMessageEvent::SpecialMessageEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_SpecialMessageEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SpecialMessageEvent)
}
SpecialMessageEvent::SpecialMessageEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_SpecialMessageEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SpecialMessageEvent)
}
SpecialMessageEvent::SpecialMessageEvent(const SpecialMessageEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.header().size() > 0) {
    header_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header(),
      GetArenaNoVirtual());
  }
  sayer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sayer().size() > 0) {
    sayer_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sayer(),
      GetArenaNoVirtual());
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  ::memcpy(&number_, &from.number_,
    static_cast<size_t>(reinterpret_cast<char*>(&unknown12_) -
    reinterpret_cast<char*>(&number_)) + sizeof(unknown12_));
  // @@protoc_insertion_point(copy_constructor:pb.SpecialMessageEvent)
}

void SpecialMessageEvent::SharedCtor() {
  header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sayer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown12_) -
      reinterpret_cast<char*>(&number_)) + sizeof(unknown12_));
}

SpecialMessageEvent::~SpecialMessageEvent() {
  // @@protoc_insertion_point(destructor:pb.SpecialMessageEvent)
  SharedDtor();
}

void SpecialMessageEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sayer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SpecialMessageEvent::ArenaDtor(void* object) {
  SpecialMessageEvent* _this = reinterpret_cast< SpecialMessageEvent* >(object);
  (void)_this;
}
void SpecialMessageEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SpecialMessageEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SpecialMessageEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpecialMessageEvent& SpecialMessageEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_SpecialMessageEvent.base);
  return *internal_default_instance();
}


void SpecialMessageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SpecialMessageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  header_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  sayer_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown12_) -
      reinterpret_cast<char*>(&number_)) + sizeof(unknown12_));
  _internal_metadata_.Clear();
}

bool SpecialMessageEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SpecialMessageEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->header().data(), static_cast<int>(this->header().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpecialMessageEvent.header"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.MessageType number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_number(static_cast< ::pb::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_spawn_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_spawn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sayer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sayer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sayer().data(), static_cast<int>(this->sayer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpecialMessageEvent.sayer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown12 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpecialMessageEvent.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SpecialMessageEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SpecialMessageEvent)
  return false;
#undef DO_
}

void SpecialMessageEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SpecialMessageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string header = 1;
  if (this->header().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->header().data(), static_cast<int>(this->header().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpecialMessageEvent.header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->header(), output);
  }

  // .pb.MessageType number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->number(), output);
  }

  // uint32 target_spawn_id = 3;
  if (this->target_spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_spawn_id(), output);
  }

  // string sayer = 4;
  if (this->sayer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sayer().data(), static_cast<int>(this->sayer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpecialMessageEvent.sayer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sayer(), output);
  }

  // uint32 unknown12 = 5;
  if (this->unknown12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unknown12(), output);
  }

  // string message = 6;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpecialMessageEvent.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SpecialMessageEvent)
}

::google::protobuf::uint8* SpecialMessageEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.SpecialMessageEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string header = 1;
  if (this->header().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->header().data(), static_cast<int>(this->header().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpecialMessageEvent.header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->header(), target);
  }

  // .pb.MessageType number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->number(), target);
  }

  // uint32 target_spawn_id = 3;
  if (this->target_spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_spawn_id(), target);
  }

  // string sayer = 4;
  if (this->sayer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sayer().data(), static_cast<int>(this->sayer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpecialMessageEvent.sayer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sayer(), target);
  }

  // uint32 unknown12 = 5;
  if (this->unknown12() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unknown12(), target);
  }

  // string message = 6;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpecialMessageEvent.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SpecialMessageEvent)
  return target;
}

size_t SpecialMessageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SpecialMessageEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string header = 1;
  if (this->header().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->header());
  }

  // string sayer = 4;
  if (this->sayer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sayer());
  }

  // string message = 6;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .pb.MessageType number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->number());
  }

  // uint32 target_spawn_id = 3;
  if (this->target_spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_spawn_id());
  }

  // uint32 unknown12 = 5;
  if (this->unknown12() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown12());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecialMessageEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SpecialMessageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecialMessageEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpecialMessageEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SpecialMessageEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SpecialMessageEvent)
    MergeFrom(*source);
  }
}

void SpecialMessageEvent::MergeFrom(const SpecialMessageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SpecialMessageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.header().size() > 0) {
    set_header(from.header());
  }
  if (from.sayer().size() > 0) {
    set_sayer(from.sayer());
  }
  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.target_spawn_id() != 0) {
    set_target_spawn_id(from.target_spawn_id());
  }
  if (from.unknown12() != 0) {
    set_unknown12(from.unknown12());
  }
}

void SpecialMessageEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SpecialMessageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecialMessageEvent::CopyFrom(const SpecialMessageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SpecialMessageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecialMessageEvent::IsInitialized() const {
  return true;
}

void SpecialMessageEvent::Swap(SpecialMessageEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SpecialMessageEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SpecialMessageEvent::UnsafeArenaSwap(SpecialMessageEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SpecialMessageEvent::InternalSwap(SpecialMessageEvent* other) {
  using std::swap;
  header_.Swap(&other->header_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sayer_.Swap(&other->sayer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(number_, other->number_);
  swap(target_spawn_id_, other->target_spawn_id_);
  swap(unknown12_, other->unknown12_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SpecialMessageEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewZoneEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewZoneEvent::kCharNameFieldNumber;
const int NewZoneEvent::kZoneShortNameFieldNumber;
const int NewZoneEvent::kZoneLongNameFieldNumber;
const int NewZoneEvent::kZtypeFieldNumber;
const int NewZoneEvent::kFogRedFieldNumber;
const int NewZoneEvent::kFogGreenFieldNumber;
const int NewZoneEvent::kFogBlueFieldNumber;
const int NewZoneEvent::kUnknown323FieldNumber;
const int NewZoneEvent::kFogMinclipFieldNumber;
const int NewZoneEvent::kFogMaxclipFieldNumber;
const int NewZoneEvent::kGravityFieldNumber;
const int NewZoneEvent::kTimeTypeFieldNumber;
const int NewZoneEvent::kRainChanceFieldNumber;
const int NewZoneEvent::kRainDurationFieldNumber;
const int NewZoneEvent::kSnowChanceFieldNumber;
const int NewZoneEvent::kSnowDurationFieldNumber;
const int NewZoneEvent::kUnknown360FieldNumber;
const int NewZoneEvent::kSkyFieldNumber;
const int NewZoneEvent::kUnknown331FieldNumber;
const int NewZoneEvent::kZoneExpMultiplierFieldNumber;
const int NewZoneEvent::kSafeYFieldNumber;
const int NewZoneEvent::kSafeXFieldNumber;
const int NewZoneEvent::kSafeZFieldNumber;
const int NewZoneEvent::kMaxZFieldNumber;
const int NewZoneEvent::kUnderworldFieldNumber;
const int NewZoneEvent::kMinclipFieldNumber;
const int NewZoneEvent::kMaxclipFieldNumber;
const int NewZoneEvent::kUnknownEndFieldNumber;
const int NewZoneEvent::kZoneShortName2FieldNumber;
const int NewZoneEvent::kUnknown672FieldNumber;
const int NewZoneEvent::kZoneIdFieldNumber;
const int NewZoneEvent::kZoneInstanceFieldNumber;
const int NewZoneEvent::kUnknown688FieldNumber;
const int NewZoneEvent::kUnknown692FieldNumber;
const int NewZoneEvent::kFogDensityFieldNumber;
const int NewZoneEvent::kSuspendBuffsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewZoneEvent::NewZoneEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_NewZoneEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.NewZoneEvent)
}
NewZoneEvent::NewZoneEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_NewZoneEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.NewZoneEvent)
}
NewZoneEvent::NewZoneEvent(const NewZoneEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  char_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.char_name().size() > 0) {
    char_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.char_name(),
      GetArenaNoVirtual());
  }
  zone_short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone_short_name().size() > 0) {
    zone_short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_short_name(),
      GetArenaNoVirtual());
  }
  zone_long_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone_long_name().size() > 0) {
    zone_long_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_long_name(),
      GetArenaNoVirtual());
  }
  zone_short_name2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone_short_name2().size() > 0) {
    zone_short_name2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_short_name2(),
      GetArenaNoVirtual());
  }
  unknown672_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unknown672().size() > 0) {
    unknown672_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unknown672(),
      GetArenaNoVirtual());
  }
  ::memcpy(&ztype_, &from.ztype_,
    static_cast<size_t>(reinterpret_cast<char*>(&suspend_buffs_) -
    reinterpret_cast<char*>(&ztype_)) + sizeof(suspend_buffs_));
  // @@protoc_insertion_point(copy_constructor:pb.NewZoneEvent)
}

void NewZoneEvent::SharedCtor() {
  char_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_long_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_short_name2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unknown672_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ztype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suspend_buffs_) -
      reinterpret_cast<char*>(&ztype_)) + sizeof(suspend_buffs_));
}

NewZoneEvent::~NewZoneEvent() {
  // @@protoc_insertion_point(destructor:pb.NewZoneEvent)
  SharedDtor();
}

void NewZoneEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  char_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_short_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_long_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_short_name2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unknown672_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewZoneEvent::ArenaDtor(void* object) {
  NewZoneEvent* _this = reinterpret_cast< NewZoneEvent* >(object);
  (void)_this;
}
void NewZoneEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void NewZoneEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewZoneEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewZoneEvent& NewZoneEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_NewZoneEvent.base);
  return *internal_default_instance();
}


void NewZoneEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.NewZoneEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  char_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  zone_short_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  zone_long_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  zone_short_name2_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  unknown672_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&ztype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suspend_buffs_) -
      reinterpret_cast<char*>(&ztype_)) + sizeof(suspend_buffs_));
  _internal_metadata_.Clear();
}

bool NewZoneEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.NewZoneEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string char_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_char_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->char_name().data(), static_cast<int>(this->char_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.NewZoneEvent.char_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone_short_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone_short_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone_short_name().data(), static_cast<int>(this->zone_short_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.NewZoneEvent.zone_short_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone_long_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone_long_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone_long_name().data(), static_cast<int>(this->zone_long_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.NewZoneEvent.zone_long_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ztype = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ztype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fog_red = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fog_red_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fog_green = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fog_green_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fog_blue = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fog_blue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown323 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown323_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fog_minclip = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fog_minclip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fog_maxclip = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fog_maxclip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float gravity = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gravity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 time_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rain_chance = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rain_chance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rain_duration = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rain_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 snow_chance = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &snow_chance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 snow_duration = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &snow_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown360 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown360_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sky = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sky_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown331 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown331_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zone_exp_multiplier = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zone_exp_multiplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float safe_y = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &safe_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float safe_x = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &safe_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float safe_z = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &safe_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_z = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float underworld = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(205u /* 205 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &underworld_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float minclip = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(213u /* 213 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minclip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float maxclip = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(221u /* 221 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxclip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown_end = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone_short_name2 = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone_short_name2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone_short_name2().data(), static_cast<int>(this->zone_short_name2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.NewZoneEvent.zone_short_name2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unknown672 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unknown672()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unknown672().data(), static_cast<int>(this->unknown672().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.NewZoneEvent.unknown672"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zone_id = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zone_instance = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zone_instance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown688 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown688_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown692 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown692_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fog_density = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 285 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fog_density_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 suspend_buffs = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suspend_buffs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.NewZoneEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.NewZoneEvent)
  return false;
#undef DO_
}

void NewZoneEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.NewZoneEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string char_name = 1;
  if (this->char_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char_name().data(), static_cast<int>(this->char_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.char_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->char_name(), output);
  }

  // string zone_short_name = 2;
  if (this->zone_short_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_short_name().data(), static_cast<int>(this->zone_short_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.zone_short_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone_short_name(), output);
  }

  // string zone_long_name = 3;
  if (this->zone_long_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_long_name().data(), static_cast<int>(this->zone_long_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.zone_long_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->zone_long_name(), output);
  }

  // uint32 ztype = 4;
  if (this->ztype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ztype(), output);
  }

  // uint32 fog_red = 5;
  if (this->fog_red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->fog_red(), output);
  }

  // uint32 fog_green = 6;
  if (this->fog_green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->fog_green(), output);
  }

  // uint32 fog_blue = 7;
  if (this->fog_blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->fog_blue(), output);
  }

  // uint32 unknown323 = 8;
  if (this->unknown323() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->unknown323(), output);
  }

  // float fog_minclip = 9;
  if (this->fog_minclip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->fog_minclip(), output);
  }

  // float fog_maxclip = 10;
  if (this->fog_maxclip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->fog_maxclip(), output);
  }

  // float gravity = 11;
  if (this->gravity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->gravity(), output);
  }

  // uint32 time_type = 12;
  if (this->time_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->time_type(), output);
  }

  // uint32 rain_chance = 13;
  if (this->rain_chance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->rain_chance(), output);
  }

  // uint32 rain_duration = 14;
  if (this->rain_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->rain_duration(), output);
  }

  // uint32 snow_chance = 15;
  if (this->snow_chance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->snow_chance(), output);
  }

  // uint32 snow_duration = 16;
  if (this->snow_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->snow_duration(), output);
  }

  // uint32 unknown360 = 17;
  if (this->unknown360() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->unknown360(), output);
  }

  // uint32 sky = 18;
  if (this->sky() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->sky(), output);
  }

  // uint32 unknown331 = 19;
  if (this->unknown331() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->unknown331(), output);
  }

  // float zone_exp_multiplier = 20;
  if (this->zone_exp_multiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->zone_exp_multiplier(), output);
  }

  // float safe_y = 21;
  if (this->safe_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->safe_y(), output);
  }

  // float safe_x = 22;
  if (this->safe_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->safe_x(), output);
  }

  // float safe_z = 23;
  if (this->safe_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->safe_z(), output);
  }

  // float max_z = 24;
  if (this->max_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->max_z(), output);
  }

  // float underworld = 25;
  if (this->underworld() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(25, this->underworld(), output);
  }

  // float minclip = 26;
  if (this->minclip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(26, this->minclip(), output);
  }

  // float maxclip = 27;
  if (this->maxclip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(27, this->maxclip(), output);
  }

  // uint32 unknown_end = 28;
  if (this->unknown_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->unknown_end(), output);
  }

  // string zone_short_name2 = 29;
  if (this->zone_short_name2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_short_name2().data(), static_cast<int>(this->zone_short_name2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.zone_short_name2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->zone_short_name2(), output);
  }

  // string unknown672 = 30;
  if (this->unknown672().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unknown672().data(), static_cast<int>(this->unknown672().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.unknown672");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->unknown672(), output);
  }

  // uint32 zone_id = 31;
  if (this->zone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->zone_id(), output);
  }

  // uint32 zone_instance = 32;
  if (this->zone_instance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->zone_instance(), output);
  }

  // uint32 unknown688 = 33;
  if (this->unknown688() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->unknown688(), output);
  }

  // uint32 unknown692 = 34;
  if (this->unknown692() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->unknown692(), output);
  }

  // float fog_density = 35;
  if (this->fog_density() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(35, this->fog_density(), output);
  }

  // uint32 suspend_buffs = 36;
  if (this->suspend_buffs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->suspend_buffs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.NewZoneEvent)
}

::google::protobuf::uint8* NewZoneEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.NewZoneEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string char_name = 1;
  if (this->char_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char_name().data(), static_cast<int>(this->char_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.char_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->char_name(), target);
  }

  // string zone_short_name = 2;
  if (this->zone_short_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_short_name().data(), static_cast<int>(this->zone_short_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.zone_short_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone_short_name(), target);
  }

  // string zone_long_name = 3;
  if (this->zone_long_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_long_name().data(), static_cast<int>(this->zone_long_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.zone_long_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->zone_long_name(), target);
  }

  // uint32 ztype = 4;
  if (this->ztype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ztype(), target);
  }

  // uint32 fog_red = 5;
  if (this->fog_red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->fog_red(), target);
  }

  // uint32 fog_green = 6;
  if (this->fog_green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->fog_green(), target);
  }

  // uint32 fog_blue = 7;
  if (this->fog_blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->fog_blue(), target);
  }

  // uint32 unknown323 = 8;
  if (this->unknown323() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->unknown323(), target);
  }

  // float fog_minclip = 9;
  if (this->fog_minclip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->fog_minclip(), target);
  }

  // float fog_maxclip = 10;
  if (this->fog_maxclip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->fog_maxclip(), target);
  }

  // float gravity = 11;
  if (this->gravity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->gravity(), target);
  }

  // uint32 time_type = 12;
  if (this->time_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->time_type(), target);
  }

  // uint32 rain_chance = 13;
  if (this->rain_chance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->rain_chance(), target);
  }

  // uint32 rain_duration = 14;
  if (this->rain_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->rain_duration(), target);
  }

  // uint32 snow_chance = 15;
  if (this->snow_chance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->snow_chance(), target);
  }

  // uint32 snow_duration = 16;
  if (this->snow_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->snow_duration(), target);
  }

  // uint32 unknown360 = 17;
  if (this->unknown360() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->unknown360(), target);
  }

  // uint32 sky = 18;
  if (this->sky() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->sky(), target);
  }

  // uint32 unknown331 = 19;
  if (this->unknown331() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->unknown331(), target);
  }

  // float zone_exp_multiplier = 20;
  if (this->zone_exp_multiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->zone_exp_multiplier(), target);
  }

  // float safe_y = 21;
  if (this->safe_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->safe_y(), target);
  }

  // float safe_x = 22;
  if (this->safe_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->safe_x(), target);
  }

  // float safe_z = 23;
  if (this->safe_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->safe_z(), target);
  }

  // float max_z = 24;
  if (this->max_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->max_z(), target);
  }

  // float underworld = 25;
  if (this->underworld() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(25, this->underworld(), target);
  }

  // float minclip = 26;
  if (this->minclip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(26, this->minclip(), target);
  }

  // float maxclip = 27;
  if (this->maxclip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(27, this->maxclip(), target);
  }

  // uint32 unknown_end = 28;
  if (this->unknown_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->unknown_end(), target);
  }

  // string zone_short_name2 = 29;
  if (this->zone_short_name2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_short_name2().data(), static_cast<int>(this->zone_short_name2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.zone_short_name2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->zone_short_name2(), target);
  }

  // string unknown672 = 30;
  if (this->unknown672().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unknown672().data(), static_cast<int>(this->unknown672().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.NewZoneEvent.unknown672");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->unknown672(), target);
  }

  // uint32 zone_id = 31;
  if (this->zone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->zone_id(), target);
  }

  // uint32 zone_instance = 32;
  if (this->zone_instance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->zone_instance(), target);
  }

  // uint32 unknown688 = 33;
  if (this->unknown688() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->unknown688(), target);
  }

  // uint32 unknown692 = 34;
  if (this->unknown692() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->unknown692(), target);
  }

  // float fog_density = 35;
  if (this->fog_density() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(35, this->fog_density(), target);
  }

  // uint32 suspend_buffs = 36;
  if (this->suspend_buffs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->suspend_buffs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.NewZoneEvent)
  return target;
}

size_t NewZoneEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.NewZoneEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string char_name = 1;
  if (this->char_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->char_name());
  }

  // string zone_short_name = 2;
  if (this->zone_short_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone_short_name());
  }

  // string zone_long_name = 3;
  if (this->zone_long_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone_long_name());
  }

  // string zone_short_name2 = 29;
  if (this->zone_short_name2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone_short_name2());
  }

  // string unknown672 = 30;
  if (this->unknown672().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unknown672());
  }

  // uint32 ztype = 4;
  if (this->ztype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ztype());
  }

  // uint32 fog_red = 5;
  if (this->fog_red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fog_red());
  }

  // uint32 fog_green = 6;
  if (this->fog_green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fog_green());
  }

  // uint32 fog_blue = 7;
  if (this->fog_blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fog_blue());
  }

  // uint32 unknown323 = 8;
  if (this->unknown323() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown323());
  }

  // float fog_minclip = 9;
  if (this->fog_minclip() != 0) {
    total_size += 1 + 4;
  }

  // float fog_maxclip = 10;
  if (this->fog_maxclip() != 0) {
    total_size += 1 + 4;
  }

  // float gravity = 11;
  if (this->gravity() != 0) {
    total_size += 1 + 4;
  }

  // uint32 time_type = 12;
  if (this->time_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time_type());
  }

  // uint32 rain_chance = 13;
  if (this->rain_chance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rain_chance());
  }

  // uint32 rain_duration = 14;
  if (this->rain_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rain_duration());
  }

  // uint32 snow_chance = 15;
  if (this->snow_chance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->snow_chance());
  }

  // uint32 snow_duration = 16;
  if (this->snow_duration() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->snow_duration());
  }

  // uint32 unknown360 = 17;
  if (this->unknown360() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown360());
  }

  // uint32 sky = 18;
  if (this->sky() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sky());
  }

  // uint32 unknown331 = 19;
  if (this->unknown331() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown331());
  }

  // float zone_exp_multiplier = 20;
  if (this->zone_exp_multiplier() != 0) {
    total_size += 2 + 4;
  }

  // float safe_y = 21;
  if (this->safe_y() != 0) {
    total_size += 2 + 4;
  }

  // float safe_x = 22;
  if (this->safe_x() != 0) {
    total_size += 2 + 4;
  }

  // float safe_z = 23;
  if (this->safe_z() != 0) {
    total_size += 2 + 4;
  }

  // float max_z = 24;
  if (this->max_z() != 0) {
    total_size += 2 + 4;
  }

  // float underworld = 25;
  if (this->underworld() != 0) {
    total_size += 2 + 4;
  }

  // float minclip = 26;
  if (this->minclip() != 0) {
    total_size += 2 + 4;
  }

  // float maxclip = 27;
  if (this->maxclip() != 0) {
    total_size += 2 + 4;
  }

  // uint32 unknown_end = 28;
  if (this->unknown_end() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown_end());
  }

  // uint32 zone_id = 31;
  if (this->zone_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zone_id());
  }

  // uint32 zone_instance = 32;
  if (this->zone_instance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zone_instance());
  }

  // uint32 unknown688 = 33;
  if (this->unknown688() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown688());
  }

  // uint32 unknown692 = 34;
  if (this->unknown692() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown692());
  }

  // float fog_density = 35;
  if (this->fog_density() != 0) {
    total_size += 2 + 4;
  }

  // uint32 suspend_buffs = 36;
  if (this->suspend_buffs() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->suspend_buffs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewZoneEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.NewZoneEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const NewZoneEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewZoneEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.NewZoneEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.NewZoneEvent)
    MergeFrom(*source);
  }
}

void NewZoneEvent::MergeFrom(const NewZoneEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.NewZoneEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.char_name().size() > 0) {
    set_char_name(from.char_name());
  }
  if (from.zone_short_name().size() > 0) {
    set_zone_short_name(from.zone_short_name());
  }
  if (from.zone_long_name().size() > 0) {
    set_zone_long_name(from.zone_long_name());
  }
  if (from.zone_short_name2().size() > 0) {
    set_zone_short_name2(from.zone_short_name2());
  }
  if (from.unknown672().size() > 0) {
    set_unknown672(from.unknown672());
  }
  if (from.ztype() != 0) {
    set_ztype(from.ztype());
  }
  if (from.fog_red() != 0) {
    set_fog_red(from.fog_red());
  }
  if (from.fog_green() != 0) {
    set_fog_green(from.fog_green());
  }
  if (from.fog_blue() != 0) {
    set_fog_blue(from.fog_blue());
  }
  if (from.unknown323() != 0) {
    set_unknown323(from.unknown323());
  }
  if (from.fog_minclip() != 0) {
    set_fog_minclip(from.fog_minclip());
  }
  if (from.fog_maxclip() != 0) {
    set_fog_maxclip(from.fog_maxclip());
  }
  if (from.gravity() != 0) {
    set_gravity(from.gravity());
  }
  if (from.time_type() != 0) {
    set_time_type(from.time_type());
  }
  if (from.rain_chance() != 0) {
    set_rain_chance(from.rain_chance());
  }
  if (from.rain_duration() != 0) {
    set_rain_duration(from.rain_duration());
  }
  if (from.snow_chance() != 0) {
    set_snow_chance(from.snow_chance());
  }
  if (from.snow_duration() != 0) {
    set_snow_duration(from.snow_duration());
  }
  if (from.unknown360() != 0) {
    set_unknown360(from.unknown360());
  }
  if (from.sky() != 0) {
    set_sky(from.sky());
  }
  if (from.unknown331() != 0) {
    set_unknown331(from.unknown331());
  }
  if (from.zone_exp_multiplier() != 0) {
    set_zone_exp_multiplier(from.zone_exp_multiplier());
  }
  if (from.safe_y() != 0) {
    set_safe_y(from.safe_y());
  }
  if (from.safe_x() != 0) {
    set_safe_x(from.safe_x());
  }
  if (from.safe_z() != 0) {
    set_safe_z(from.safe_z());
  }
  if (from.max_z() != 0) {
    set_max_z(from.max_z());
  }
  if (from.underworld() != 0) {
    set_underworld(from.underworld());
  }
  if (from.minclip() != 0) {
    set_minclip(from.minclip());
  }
  if (from.maxclip() != 0) {
    set_maxclip(from.maxclip());
  }
  if (from.unknown_end() != 0) {
    set_unknown_end(from.unknown_end());
  }
  if (from.zone_id() != 0) {
    set_zone_id(from.zone_id());
  }
  if (from.zone_instance() != 0) {
    set_zone_instance(from.zone_instance());
  }
  if (from.unknown688() != 0) {
    set_unknown688(from.unknown688());
  }
  if (from.unknown692() != 0) {
    set_unknown692(from.unknown692());
  }
  if (from.fog_density() != 0) {
    set_fog_density(from.fog_density());
  }
  if (from.suspend_buffs() != 0) {
    set_suspend_buffs(from.suspend_buffs());
  }
}

void NewZoneEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.NewZoneEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewZoneEvent::CopyFrom(const NewZoneEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.NewZoneEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewZoneEvent::IsInitialized() const {
  return true;
}

void NewZoneEvent::Swap(NewZoneEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    NewZoneEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void NewZoneEvent::UnsafeArenaSwap(NewZoneEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void NewZoneEvent::InternalSwap(NewZoneEvent* other) {
  using std::swap;
  char_name_.Swap(&other->char_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_short_name_.Swap(&other->zone_short_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_long_name_.Swap(&other->zone_long_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zone_short_name2_.Swap(&other->zone_short_name2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unknown672_.Swap(&other->unknown672_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ztype_, other->ztype_);
  swap(fog_red_, other->fog_red_);
  swap(fog_green_, other->fog_green_);
  swap(fog_blue_, other->fog_blue_);
  swap(unknown323_, other->unknown323_);
  swap(fog_minclip_, other->fog_minclip_);
  swap(fog_maxclip_, other->fog_maxclip_);
  swap(gravity_, other->gravity_);
  swap(time_type_, other->time_type_);
  swap(rain_chance_, other->rain_chance_);
  swap(rain_duration_, other->rain_duration_);
  swap(snow_chance_, other->snow_chance_);
  swap(snow_duration_, other->snow_duration_);
  swap(unknown360_, other->unknown360_);
  swap(sky_, other->sky_);
  swap(unknown331_, other->unknown331_);
  swap(zone_exp_multiplier_, other->zone_exp_multiplier_);
  swap(safe_y_, other->safe_y_);
  swap(safe_x_, other->safe_x_);
  swap(safe_z_, other->safe_z_);
  swap(max_z_, other->max_z_);
  swap(underworld_, other->underworld_);
  swap(minclip_, other->minclip_);
  swap(maxclip_, other->maxclip_);
  swap(unknown_end_, other->unknown_end_);
  swap(zone_id_, other->zone_id_);
  swap(zone_instance_, other->zone_instance_);
  swap(unknown688_, other->unknown688_);
  swap(unknown692_, other->unknown692_);
  swap(fog_density_, other->fog_density_);
  swap(suspend_buffs_, other->suspend_buffs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewZoneEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WearChangeEvent::InitAsDefaultInstance() {
  ::pb::_WearChangeEvent_default_instance_._instance.get_mutable()->color_ = const_cast< ::pb::Tint*>(
      ::pb::Tint::internal_default_instance());
}
void WearChangeEvent::unsafe_arena_set_allocated_color(
    ::pb::Tint* color) {
  if (GetArenaNoVirtual() == NULL) {
    delete color_;
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.WearChangeEvent.color)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WearChangeEvent::kSpawnIdFieldNumber;
const int WearChangeEvent::kMaterialFieldNumber;
const int WearChangeEvent::kUnknown06FieldNumber;
const int WearChangeEvent::kEliteMaterialFieldNumber;
const int WearChangeEvent::kHeroForgeModelFieldNumber;
const int WearChangeEvent::kUnknown18FieldNumber;
const int WearChangeEvent::kColorFieldNumber;
const int WearChangeEvent::kWearSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WearChangeEvent::WearChangeEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_WearChangeEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.WearChangeEvent)
}
WearChangeEvent::WearChangeEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_WearChangeEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.WearChangeEvent)
}
WearChangeEvent::WearChangeEvent(const WearChangeEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_color()) {
    color_ = new ::pb::Tint(*from.color_);
  } else {
    color_ = NULL;
  }
  ::memcpy(&spawn_id_, &from.spawn_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&wear_slot_id_) -
    reinterpret_cast<char*>(&spawn_id_)) + sizeof(wear_slot_id_));
  // @@protoc_insertion_point(copy_constructor:pb.WearChangeEvent)
}

void WearChangeEvent::SharedCtor() {
  ::memset(&color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wear_slot_id_) -
      reinterpret_cast<char*>(&color_)) + sizeof(wear_slot_id_));
}

WearChangeEvent::~WearChangeEvent() {
  // @@protoc_insertion_point(destructor:pb.WearChangeEvent)
  SharedDtor();
}

void WearChangeEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete color_;
}

void WearChangeEvent::ArenaDtor(void* object) {
  WearChangeEvent* _this = reinterpret_cast< WearChangeEvent* >(object);
  (void)_this;
}
void WearChangeEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WearChangeEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WearChangeEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WearChangeEvent& WearChangeEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_WearChangeEvent.base);
  return *internal_default_instance();
}


void WearChangeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.WearChangeEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && color_ != NULL) {
    delete color_;
  }
  color_ = NULL;
  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wear_slot_id_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(wear_slot_id_));
  _internal_metadata_.Clear();
}

bool WearChangeEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.WearChangeEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 spawn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown06 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown06_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 elite_material = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elite_material_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hero_forge_model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_forge_model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown18 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown18_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Tint color = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 wear_slot_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wear_slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.WearChangeEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.WearChangeEvent)
  return false;
#undef DO_
}

void WearChangeEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.WearChangeEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // uint32 material = 2;
  if (this->material() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->material(), output);
  }

  // uint32 unknown06 = 3;
  if (this->unknown06() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unknown06(), output);
  }

  // uint32 elite_material = 4;
  if (this->elite_material() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->elite_material(), output);
  }

  // uint32 hero_forge_model = 5;
  if (this->hero_forge_model() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hero_forge_model(), output);
  }

  // uint32 unknown18 = 6;
  if (this->unknown18() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->unknown18(), output);
  }

  // .pb.Tint color = 7;
  if (this->has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_color(), output);
  }

  // uint32 wear_slot_id = 8;
  if (this->wear_slot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->wear_slot_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.WearChangeEvent)
}

::google::protobuf::uint8* WearChangeEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.WearChangeEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // uint32 material = 2;
  if (this->material() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->material(), target);
  }

  // uint32 unknown06 = 3;
  if (this->unknown06() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unknown06(), target);
  }

  // uint32 elite_material = 4;
  if (this->elite_material() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->elite_material(), target);
  }

  // uint32 hero_forge_model = 5;
  if (this->hero_forge_model() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hero_forge_model(), target);
  }

  // uint32 unknown18 = 6;
  if (this->unknown18() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->unknown18(), target);
  }

  // .pb.Tint color = 7;
  if (this->has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_color(), deterministic, target);
  }

  // uint32 wear_slot_id = 8;
  if (this->wear_slot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->wear_slot_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.WearChangeEvent)
  return target;
}

size_t WearChangeEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.WearChangeEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.Tint color = 7;
  if (this->has_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *color_);
  }

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // uint32 material = 2;
  if (this->material() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material());
  }

  // uint32 unknown06 = 3;
  if (this->unknown06() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown06());
  }

  // uint32 elite_material = 4;
  if (this->elite_material() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->elite_material());
  }

  // uint32 hero_forge_model = 5;
  if (this->hero_forge_model() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hero_forge_model());
  }

  // uint32 unknown18 = 6;
  if (this->unknown18() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown18());
  }

  // uint32 wear_slot_id = 8;
  if (this->wear_slot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wear_slot_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WearChangeEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.WearChangeEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const WearChangeEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WearChangeEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.WearChangeEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.WearChangeEvent)
    MergeFrom(*source);
  }
}

void WearChangeEvent::MergeFrom(const WearChangeEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.WearChangeEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_color()) {
    mutable_color()->::pb::Tint::MergeFrom(from.color());
  }
  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.material() != 0) {
    set_material(from.material());
  }
  if (from.unknown06() != 0) {
    set_unknown06(from.unknown06());
  }
  if (from.elite_material() != 0) {
    set_elite_material(from.elite_material());
  }
  if (from.hero_forge_model() != 0) {
    set_hero_forge_model(from.hero_forge_model());
  }
  if (from.unknown18() != 0) {
    set_unknown18(from.unknown18());
  }
  if (from.wear_slot_id() != 0) {
    set_wear_slot_id(from.wear_slot_id());
  }
}

void WearChangeEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.WearChangeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WearChangeEvent::CopyFrom(const WearChangeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.WearChangeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WearChangeEvent::IsInitialized() const {
  return true;
}

void WearChangeEvent::Swap(WearChangeEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WearChangeEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WearChangeEvent::UnsafeArenaSwap(WearChangeEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WearChangeEvent::InternalSwap(WearChangeEvent* other) {
  using std::swap;
  swap(color_, other->color_);
  swap(spawn_id_, other->spawn_id_);
  swap(material_, other->material_);
  swap(unknown06_, other->unknown06_);
  swap(elite_material_, other->elite_material_);
  swap(hero_forge_model_, other->hero_forge_model_);
  swap(unknown18_, other->unknown18_);
  swap(wear_slot_id_, other->wear_slot_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WearChangeEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteSpawnEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSpawnEvent::kSpawnIdFieldNumber;
const int DeleteSpawnEvent::kDecayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSpawnEvent::DeleteSpawnEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_DeleteSpawnEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DeleteSpawnEvent)
}
DeleteSpawnEvent::DeleteSpawnEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_DeleteSpawnEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.DeleteSpawnEvent)
}
DeleteSpawnEvent::DeleteSpawnEvent(const DeleteSpawnEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&spawn_id_, &from.spawn_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&decay_) -
    reinterpret_cast<char*>(&spawn_id_)) + sizeof(decay_));
  // @@protoc_insertion_point(copy_constructor:pb.DeleteSpawnEvent)
}

void DeleteSpawnEvent::SharedCtor() {
  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&decay_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(decay_));
}

DeleteSpawnEvent::~DeleteSpawnEvent() {
  // @@protoc_insertion_point(destructor:pb.DeleteSpawnEvent)
  SharedDtor();
}

void DeleteSpawnEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DeleteSpawnEvent::ArenaDtor(void* object) {
  DeleteSpawnEvent* _this = reinterpret_cast< DeleteSpawnEvent* >(object);
  (void)_this;
}
void DeleteSpawnEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteSpawnEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteSpawnEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteSpawnEvent& DeleteSpawnEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_DeleteSpawnEvent.base);
  return *internal_default_instance();
}


void DeleteSpawnEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DeleteSpawnEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&decay_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(decay_));
  _internal_metadata_.Clear();
}

bool DeleteSpawnEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DeleteSpawnEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 spawn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 decay = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &decay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DeleteSpawnEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DeleteSpawnEvent)
  return false;
#undef DO_
}

void DeleteSpawnEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DeleteSpawnEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // uint32 decay = 2;
  if (this->decay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->decay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DeleteSpawnEvent)
}

::google::protobuf::uint8* DeleteSpawnEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DeleteSpawnEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // uint32 decay = 2;
  if (this->decay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->decay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DeleteSpawnEvent)
  return target;
}

size_t DeleteSpawnEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DeleteSpawnEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // uint32 decay = 2;
  if (this->decay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->decay());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSpawnEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DeleteSpawnEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSpawnEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSpawnEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DeleteSpawnEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DeleteSpawnEvent)
    MergeFrom(*source);
  }
}

void DeleteSpawnEvent::MergeFrom(const DeleteSpawnEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DeleteSpawnEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.decay() != 0) {
    set_decay(from.decay());
  }
}

void DeleteSpawnEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DeleteSpawnEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSpawnEvent::CopyFrom(const DeleteSpawnEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DeleteSpawnEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSpawnEvent::IsInitialized() const {
  return true;
}

void DeleteSpawnEvent::Swap(DeleteSpawnEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteSpawnEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeleteSpawnEvent::UnsafeArenaSwap(DeleteSpawnEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteSpawnEvent::InternalSwap(DeleteSpawnEvent* other) {
  using std::swap;
  swap(spawn_id_, other->spawn_id_);
  swap(decay_, other->decay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteSpawnEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HPEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HPEvent::kSpawnIdFieldNumber;
const int HPEvent::kCurHpFieldNumber;
const int HPEvent::kMaxHpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HPEvent::HPEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_HPEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.HPEvent)
}
HPEvent::HPEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_HPEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.HPEvent)
}
HPEvent::HPEvent(const HPEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&spawn_id_, &from.spawn_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_hp_) -
    reinterpret_cast<char*>(&spawn_id_)) + sizeof(max_hp_));
  // @@protoc_insertion_point(copy_constructor:pb.HPEvent)
}

void HPEvent::SharedCtor() {
  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_hp_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(max_hp_));
}

HPEvent::~HPEvent() {
  // @@protoc_insertion_point(destructor:pb.HPEvent)
  SharedDtor();
}

void HPEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HPEvent::ArenaDtor(void* object) {
  HPEvent* _this = reinterpret_cast< HPEvent* >(object);
  (void)_this;
}
void HPEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HPEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HPEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HPEvent& HPEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_HPEvent.base);
  return *internal_default_instance();
}


void HPEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.HPEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_hp_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(max_hp_));
  _internal_metadata_.Clear();
}

bool HPEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.HPEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 spawn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_hp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_hp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.HPEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.HPEvent)
  return false;
#undef DO_
}

void HPEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.HPEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // uint32 cur_hp = 2;
  if (this->cur_hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur_hp(), output);
  }

  // uint32 max_hp = 3;
  if (this->max_hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_hp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.HPEvent)
}

::google::protobuf::uint8* HPEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.HPEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // uint32 cur_hp = 2;
  if (this->cur_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur_hp(), target);
  }

  // uint32 max_hp = 3;
  if (this->max_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_hp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.HPEvent)
  return target;
}

size_t HPEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.HPEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // uint32 cur_hp = 2;
  if (this->cur_hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_hp());
  }

  // uint32 max_hp = 3;
  if (this->max_hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_hp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HPEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.HPEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const HPEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HPEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.HPEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.HPEvent)
    MergeFrom(*source);
  }
}

void HPEvent::MergeFrom(const HPEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.HPEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.cur_hp() != 0) {
    set_cur_hp(from.cur_hp());
  }
  if (from.max_hp() != 0) {
    set_max_hp(from.max_hp());
  }
}

void HPEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.HPEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HPEvent::CopyFrom(const HPEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.HPEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HPEvent::IsInitialized() const {
  return true;
}

void HPEvent::Swap(HPEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HPEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HPEvent::UnsafeArenaSwap(HPEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HPEvent::InternalSwap(HPEvent* other) {
  using std::swap;
  swap(spawn_id_, other->spawn_id_);
  swap(cur_hp_, other->cur_hp_);
  swap(max_hp_, other->max_hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HPEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerPositionUpdateEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPositionUpdateEvent::kSpawnIdFieldNumber;
const int PlayerPositionUpdateEvent::kDeltaHeadingFieldNumber;
const int PlayerPositionUpdateEvent::kXPosFieldNumber;
const int PlayerPositionUpdateEvent::kPadding0002FieldNumber;
const int PlayerPositionUpdateEvent::kYPosFieldNumber;
const int PlayerPositionUpdateEvent::kAnimationFieldNumber;
const int PlayerPositionUpdateEvent::kPadding0006FieldNumber;
const int PlayerPositionUpdateEvent::kZPosFieldNumber;
const int PlayerPositionUpdateEvent::kDeltaYFieldNumber;
const int PlayerPositionUpdateEvent::kDeltaXFieldNumber;
const int PlayerPositionUpdateEvent::kHeadingFieldNumber;
const int PlayerPositionUpdateEvent::kPadding0014FieldNumber;
const int PlayerPositionUpdateEvent::kDeltaZFieldNumber;
const int PlayerPositionUpdateEvent::kPadding0018FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPositionUpdateEvent::PlayerPositionUpdateEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_PlayerPositionUpdateEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PlayerPositionUpdateEvent)
}
PlayerPositionUpdateEvent::PlayerPositionUpdateEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_PlayerPositionUpdateEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.PlayerPositionUpdateEvent)
}
PlayerPositionUpdateEvent::PlayerPositionUpdateEvent(const PlayerPositionUpdateEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&spawn_id_, &from.spawn_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&padding0018_) -
    reinterpret_cast<char*>(&spawn_id_)) + sizeof(padding0018_));
  // @@protoc_insertion_point(copy_constructor:pb.PlayerPositionUpdateEvent)
}

void PlayerPositionUpdateEvent::SharedCtor() {
  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&padding0018_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(padding0018_));
}

PlayerPositionUpdateEvent::~PlayerPositionUpdateEvent() {
  // @@protoc_insertion_point(destructor:pb.PlayerPositionUpdateEvent)
  SharedDtor();
}

void PlayerPositionUpdateEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PlayerPositionUpdateEvent::ArenaDtor(void* object) {
  PlayerPositionUpdateEvent* _this = reinterpret_cast< PlayerPositionUpdateEvent* >(object);
  (void)_this;
}
void PlayerPositionUpdateEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerPositionUpdateEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerPositionUpdateEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPositionUpdateEvent& PlayerPositionUpdateEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_PlayerPositionUpdateEvent.base);
  return *internal_default_instance();
}


void PlayerPositionUpdateEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PlayerPositionUpdateEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&spawn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&padding0018_) -
      reinterpret_cast<char*>(&spawn_id_)) + sizeof(padding0018_));
  _internal_metadata_.Clear();
}

bool PlayerPositionUpdateEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PlayerPositionUpdateEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 spawn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 delta_heading = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 padding0002 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0002_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y_pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 animation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &animation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 padding0006 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0006_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z_pos = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 delta_y = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 delta_x = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 heading = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 padding0014 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0014_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 delta_z = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 padding0018 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0018_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PlayerPositionUpdateEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PlayerPositionUpdateEvent)
  return false;
#undef DO_
}

void PlayerPositionUpdateEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PlayerPositionUpdateEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // int32 delta_heading = 2;
  if (this->delta_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delta_heading(), output);
  }

  // int32 x_pos = 3;
  if (this->x_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x_pos(), output);
  }

  // int32 padding0002 = 4;
  if (this->padding0002() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->padding0002(), output);
  }

  // int32 y_pos = 5;
  if (this->y_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y_pos(), output);
  }

  // int32 animation = 6;
  if (this->animation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->animation(), output);
  }

  // int32 padding0006 = 7;
  if (this->padding0006() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->padding0006(), output);
  }

  // int32 z_pos = 8;
  if (this->z_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->z_pos(), output);
  }

  // int32 delta_y = 9;
  if (this->delta_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->delta_y(), output);
  }

  // int32 delta_x = 10;
  if (this->delta_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->delta_x(), output);
  }

  // int32 heading = 11;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->heading(), output);
  }

  // int32 padding0014 = 12;
  if (this->padding0014() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->padding0014(), output);
  }

  // int32 delta_z = 13;
  if (this->delta_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->delta_z(), output);
  }

  // int32 padding0018 = 14;
  if (this->padding0018() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->padding0018(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.PlayerPositionUpdateEvent)
}

::google::protobuf::uint8* PlayerPositionUpdateEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.PlayerPositionUpdateEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // int32 delta_heading = 2;
  if (this->delta_heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delta_heading(), target);
  }

  // int32 x_pos = 3;
  if (this->x_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x_pos(), target);
  }

  // int32 padding0002 = 4;
  if (this->padding0002() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->padding0002(), target);
  }

  // int32 y_pos = 5;
  if (this->y_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y_pos(), target);
  }

  // int32 animation = 6;
  if (this->animation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->animation(), target);
  }

  // int32 padding0006 = 7;
  if (this->padding0006() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->padding0006(), target);
  }

  // int32 z_pos = 8;
  if (this->z_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->z_pos(), target);
  }

  // int32 delta_y = 9;
  if (this->delta_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->delta_y(), target);
  }

  // int32 delta_x = 10;
  if (this->delta_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->delta_x(), target);
  }

  // int32 heading = 11;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->heading(), target);
  }

  // int32 padding0014 = 12;
  if (this->padding0014() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->padding0014(), target);
  }

  // int32 delta_z = 13;
  if (this->delta_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->delta_z(), target);
  }

  // int32 padding0018 = 14;
  if (this->padding0018() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->padding0018(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PlayerPositionUpdateEvent)
  return target;
}

size_t PlayerPositionUpdateEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PlayerPositionUpdateEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // int32 delta_heading = 2;
  if (this->delta_heading() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_heading());
  }

  // int32 x_pos = 3;
  if (this->x_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_pos());
  }

  // int32 padding0002 = 4;
  if (this->padding0002() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0002());
  }

  // int32 y_pos = 5;
  if (this->y_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_pos());
  }

  // int32 animation = 6;
  if (this->animation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->animation());
  }

  // int32 padding0006 = 7;
  if (this->padding0006() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0006());
  }

  // int32 z_pos = 8;
  if (this->z_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z_pos());
  }

  // int32 delta_y = 9;
  if (this->delta_y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_y());
  }

  // int32 delta_x = 10;
  if (this->delta_x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_x());
  }

  // int32 heading = 11;
  if (this->heading() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heading());
  }

  // int32 padding0014 = 12;
  if (this->padding0014() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0014());
  }

  // int32 delta_z = 13;
  if (this->delta_z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_z());
  }

  // int32 padding0018 = 14;
  if (this->padding0018() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0018());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerPositionUpdateEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PlayerPositionUpdateEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPositionUpdateEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPositionUpdateEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PlayerPositionUpdateEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PlayerPositionUpdateEvent)
    MergeFrom(*source);
  }
}

void PlayerPositionUpdateEvent::MergeFrom(const PlayerPositionUpdateEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PlayerPositionUpdateEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.delta_heading() != 0) {
    set_delta_heading(from.delta_heading());
  }
  if (from.x_pos() != 0) {
    set_x_pos(from.x_pos());
  }
  if (from.padding0002() != 0) {
    set_padding0002(from.padding0002());
  }
  if (from.y_pos() != 0) {
    set_y_pos(from.y_pos());
  }
  if (from.animation() != 0) {
    set_animation(from.animation());
  }
  if (from.padding0006() != 0) {
    set_padding0006(from.padding0006());
  }
  if (from.z_pos() != 0) {
    set_z_pos(from.z_pos());
  }
  if (from.delta_y() != 0) {
    set_delta_y(from.delta_y());
  }
  if (from.delta_x() != 0) {
    set_delta_x(from.delta_x());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.padding0014() != 0) {
    set_padding0014(from.padding0014());
  }
  if (from.delta_z() != 0) {
    set_delta_z(from.delta_z());
  }
  if (from.padding0018() != 0) {
    set_padding0018(from.padding0018());
  }
}

void PlayerPositionUpdateEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PlayerPositionUpdateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPositionUpdateEvent::CopyFrom(const PlayerPositionUpdateEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PlayerPositionUpdateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPositionUpdateEvent::IsInitialized() const {
  return true;
}

void PlayerPositionUpdateEvent::Swap(PlayerPositionUpdateEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerPositionUpdateEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerPositionUpdateEvent::UnsafeArenaSwap(PlayerPositionUpdateEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerPositionUpdateEvent::InternalSwap(PlayerPositionUpdateEvent* other) {
  using std::swap;
  swap(spawn_id_, other->spawn_id_);
  swap(delta_heading_, other->delta_heading_);
  swap(x_pos_, other->x_pos_);
  swap(padding0002_, other->padding0002_);
  swap(y_pos_, other->y_pos_);
  swap(animation_, other->animation_);
  swap(padding0006_, other->padding0006_);
  swap(z_pos_, other->z_pos_);
  swap(delta_y_, other->delta_y_);
  swap(delta_x_, other->delta_x_);
  swap(heading_, other->heading_);
  swap(padding0014_, other->padding0014_);
  swap(delta_z_, other->delta_z_);
  swap(padding0018_, other->padding0018_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerPositionUpdateEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnimationEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnimationEvent::kSpawnidFieldNumber;
const int AnimationEvent::kSpeedFieldNumber;
const int AnimationEvent::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnimationEvent::AnimationEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_AnimationEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.AnimationEvent)
}
AnimationEvent::AnimationEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_AnimationEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.AnimationEvent)
}
AnimationEvent::AnimationEvent(const AnimationEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&spawnid_, &from.spawnid_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&spawnid_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:pb.AnimationEvent)
}

void AnimationEvent::SharedCtor() {
  ::memset(&spawnid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&spawnid_)) + sizeof(action_));
}

AnimationEvent::~AnimationEvent() {
  // @@protoc_insertion_point(destructor:pb.AnimationEvent)
  SharedDtor();
}

void AnimationEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AnimationEvent::ArenaDtor(void* object) {
  AnimationEvent* _this = reinterpret_cast< AnimationEvent* >(object);
  (void)_this;
}
void AnimationEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AnimationEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AnimationEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnimationEvent& AnimationEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_AnimationEvent.base);
  return *internal_default_instance();
}


void AnimationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.AnimationEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&spawnid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&spawnid_)) + sizeof(action_));
  _internal_metadata_.Clear();
}

bool AnimationEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.AnimationEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 spawnid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawnid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.AnimationEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.AnimationEvent)
  return false;
#undef DO_
}

void AnimationEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.AnimationEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawnid = 1;
  if (this->spawnid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawnid(), output);
  }

  // uint32 speed = 2;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->speed(), output);
  }

  // uint32 action = 3;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.AnimationEvent)
}

::google::protobuf::uint8* AnimationEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.AnimationEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 spawnid = 1;
  if (this->spawnid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawnid(), target);
  }

  // uint32 speed = 2;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->speed(), target);
  }

  // uint32 action = 3;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.AnimationEvent)
  return target;
}

size_t AnimationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.AnimationEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 spawnid = 1;
  if (this->spawnid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawnid());
  }

  // uint32 speed = 2;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speed());
  }

  // uint32 action = 3;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnimationEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.AnimationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const AnimationEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnimationEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.AnimationEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.AnimationEvent)
    MergeFrom(*source);
  }
}

void AnimationEvent::MergeFrom(const AnimationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.AnimationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spawnid() != 0) {
    set_spawnid(from.spawnid());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void AnimationEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.AnimationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimationEvent::CopyFrom(const AnimationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.AnimationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnimationEvent::IsInitialized() const {
  return true;
}

void AnimationEvent::Swap(AnimationEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AnimationEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AnimationEvent::UnsafeArenaSwap(AnimationEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AnimationEvent::InternalSwap(AnimationEvent* other) {
  using std::swap;
  swap(spawnid_, other->spawnid_);
  swap(speed_, other->speed_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AnimationEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SpawnEvent::InitAsDefaultInstance() {
  ::pb::_SpawnEvent_default_instance_._instance.get_mutable()->equipment_ = const_cast< ::pb::TextureProfile*>(
      ::pb::TextureProfile::internal_default_instance());
  ::pb::_SpawnEvent_default_instance_._instance.get_mutable()->equipment_tint_ = const_cast< ::pb::TintProfile*>(
      ::pb::TintProfile::internal_default_instance());
}
void SpawnEvent::unsafe_arena_set_allocated_equipment(
    ::pb::TextureProfile* equipment) {
  if (GetArenaNoVirtual() == NULL) {
    delete equipment_;
  }
  equipment_ = equipment;
  if (equipment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SpawnEvent.equipment)
}
void SpawnEvent::unsafe_arena_set_allocated_equipment_tint(
    ::pb::TintProfile* equipment_tint) {
  if (GetArenaNoVirtual() == NULL) {
    delete equipment_tint_;
  }
  equipment_tint_ = equipment_tint;
  if (equipment_tint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SpawnEvent.equipment_tint)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpawnEvent::kUnknown0000FieldNumber;
const int SpawnEvent::kGmFieldNumber;
const int SpawnEvent::kUnknown0003FieldNumber;
const int SpawnEvent::kAaitleFieldNumber;
const int SpawnEvent::kUnknown0004FieldNumber;
const int SpawnEvent::kAnonFieldNumber;
const int SpawnEvent::kFaceFieldNumber;
const int SpawnEvent::kNameFieldNumber;
const int SpawnEvent::kDeityFieldNumber;
const int SpawnEvent::kUnknown0073FieldNumber;
const int SpawnEvent::kSizeFieldNumber;
const int SpawnEvent::kUnknown0079FieldNumber;
const int SpawnEvent::kNPCFieldNumber;
const int SpawnEvent::kInvisFieldNumber;
const int SpawnEvent::kHaircolorFieldNumber;
const int SpawnEvent::kCurHpFieldNumber;
const int SpawnEvent::kMaxHpFieldNumber;
const int SpawnEvent::kFindableFieldNumber;
const int SpawnEvent::kUnknown0089FieldNumber;
const int SpawnEvent::kDeltaHeadingFieldNumber;
const int SpawnEvent::kXFieldNumber;
const int SpawnEvent::kPadding0054FieldNumber;
const int SpawnEvent::kYFieldNumber;
const int SpawnEvent::kAnimationFieldNumber;
const int SpawnEvent::kPadding0058FieldNumber;
const int SpawnEvent::kZFieldNumber;
const int SpawnEvent::kDeltaYFieldNumber;
const int SpawnEvent::kDeltaXFieldNumber;
const int SpawnEvent::kHeadingFieldNumber;
const int SpawnEvent::kPadding0066FieldNumber;
const int SpawnEvent::kDeltaZFieldNumber;
const int SpawnEvent::kPadding0070FieldNumber;
const int SpawnEvent::kEyecolor1FieldNumber;
const int SpawnEvent::kUnknown0115FieldNumber;
const int SpawnEvent::kStandStateFieldNumber;
const int SpawnEvent::kDrakkinHeritageFieldNumber;
const int SpawnEvent::kDrakkinTattooFieldNumber;
const int SpawnEvent::kDrakkinDetailsFieldNumber;
const int SpawnEvent::kShowhelmFieldNumber;
const int SpawnEvent::kUnknown0140FieldNumber;
const int SpawnEvent::kIsNpcFieldNumber;
const int SpawnEvent::kHairstyleFieldNumber;
const int SpawnEvent::kBeardFieldNumber;
const int SpawnEvent::kUnknown0147FieldNumber;
const int SpawnEvent::kLevelFieldNumber;
const int SpawnEvent::kPlayerStateFieldNumber;
const int SpawnEvent::kBeardcolorFieldNumber;
const int SpawnEvent::kSuffixFieldNumber;
const int SpawnEvent::kPetOwnerIdFieldNumber;
const int SpawnEvent::kGuildrankFieldNumber;
const int SpawnEvent::kUnknown0194FieldNumber;
const int SpawnEvent::kEquipmentFieldNumber;
const int SpawnEvent::kRunspeedFieldNumber;
const int SpawnEvent::kAfkFieldNumber;
const int SpawnEvent::kGuildIDFieldNumber;
const int SpawnEvent::kTitleFieldNumber;
const int SpawnEvent::kUnknown0274FieldNumber;
const int SpawnEvent::kSetTo0XFFFieldNumber;
const int SpawnEvent::kHelmFieldNumber;
const int SpawnEvent::kRaceFieldNumber;
const int SpawnEvent::kUnknown0288FieldNumber;
const int SpawnEvent::kLastNameFieldNumber;
const int SpawnEvent::kWalkspeedFieldNumber;
const int SpawnEvent::kUnknown0328FieldNumber;
const int SpawnEvent::kIsPetFieldNumber;
const int SpawnEvent::kLightFieldNumber;
const int SpawnEvent::kClassFieldNumber;
const int SpawnEvent::kEyecolor2FieldNumber;
const int SpawnEvent::kFlymodeFieldNumber;
const int SpawnEvent::kGenderFieldNumber;
const int SpawnEvent::kBodytypeFieldNumber;
const int SpawnEvent::kUnknown0336FieldNumber;
const int SpawnEvent::kEquipChest2FieldNumber;
const int SpawnEvent::kMountColorFieldNumber;
const int SpawnEvent::kSpawnIdFieldNumber;
const int SpawnEvent::kUnknown0344FieldNumber;
const int SpawnEvent::kIsMercenaryFieldNumber;
const int SpawnEvent::kEquipmentTintFieldNumber;
const int SpawnEvent::kLfgFieldNumber;
const int SpawnEvent::kDestructibleObjectFieldNumber;
const int SpawnEvent::kDestructibleModelFieldNumber;
const int SpawnEvent::kDestructibleName2FieldNumber;
const int SpawnEvent::kDestructibleStringFieldNumber;
const int SpawnEvent::kDestructibleAppearanceFieldNumber;
const int SpawnEvent::kDestructibleUnk1FieldNumber;
const int SpawnEvent::kDestructibleID1FieldNumber;
const int SpawnEvent::kDestructibleID2FieldNumber;
const int SpawnEvent::kDestructibleID3FieldNumber;
const int SpawnEvent::kDestructibleID4FieldNumber;
const int SpawnEvent::kDestructibleUnk2FieldNumber;
const int SpawnEvent::kDestructibleUnk3FieldNumber;
const int SpawnEvent::kDestructibleUnk4FieldNumber;
const int SpawnEvent::kDestructibleUnk5FieldNumber;
const int SpawnEvent::kDestructibleUnk6FieldNumber;
const int SpawnEvent::kDestructibleUnk7FieldNumber;
const int SpawnEvent::kDestructibleUnk8FieldNumber;
const int SpawnEvent::kDestructibleUnk9FieldNumber;
const int SpawnEvent::kTargetableWithHotkeyFieldNumber;
const int SpawnEvent::kShowNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpawnEvent::SpawnEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_SpawnEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SpawnEvent)
}
SpawnEvent::SpawnEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_SpawnEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SpawnEvent)
}
SpawnEvent::SpawnEvent(const SpawnEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suffix().size() > 0) {
    suffix_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suffix(),
      GetArenaNoVirtual());
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title(),
      GetArenaNoVirtual());
  }
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lastname().size() > 0) {
    lastname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastname(),
      GetArenaNoVirtual());
  }
  destructiblemodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destructiblemodel().size() > 0) {
    destructiblemodel_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destructiblemodel(),
      GetArenaNoVirtual());
  }
  destructiblename2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destructiblename2().size() > 0) {
    destructiblename2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destructiblename2(),
      GetArenaNoVirtual());
  }
  destructiblestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destructiblestring().size() > 0) {
    destructiblestring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destructiblestring(),
      GetArenaNoVirtual());
  }
  if (from.has_equipment()) {
    equipment_ = new ::pb::TextureProfile(*from.equipment_);
  } else {
    equipment_ = NULL;
  }
  if (from.has_equipment_tint()) {
    equipment_tint_ = new ::pb::TintProfile(*from.equipment_tint_);
  } else {
    equipment_tint_ = NULL;
  }
  ::memcpy(&unknown0000_, &from.unknown0000_,
    static_cast<size_t>(reinterpret_cast<char*>(&destructibleunk9_) -
    reinterpret_cast<char*>(&unknown0000_)) + sizeof(destructibleunk9_));
  // @@protoc_insertion_point(copy_constructor:pb.SpawnEvent)
}

void SpawnEvent::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblemodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblename2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&equipment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destructibleunk9_) -
      reinterpret_cast<char*>(&equipment_)) + sizeof(destructibleunk9_));
}

SpawnEvent::~SpawnEvent() {
  // @@protoc_insertion_point(destructor:pb.SpawnEvent)
  SharedDtor();
}

void SpawnEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblemodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblename2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblestring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete equipment_;
  if (this != internal_default_instance()) delete equipment_tint_;
}

void SpawnEvent::ArenaDtor(void* object) {
  SpawnEvent* _this = reinterpret_cast< SpawnEvent* >(object);
  (void)_this;
}
void SpawnEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SpawnEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SpawnEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpawnEvent& SpawnEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_SpawnEvent.base);
  return *internal_default_instance();
}


void SpawnEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SpawnEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  suffix_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  lastname_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  destructiblemodel_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  destructiblename2_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  destructiblestring_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && equipment_ != NULL) {
    delete equipment_;
  }
  equipment_ = NULL;
  if (GetArenaNoVirtual() == NULL && equipment_tint_ != NULL) {
    delete equipment_tint_;
  }
  equipment_tint_ = NULL;
  ::memset(&unknown0000_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destructibleunk9_) -
      reinterpret_cast<char*>(&unknown0000_)) + sizeof(destructibleunk9_));
  _internal_metadata_.Clear();
}

bool SpawnEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SpawnEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 unknown0000 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0000_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0003 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0003_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 aaitle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &aaitle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0004 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0004_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 anon = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 face = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &face_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpawnEvent.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 deity = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0073 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0073_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float size = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0079 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0079_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 NPC = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 invis = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &invis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 haircolor = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &haircolor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 curHp = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curhp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_hp = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 findable = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &findable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0089 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0089_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deltaHeading = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltaheading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 padding0054 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0054_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 animation = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &animation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 padding0058 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0058_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deltaY = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deltaX = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 heading = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 padding0066 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0066_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deltaZ = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltaz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 padding0070 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0070_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 eyecolor1 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eyecolor1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0115 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0115_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 StandState = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &standstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 drakkin_heritage = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drakkin_heritage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 drakkin_tattoo = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drakkin_tattoo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 drakkin_details = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drakkin_details_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 showhelm = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &showhelm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0140 = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0140_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 is_npc = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_npc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hairstyle = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hairstyle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 beard = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0147 = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0147_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PlayerState = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 beardcolor = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beardcolor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string suffix = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suffix().data(), static_cast<int>(this->suffix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpawnEvent.suffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 petOwnerId = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &petownerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guildrank = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guildrank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0194 = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0194_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.TextureProfile equipment = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_equipment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float runspeed = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 429 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &runspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 afk = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 432 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &afk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guildID = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 440 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpawnEvent.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0274 = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 456 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0274_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 set_to_0xFF = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 464 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &set_to_0xff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 helm = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 472 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &helm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 race = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &race_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0288 = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 488 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0288_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lastName = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastname().data(), static_cast<int>(this->lastname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpawnEvent.lastName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float walkspeed = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(253u /* 509 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &walkspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0328 = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 512 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0328_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 is_pet = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 520 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_pet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 light = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 528 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &light_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 class_ = 67;
      case 67: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 536 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 eyecolor2 = 68;
      case 68: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 544 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eyecolor2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flymode = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 552 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flymode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gender = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 560 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bodytype = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 568 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bodytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0336 = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 576 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0336_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 equip_chest2 = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 584 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equip_chest2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mount_color = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 592 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mount_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 spawnId = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 600 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawnid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown0344 = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 608 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0344_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IsMercenary = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 616 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ismercenary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.TintProfile equipment_tint = 78;
      case 78: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_equipment_tint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lfg = 79;
      case 79: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 632 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lfg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DestructibleObject = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 640 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destructibleobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DestructibleModel = 82;
      case 82: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destructiblemodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destructiblemodel().data(), static_cast<int>(this->destructiblemodel().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpawnEvent.DestructibleModel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DestructibleName2 = 83;
      case 83: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destructiblename2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destructiblename2().data(), static_cast<int>(this->destructiblename2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpawnEvent.DestructibleName2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DestructibleString = 84;
      case 84: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destructiblestring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destructiblestring().data(), static_cast<int>(this->destructiblestring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SpawnEvent.DestructibleString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleAppearance = 85;
      case 85: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 680 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleappearance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk1 = 86;
      case 86: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 688 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleID1 = 87;
      case 87: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 696 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleid1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleID2 = 88;
      case 88: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 704 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleid2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleID3 = 89;
      case 89: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 712 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleid3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleID4 = 90;
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 720 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleid4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk2 = 91;
      case 91: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 728 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk3 = 92;
      case 92: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 736 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk4 = 93;
      case 93: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 744 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk5 = 94;
      case 94: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 752 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk6 = 95;
      case 95: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 760 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk7 = 96;
      case 96: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 768 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk8 = 97;
      case 97: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 776 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DestructibleUnk9 = 98;
      case 98: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 784 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool targetable_with_hotkey = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 792 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &targetable_with_hotkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool show_name = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_name_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SpawnEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SpawnEvent)
  return false;
#undef DO_
}

void SpawnEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SpawnEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 unknown0000 = 1;
  if (this->unknown0000() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->unknown0000(), output);
  }

  // uint32 gm = 2;
  if (this->gm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gm(), output);
  }

  // uint32 unknown0003 = 3;
  if (this->unknown0003() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unknown0003(), output);
  }

  // uint32 aaitle = 4;
  if (this->aaitle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->aaitle(), output);
  }

  // uint32 unknown0004 = 5;
  if (this->unknown0004() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unknown0004(), output);
  }

  // uint32 anon = 6;
  if (this->anon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->anon(), output);
  }

  // uint32 face = 7;
  if (this->face() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->face(), output);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // uint32 deity = 9;
  if (this->deity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->deity(), output);
  }

  // uint32 unknown0073 = 10;
  if (this->unknown0073() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->unknown0073(), output);
  }

  // float size = 11;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->size(), output);
  }

  // uint32 unknown0079 = 12;
  if (this->unknown0079() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->unknown0079(), output);
  }

  // uint32 NPC = 13;
  if (this->npc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->npc(), output);
  }

  // uint32 invis = 14;
  if (this->invis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->invis(), output);
  }

  // uint32 haircolor = 15;
  if (this->haircolor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->haircolor(), output);
  }

  // uint32 curHp = 16;
  if (this->curhp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->curhp(), output);
  }

  // uint32 max_hp = 17;
  if (this->max_hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->max_hp(), output);
  }

  // uint32 findable = 18;
  if (this->findable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->findable(), output);
  }

  // uint32 unknown0089 = 19;
  if (this->unknown0089() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->unknown0089(), output);
  }

  // int32 deltaHeading = 20;
  if (this->deltaheading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->deltaheading(), output);
  }

  // int32 x = 21;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->x(), output);
  }

  // int32 padding0054 = 22;
  if (this->padding0054() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->padding0054(), output);
  }

  // int32 y = 23;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->y(), output);
  }

  // int32 animation = 24;
  if (this->animation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->animation(), output);
  }

  // int32 padding0058 = 25;
  if (this->padding0058() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->padding0058(), output);
  }

  // int32 z = 26;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->z(), output);
  }

  // int32 deltaY = 27;
  if (this->deltay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->deltay(), output);
  }

  // int32 deltaX = 28;
  if (this->deltax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->deltax(), output);
  }

  // uint32 heading = 29;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->heading(), output);
  }

  // int32 padding0066 = 30;
  if (this->padding0066() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->padding0066(), output);
  }

  // int32 deltaZ = 31;
  if (this->deltaz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->deltaz(), output);
  }

  // int32 padding0070 = 32;
  if (this->padding0070() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->padding0070(), output);
  }

  // uint32 eyecolor1 = 33;
  if (this->eyecolor1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->eyecolor1(), output);
  }

  // uint32 unknown0115 = 34;
  if (this->unknown0115() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->unknown0115(), output);
  }

  // uint32 StandState = 35;
  if (this->standstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->standstate(), output);
  }

  // uint32 drakkin_heritage = 36;
  if (this->drakkin_heritage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->drakkin_heritage(), output);
  }

  // uint32 drakkin_tattoo = 37;
  if (this->drakkin_tattoo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->drakkin_tattoo(), output);
  }

  // uint32 drakkin_details = 38;
  if (this->drakkin_details() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->drakkin_details(), output);
  }

  // uint32 showhelm = 39;
  if (this->showhelm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->showhelm(), output);
  }

  // uint32 unknown0140 = 40;
  if (this->unknown0140() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->unknown0140(), output);
  }

  // uint32 is_npc = 41;
  if (this->is_npc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(41, this->is_npc(), output);
  }

  // uint32 hairstyle = 42;
  if (this->hairstyle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->hairstyle(), output);
  }

  // uint32 beard = 43;
  if (this->beard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->beard(), output);
  }

  // uint32 unknown0147 = 44;
  if (this->unknown0147() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(44, this->unknown0147(), output);
  }

  // uint32 level = 45;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(45, this->level(), output);
  }

  // uint32 PlayerState = 46;
  if (this->playerstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(46, this->playerstate(), output);
  }

  // uint32 beardcolor = 47;
  if (this->beardcolor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->beardcolor(), output);
  }

  // string suffix = 48;
  if (this->suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suffix().data(), static_cast<int>(this->suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->suffix(), output);
  }

  // uint32 petOwnerId = 49;
  if (this->petownerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->petownerid(), output);
  }

  // uint32 guildrank = 50;
  if (this->guildrank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->guildrank(), output);
  }

  // uint32 unknown0194 = 51;
  if (this->unknown0194() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(51, this->unknown0194(), output);
  }

  // .pb.TextureProfile equipment = 52;
  if (this->has_equipment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->_internal_equipment(), output);
  }

  // float runspeed = 53;
  if (this->runspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(53, this->runspeed(), output);
  }

  // uint32 afk = 54;
  if (this->afk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(54, this->afk(), output);
  }

  // uint32 guildID = 55;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(55, this->guildid(), output);
  }

  // string title = 56;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      56, this->title(), output);
  }

  // uint32 unknown0274 = 57;
  if (this->unknown0274() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(57, this->unknown0274(), output);
  }

  // uint32 set_to_0xFF = 58;
  if (this->set_to_0xff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(58, this->set_to_0xff(), output);
  }

  // uint32 helm = 59;
  if (this->helm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(59, this->helm(), output);
  }

  // uint32 race = 60;
  if (this->race() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(60, this->race(), output);
  }

  // uint32 unknown0288 = 61;
  if (this->unknown0288() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(61, this->unknown0288(), output);
  }

  // string lastName = 62;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), static_cast<int>(this->lastname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.lastName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      62, this->lastname(), output);
  }

  // float walkspeed = 63;
  if (this->walkspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(63, this->walkspeed(), output);
  }

  // uint32 unknown0328 = 64;
  if (this->unknown0328() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(64, this->unknown0328(), output);
  }

  // uint32 is_pet = 65;
  if (this->is_pet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(65, this->is_pet(), output);
  }

  // uint32 light = 66;
  if (this->light() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(66, this->light(), output);
  }

  // uint32 class_ = 67;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(67, this->class_(), output);
  }

  // uint32 eyecolor2 = 68;
  if (this->eyecolor2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(68, this->eyecolor2(), output);
  }

  // uint32 flymode = 69;
  if (this->flymode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(69, this->flymode(), output);
  }

  // uint32 gender = 70;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(70, this->gender(), output);
  }

  // uint32 bodytype = 71;
  if (this->bodytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(71, this->bodytype(), output);
  }

  // uint32 unknown0336 = 72;
  if (this->unknown0336() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(72, this->unknown0336(), output);
  }

  // uint32 equip_chest2 = 73;
  if (this->equip_chest2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(73, this->equip_chest2(), output);
  }

  // uint32 mount_color = 74;
  if (this->mount_color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(74, this->mount_color(), output);
  }

  // uint32 spawnId = 75;
  if (this->spawnid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(75, this->spawnid(), output);
  }

  // uint32 unknown0344 = 76;
  if (this->unknown0344() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(76, this->unknown0344(), output);
  }

  // uint32 IsMercenary = 77;
  if (this->ismercenary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(77, this->ismercenary(), output);
  }

  // .pb.TintProfile equipment_tint = 78;
  if (this->has_equipment_tint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      78, this->_internal_equipment_tint(), output);
  }

  // uint32 lfg = 79;
  if (this->lfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(79, this->lfg(), output);
  }

  // bool DestructibleObject = 80;
  if (this->destructibleobject() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(80, this->destructibleobject(), output);
  }

  // string DestructibleModel = 82;
  if (this->destructiblemodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblemodel().data(), static_cast<int>(this->destructiblemodel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.DestructibleModel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      82, this->destructiblemodel(), output);
  }

  // string DestructibleName2 = 83;
  if (this->destructiblename2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblename2().data(), static_cast<int>(this->destructiblename2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.DestructibleName2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      83, this->destructiblename2(), output);
  }

  // string DestructibleString = 84;
  if (this->destructiblestring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblestring().data(), static_cast<int>(this->destructiblestring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.DestructibleString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      84, this->destructiblestring(), output);
  }

  // uint32 DestructibleAppearance = 85;
  if (this->destructibleappearance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(85, this->destructibleappearance(), output);
  }

  // uint32 DestructibleUnk1 = 86;
  if (this->destructibleunk1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(86, this->destructibleunk1(), output);
  }

  // uint32 DestructibleID1 = 87;
  if (this->destructibleid1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(87, this->destructibleid1(), output);
  }

  // uint32 DestructibleID2 = 88;
  if (this->destructibleid2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(88, this->destructibleid2(), output);
  }

  // uint32 DestructibleID3 = 89;
  if (this->destructibleid3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(89, this->destructibleid3(), output);
  }

  // uint32 DestructibleID4 = 90;
  if (this->destructibleid4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(90, this->destructibleid4(), output);
  }

  // uint32 DestructibleUnk2 = 91;
  if (this->destructibleunk2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(91, this->destructibleunk2(), output);
  }

  // uint32 DestructibleUnk3 = 92;
  if (this->destructibleunk3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(92, this->destructibleunk3(), output);
  }

  // uint32 DestructibleUnk4 = 93;
  if (this->destructibleunk4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(93, this->destructibleunk4(), output);
  }

  // uint32 DestructibleUnk5 = 94;
  if (this->destructibleunk5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(94, this->destructibleunk5(), output);
  }

  // uint32 DestructibleUnk6 = 95;
  if (this->destructibleunk6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(95, this->destructibleunk6(), output);
  }

  // uint32 DestructibleUnk7 = 96;
  if (this->destructibleunk7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(96, this->destructibleunk7(), output);
  }

  // uint32 DestructibleUnk8 = 97;
  if (this->destructibleunk8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(97, this->destructibleunk8(), output);
  }

  // uint32 DestructibleUnk9 = 98;
  if (this->destructibleunk9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(98, this->destructibleunk9(), output);
  }

  // bool targetable_with_hotkey = 99;
  if (this->targetable_with_hotkey() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(99, this->targetable_with_hotkey(), output);
  }

  // bool show_name = 100;
  if (this->show_name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(100, this->show_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SpawnEvent)
}

::google::protobuf::uint8* SpawnEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.SpawnEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 unknown0000 = 1;
  if (this->unknown0000() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->unknown0000(), target);
  }

  // uint32 gm = 2;
  if (this->gm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gm(), target);
  }

  // uint32 unknown0003 = 3;
  if (this->unknown0003() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unknown0003(), target);
  }

  // uint32 aaitle = 4;
  if (this->aaitle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->aaitle(), target);
  }

  // uint32 unknown0004 = 5;
  if (this->unknown0004() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unknown0004(), target);
  }

  // uint32 anon = 6;
  if (this->anon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->anon(), target);
  }

  // uint32 face = 7;
  if (this->face() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->face(), target);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  // uint32 deity = 9;
  if (this->deity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->deity(), target);
  }

  // uint32 unknown0073 = 10;
  if (this->unknown0073() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->unknown0073(), target);
  }

  // float size = 11;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->size(), target);
  }

  // uint32 unknown0079 = 12;
  if (this->unknown0079() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->unknown0079(), target);
  }

  // uint32 NPC = 13;
  if (this->npc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->npc(), target);
  }

  // uint32 invis = 14;
  if (this->invis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->invis(), target);
  }

  // uint32 haircolor = 15;
  if (this->haircolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->haircolor(), target);
  }

  // uint32 curHp = 16;
  if (this->curhp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->curhp(), target);
  }

  // uint32 max_hp = 17;
  if (this->max_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->max_hp(), target);
  }

  // uint32 findable = 18;
  if (this->findable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->findable(), target);
  }

  // uint32 unknown0089 = 19;
  if (this->unknown0089() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->unknown0089(), target);
  }

  // int32 deltaHeading = 20;
  if (this->deltaheading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->deltaheading(), target);
  }

  // int32 x = 21;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->x(), target);
  }

  // int32 padding0054 = 22;
  if (this->padding0054() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->padding0054(), target);
  }

  // int32 y = 23;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->y(), target);
  }

  // int32 animation = 24;
  if (this->animation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->animation(), target);
  }

  // int32 padding0058 = 25;
  if (this->padding0058() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->padding0058(), target);
  }

  // int32 z = 26;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->z(), target);
  }

  // int32 deltaY = 27;
  if (this->deltay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->deltay(), target);
  }

  // int32 deltaX = 28;
  if (this->deltax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->deltax(), target);
  }

  // uint32 heading = 29;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->heading(), target);
  }

  // int32 padding0066 = 30;
  if (this->padding0066() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->padding0066(), target);
  }

  // int32 deltaZ = 31;
  if (this->deltaz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->deltaz(), target);
  }

  // int32 padding0070 = 32;
  if (this->padding0070() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->padding0070(), target);
  }

  // uint32 eyecolor1 = 33;
  if (this->eyecolor1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->eyecolor1(), target);
  }

  // uint32 unknown0115 = 34;
  if (this->unknown0115() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->unknown0115(), target);
  }

  // uint32 StandState = 35;
  if (this->standstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->standstate(), target);
  }

  // uint32 drakkin_heritage = 36;
  if (this->drakkin_heritage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->drakkin_heritage(), target);
  }

  // uint32 drakkin_tattoo = 37;
  if (this->drakkin_tattoo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->drakkin_tattoo(), target);
  }

  // uint32 drakkin_details = 38;
  if (this->drakkin_details() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->drakkin_details(), target);
  }

  // uint32 showhelm = 39;
  if (this->showhelm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->showhelm(), target);
  }

  // uint32 unknown0140 = 40;
  if (this->unknown0140() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->unknown0140(), target);
  }

  // uint32 is_npc = 41;
  if (this->is_npc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(41, this->is_npc(), target);
  }

  // uint32 hairstyle = 42;
  if (this->hairstyle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->hairstyle(), target);
  }

  // uint32 beard = 43;
  if (this->beard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->beard(), target);
  }

  // uint32 unknown0147 = 44;
  if (this->unknown0147() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(44, this->unknown0147(), target);
  }

  // uint32 level = 45;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(45, this->level(), target);
  }

  // uint32 PlayerState = 46;
  if (this->playerstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(46, this->playerstate(), target);
  }

  // uint32 beardcolor = 47;
  if (this->beardcolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(47, this->beardcolor(), target);
  }

  // string suffix = 48;
  if (this->suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suffix().data(), static_cast<int>(this->suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->suffix(), target);
  }

  // uint32 petOwnerId = 49;
  if (this->petownerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->petownerid(), target);
  }

  // uint32 guildrank = 50;
  if (this->guildrank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->guildrank(), target);
  }

  // uint32 unknown0194 = 51;
  if (this->unknown0194() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(51, this->unknown0194(), target);
  }

  // .pb.TextureProfile equipment = 52;
  if (this->has_equipment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->_internal_equipment(), deterministic, target);
  }

  // float runspeed = 53;
  if (this->runspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(53, this->runspeed(), target);
  }

  // uint32 afk = 54;
  if (this->afk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(54, this->afk(), target);
  }

  // uint32 guildID = 55;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(55, this->guildid(), target);
  }

  // string title = 56;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        56, this->title(), target);
  }

  // uint32 unknown0274 = 57;
  if (this->unknown0274() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(57, this->unknown0274(), target);
  }

  // uint32 set_to_0xFF = 58;
  if (this->set_to_0xff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(58, this->set_to_0xff(), target);
  }

  // uint32 helm = 59;
  if (this->helm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(59, this->helm(), target);
  }

  // uint32 race = 60;
  if (this->race() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(60, this->race(), target);
  }

  // uint32 unknown0288 = 61;
  if (this->unknown0288() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(61, this->unknown0288(), target);
  }

  // string lastName = 62;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), static_cast<int>(this->lastname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.lastName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        62, this->lastname(), target);
  }

  // float walkspeed = 63;
  if (this->walkspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(63, this->walkspeed(), target);
  }

  // uint32 unknown0328 = 64;
  if (this->unknown0328() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(64, this->unknown0328(), target);
  }

  // uint32 is_pet = 65;
  if (this->is_pet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(65, this->is_pet(), target);
  }

  // uint32 light = 66;
  if (this->light() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(66, this->light(), target);
  }

  // uint32 class_ = 67;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(67, this->class_(), target);
  }

  // uint32 eyecolor2 = 68;
  if (this->eyecolor2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(68, this->eyecolor2(), target);
  }

  // uint32 flymode = 69;
  if (this->flymode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(69, this->flymode(), target);
  }

  // uint32 gender = 70;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(70, this->gender(), target);
  }

  // uint32 bodytype = 71;
  if (this->bodytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(71, this->bodytype(), target);
  }

  // uint32 unknown0336 = 72;
  if (this->unknown0336() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(72, this->unknown0336(), target);
  }

  // uint32 equip_chest2 = 73;
  if (this->equip_chest2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(73, this->equip_chest2(), target);
  }

  // uint32 mount_color = 74;
  if (this->mount_color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(74, this->mount_color(), target);
  }

  // uint32 spawnId = 75;
  if (this->spawnid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(75, this->spawnid(), target);
  }

  // uint32 unknown0344 = 76;
  if (this->unknown0344() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(76, this->unknown0344(), target);
  }

  // uint32 IsMercenary = 77;
  if (this->ismercenary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(77, this->ismercenary(), target);
  }

  // .pb.TintProfile equipment_tint = 78;
  if (this->has_equipment_tint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        78, this->_internal_equipment_tint(), deterministic, target);
  }

  // uint32 lfg = 79;
  if (this->lfg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(79, this->lfg(), target);
  }

  // bool DestructibleObject = 80;
  if (this->destructibleobject() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(80, this->destructibleobject(), target);
  }

  // string DestructibleModel = 82;
  if (this->destructiblemodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblemodel().data(), static_cast<int>(this->destructiblemodel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.DestructibleModel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        82, this->destructiblemodel(), target);
  }

  // string DestructibleName2 = 83;
  if (this->destructiblename2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblename2().data(), static_cast<int>(this->destructiblename2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.DestructibleName2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        83, this->destructiblename2(), target);
  }

  // string DestructibleString = 84;
  if (this->destructiblestring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblestring().data(), static_cast<int>(this->destructiblestring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SpawnEvent.DestructibleString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        84, this->destructiblestring(), target);
  }

  // uint32 DestructibleAppearance = 85;
  if (this->destructibleappearance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(85, this->destructibleappearance(), target);
  }

  // uint32 DestructibleUnk1 = 86;
  if (this->destructibleunk1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(86, this->destructibleunk1(), target);
  }

  // uint32 DestructibleID1 = 87;
  if (this->destructibleid1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(87, this->destructibleid1(), target);
  }

  // uint32 DestructibleID2 = 88;
  if (this->destructibleid2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(88, this->destructibleid2(), target);
  }

  // uint32 DestructibleID3 = 89;
  if (this->destructibleid3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(89, this->destructibleid3(), target);
  }

  // uint32 DestructibleID4 = 90;
  if (this->destructibleid4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(90, this->destructibleid4(), target);
  }

  // uint32 DestructibleUnk2 = 91;
  if (this->destructibleunk2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(91, this->destructibleunk2(), target);
  }

  // uint32 DestructibleUnk3 = 92;
  if (this->destructibleunk3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(92, this->destructibleunk3(), target);
  }

  // uint32 DestructibleUnk4 = 93;
  if (this->destructibleunk4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(93, this->destructibleunk4(), target);
  }

  // uint32 DestructibleUnk5 = 94;
  if (this->destructibleunk5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(94, this->destructibleunk5(), target);
  }

  // uint32 DestructibleUnk6 = 95;
  if (this->destructibleunk6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(95, this->destructibleunk6(), target);
  }

  // uint32 DestructibleUnk7 = 96;
  if (this->destructibleunk7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(96, this->destructibleunk7(), target);
  }

  // uint32 DestructibleUnk8 = 97;
  if (this->destructibleunk8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(97, this->destructibleunk8(), target);
  }

  // uint32 DestructibleUnk9 = 98;
  if (this->destructibleunk9() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(98, this->destructibleunk9(), target);
  }

  // bool targetable_with_hotkey = 99;
  if (this->targetable_with_hotkey() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(99, this->targetable_with_hotkey(), target);
  }

  // bool show_name = 100;
  if (this->show_name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(100, this->show_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SpawnEvent)
  return target;
}

size_t SpawnEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SpawnEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string suffix = 48;
  if (this->suffix().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suffix());
  }

  // string title = 56;
  if (this->title().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string lastName = 62;
  if (this->lastname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastname());
  }

  // string DestructibleModel = 82;
  if (this->destructiblemodel().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destructiblemodel());
  }

  // string DestructibleName2 = 83;
  if (this->destructiblename2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destructiblename2());
  }

  // string DestructibleString = 84;
  if (this->destructiblestring().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destructiblestring());
  }

  // .pb.TextureProfile equipment = 52;
  if (this->has_equipment()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *equipment_);
  }

  // .pb.TintProfile equipment_tint = 78;
  if (this->has_equipment_tint()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *equipment_tint_);
  }

  // uint32 unknown0000 = 1;
  if (this->unknown0000() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0000());
  }

  // uint32 gm = 2;
  if (this->gm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gm());
  }

  // uint32 unknown0003 = 3;
  if (this->unknown0003() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0003());
  }

  // uint32 aaitle = 4;
  if (this->aaitle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->aaitle());
  }

  // uint32 unknown0004 = 5;
  if (this->unknown0004() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0004());
  }

  // uint32 anon = 6;
  if (this->anon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anon());
  }

  // uint32 face = 7;
  if (this->face() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->face());
  }

  // uint32 deity = 9;
  if (this->deity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->deity());
  }

  // uint32 unknown0073 = 10;
  if (this->unknown0073() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0073());
  }

  // float size = 11;
  if (this->size() != 0) {
    total_size += 1 + 4;
  }

  // uint32 unknown0079 = 12;
  if (this->unknown0079() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0079());
  }

  // uint32 NPC = 13;
  if (this->npc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npc());
  }

  // uint32 invis = 14;
  if (this->invis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->invis());
  }

  // uint32 haircolor = 15;
  if (this->haircolor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->haircolor());
  }

  // uint32 curHp = 16;
  if (this->curhp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curhp());
  }

  // uint32 max_hp = 17;
  if (this->max_hp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_hp());
  }

  // uint32 findable = 18;
  if (this->findable() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->findable());
  }

  // uint32 unknown0089 = 19;
  if (this->unknown0089() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0089());
  }

  // int32 deltaHeading = 20;
  if (this->deltaheading() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltaheading());
  }

  // int32 x = 21;
  if (this->x() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 padding0054 = 22;
  if (this->padding0054() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0054());
  }

  // int32 y = 23;
  if (this->y() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 animation = 24;
  if (this->animation() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->animation());
  }

  // int32 padding0058 = 25;
  if (this->padding0058() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0058());
  }

  // int32 z = 26;
  if (this->z() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  // int32 deltaY = 27;
  if (this->deltay() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltay());
  }

  // int32 deltaX = 28;
  if (this->deltax() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltax());
  }

  // uint32 heading = 29;
  if (this->heading() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heading());
  }

  // int32 padding0066 = 30;
  if (this->padding0066() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0066());
  }

  // int32 deltaZ = 31;
  if (this->deltaz() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltaz());
  }

  // int32 padding0070 = 32;
  if (this->padding0070() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0070());
  }

  // uint32 eyecolor1 = 33;
  if (this->eyecolor1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eyecolor1());
  }

  // uint32 unknown0115 = 34;
  if (this->unknown0115() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0115());
  }

  // uint32 StandState = 35;
  if (this->standstate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->standstate());
  }

  // uint32 drakkin_heritage = 36;
  if (this->drakkin_heritage() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drakkin_heritage());
  }

  // uint32 drakkin_tattoo = 37;
  if (this->drakkin_tattoo() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drakkin_tattoo());
  }

  // uint32 drakkin_details = 38;
  if (this->drakkin_details() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drakkin_details());
  }

  // uint32 showhelm = 39;
  if (this->showhelm() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->showhelm());
  }

  // uint32 unknown0140 = 40;
  if (this->unknown0140() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0140());
  }

  // uint32 is_npc = 41;
  if (this->is_npc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_npc());
  }

  // uint32 hairstyle = 42;
  if (this->hairstyle() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hairstyle());
  }

  // uint32 beard = 43;
  if (this->beard() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->beard());
  }

  // uint32 unknown0147 = 44;
  if (this->unknown0147() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0147());
  }

  // uint32 level = 45;
  if (this->level() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 PlayerState = 46;
  if (this->playerstate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerstate());
  }

  // uint32 beardcolor = 47;
  if (this->beardcolor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->beardcolor());
  }

  // uint32 petOwnerId = 49;
  if (this->petownerid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->petownerid());
  }

  // uint32 guildrank = 50;
  if (this->guildrank() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guildrank());
  }

  // uint32 unknown0194 = 51;
  if (this->unknown0194() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0194());
  }

  // float runspeed = 53;
  if (this->runspeed() != 0) {
    total_size += 2 + 4;
  }

  // uint32 afk = 54;
  if (this->afk() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->afk());
  }

  // uint32 guildID = 55;
  if (this->guildid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guildid());
  }

  // uint32 unknown0274 = 57;
  if (this->unknown0274() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0274());
  }

  // uint32 set_to_0xFF = 58;
  if (this->set_to_0xff() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->set_to_0xff());
  }

  // uint32 helm = 59;
  if (this->helm() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->helm());
  }

  // uint32 race = 60;
  if (this->race() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->race());
  }

  // uint32 unknown0288 = 61;
  if (this->unknown0288() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0288());
  }

  // float walkspeed = 63;
  if (this->walkspeed() != 0) {
    total_size += 2 + 4;
  }

  // uint32 unknown0328 = 64;
  if (this->unknown0328() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0328());
  }

  // uint32 is_pet = 65;
  if (this->is_pet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_pet());
  }

  // uint32 light = 66;
  if (this->light() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->light());
  }

  // uint32 class_ = 67;
  if (this->class_() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_());
  }

  // uint32 eyecolor2 = 68;
  if (this->eyecolor2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eyecolor2());
  }

  // uint32 flymode = 69;
  if (this->flymode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flymode());
  }

  // uint32 gender = 70;
  if (this->gender() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gender());
  }

  // uint32 bodytype = 71;
  if (this->bodytype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bodytype());
  }

  // uint32 unknown0336 = 72;
  if (this->unknown0336() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0336());
  }

  // uint32 equip_chest2 = 73;
  if (this->equip_chest2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equip_chest2());
  }

  // uint32 mount_color = 74;
  if (this->mount_color() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mount_color());
  }

  // uint32 spawnId = 75;
  if (this->spawnid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawnid());
  }

  // uint32 unknown0344 = 76;
  if (this->unknown0344() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0344());
  }

  // uint32 IsMercenary = 77;
  if (this->ismercenary() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ismercenary());
  }

  // uint32 lfg = 79;
  if (this->lfg() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lfg());
  }

  // uint32 DestructibleAppearance = 85;
  if (this->destructibleappearance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleappearance());
  }

  // uint32 DestructibleUnk1 = 86;
  if (this->destructibleunk1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk1());
  }

  // uint32 DestructibleID1 = 87;
  if (this->destructibleid1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleid1());
  }

  // uint32 DestructibleID2 = 88;
  if (this->destructibleid2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleid2());
  }

  // uint32 DestructibleID3 = 89;
  if (this->destructibleid3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleid3());
  }

  // uint32 DestructibleID4 = 90;
  if (this->destructibleid4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleid4());
  }

  // uint32 DestructibleUnk2 = 91;
  if (this->destructibleunk2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk2());
  }

  // uint32 DestructibleUnk3 = 92;
  if (this->destructibleunk3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk3());
  }

  // uint32 DestructibleUnk4 = 93;
  if (this->destructibleunk4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk4());
  }

  // bool DestructibleObject = 80;
  if (this->destructibleobject() != 0) {
    total_size += 2 + 1;
  }

  // bool targetable_with_hotkey = 99;
  if (this->targetable_with_hotkey() != 0) {
    total_size += 2 + 1;
  }

  // bool show_name = 100;
  if (this->show_name() != 0) {
    total_size += 2 + 1;
  }

  // uint32 DestructibleUnk5 = 94;
  if (this->destructibleunk5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk5());
  }

  // uint32 DestructibleUnk6 = 95;
  if (this->destructibleunk6() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk6());
  }

  // uint32 DestructibleUnk7 = 96;
  if (this->destructibleunk7() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk7());
  }

  // uint32 DestructibleUnk8 = 97;
  if (this->destructibleunk8() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk8());
  }

  // uint32 DestructibleUnk9 = 98;
  if (this->destructibleunk9() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk9());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpawnEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SpawnEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const SpawnEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpawnEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SpawnEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SpawnEvent)
    MergeFrom(*source);
  }
}

void SpawnEvent::MergeFrom(const SpawnEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SpawnEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.suffix().size() > 0) {
    set_suffix(from.suffix());
  }
  if (from.title().size() > 0) {
    set_title(from.title());
  }
  if (from.lastname().size() > 0) {
    set_lastname(from.lastname());
  }
  if (from.destructiblemodel().size() > 0) {
    set_destructiblemodel(from.destructiblemodel());
  }
  if (from.destructiblename2().size() > 0) {
    set_destructiblename2(from.destructiblename2());
  }
  if (from.destructiblestring().size() > 0) {
    set_destructiblestring(from.destructiblestring());
  }
  if (from.has_equipment()) {
    mutable_equipment()->::pb::TextureProfile::MergeFrom(from.equipment());
  }
  if (from.has_equipment_tint()) {
    mutable_equipment_tint()->::pb::TintProfile::MergeFrom(from.equipment_tint());
  }
  if (from.unknown0000() != 0) {
    set_unknown0000(from.unknown0000());
  }
  if (from.gm() != 0) {
    set_gm(from.gm());
  }
  if (from.unknown0003() != 0) {
    set_unknown0003(from.unknown0003());
  }
  if (from.aaitle() != 0) {
    set_aaitle(from.aaitle());
  }
  if (from.unknown0004() != 0) {
    set_unknown0004(from.unknown0004());
  }
  if (from.anon() != 0) {
    set_anon(from.anon());
  }
  if (from.face() != 0) {
    set_face(from.face());
  }
  if (from.deity() != 0) {
    set_deity(from.deity());
  }
  if (from.unknown0073() != 0) {
    set_unknown0073(from.unknown0073());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.unknown0079() != 0) {
    set_unknown0079(from.unknown0079());
  }
  if (from.npc() != 0) {
    set_npc(from.npc());
  }
  if (from.invis() != 0) {
    set_invis(from.invis());
  }
  if (from.haircolor() != 0) {
    set_haircolor(from.haircolor());
  }
  if (from.curhp() != 0) {
    set_curhp(from.curhp());
  }
  if (from.max_hp() != 0) {
    set_max_hp(from.max_hp());
  }
  if (from.findable() != 0) {
    set_findable(from.findable());
  }
  if (from.unknown0089() != 0) {
    set_unknown0089(from.unknown0089());
  }
  if (from.deltaheading() != 0) {
    set_deltaheading(from.deltaheading());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.padding0054() != 0) {
    set_padding0054(from.padding0054());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.animation() != 0) {
    set_animation(from.animation());
  }
  if (from.padding0058() != 0) {
    set_padding0058(from.padding0058());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.deltay() != 0) {
    set_deltay(from.deltay());
  }
  if (from.deltax() != 0) {
    set_deltax(from.deltax());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.padding0066() != 0) {
    set_padding0066(from.padding0066());
  }
  if (from.deltaz() != 0) {
    set_deltaz(from.deltaz());
  }
  if (from.padding0070() != 0) {
    set_padding0070(from.padding0070());
  }
  if (from.eyecolor1() != 0) {
    set_eyecolor1(from.eyecolor1());
  }
  if (from.unknown0115() != 0) {
    set_unknown0115(from.unknown0115());
  }
  if (from.standstate() != 0) {
    set_standstate(from.standstate());
  }
  if (from.drakkin_heritage() != 0) {
    set_drakkin_heritage(from.drakkin_heritage());
  }
  if (from.drakkin_tattoo() != 0) {
    set_drakkin_tattoo(from.drakkin_tattoo());
  }
  if (from.drakkin_details() != 0) {
    set_drakkin_details(from.drakkin_details());
  }
  if (from.showhelm() != 0) {
    set_showhelm(from.showhelm());
  }
  if (from.unknown0140() != 0) {
    set_unknown0140(from.unknown0140());
  }
  if (from.is_npc() != 0) {
    set_is_npc(from.is_npc());
  }
  if (from.hairstyle() != 0) {
    set_hairstyle(from.hairstyle());
  }
  if (from.beard() != 0) {
    set_beard(from.beard());
  }
  if (from.unknown0147() != 0) {
    set_unknown0147(from.unknown0147());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.playerstate() != 0) {
    set_playerstate(from.playerstate());
  }
  if (from.beardcolor() != 0) {
    set_beardcolor(from.beardcolor());
  }
  if (from.petownerid() != 0) {
    set_petownerid(from.petownerid());
  }
  if (from.guildrank() != 0) {
    set_guildrank(from.guildrank());
  }
  if (from.unknown0194() != 0) {
    set_unknown0194(from.unknown0194());
  }
  if (from.runspeed() != 0) {
    set_runspeed(from.runspeed());
  }
  if (from.afk() != 0) {
    set_afk(from.afk());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.unknown0274() != 0) {
    set_unknown0274(from.unknown0274());
  }
  if (from.set_to_0xff() != 0) {
    set_set_to_0xff(from.set_to_0xff());
  }
  if (from.helm() != 0) {
    set_helm(from.helm());
  }
  if (from.race() != 0) {
    set_race(from.race());
  }
  if (from.unknown0288() != 0) {
    set_unknown0288(from.unknown0288());
  }
  if (from.walkspeed() != 0) {
    set_walkspeed(from.walkspeed());
  }
  if (from.unknown0328() != 0) {
    set_unknown0328(from.unknown0328());
  }
  if (from.is_pet() != 0) {
    set_is_pet(from.is_pet());
  }
  if (from.light() != 0) {
    set_light(from.light());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.eyecolor2() != 0) {
    set_eyecolor2(from.eyecolor2());
  }
  if (from.flymode() != 0) {
    set_flymode(from.flymode());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.bodytype() != 0) {
    set_bodytype(from.bodytype());
  }
  if (from.unknown0336() != 0) {
    set_unknown0336(from.unknown0336());
  }
  if (from.equip_chest2() != 0) {
    set_equip_chest2(from.equip_chest2());
  }
  if (from.mount_color() != 0) {
    set_mount_color(from.mount_color());
  }
  if (from.spawnid() != 0) {
    set_spawnid(from.spawnid());
  }
  if (from.unknown0344() != 0) {
    set_unknown0344(from.unknown0344());
  }
  if (from.ismercenary() != 0) {
    set_ismercenary(from.ismercenary());
  }
  if (from.lfg() != 0) {
    set_lfg(from.lfg());
  }
  if (from.destructibleappearance() != 0) {
    set_destructibleappearance(from.destructibleappearance());
  }
  if (from.destructibleunk1() != 0) {
    set_destructibleunk1(from.destructibleunk1());
  }
  if (from.destructibleid1() != 0) {
    set_destructibleid1(from.destructibleid1());
  }
  if (from.destructibleid2() != 0) {
    set_destructibleid2(from.destructibleid2());
  }
  if (from.destructibleid3() != 0) {
    set_destructibleid3(from.destructibleid3());
  }
  if (from.destructibleid4() != 0) {
    set_destructibleid4(from.destructibleid4());
  }
  if (from.destructibleunk2() != 0) {
    set_destructibleunk2(from.destructibleunk2());
  }
  if (from.destructibleunk3() != 0) {
    set_destructibleunk3(from.destructibleunk3());
  }
  if (from.destructibleunk4() != 0) {
    set_destructibleunk4(from.destructibleunk4());
  }
  if (from.destructibleobject() != 0) {
    set_destructibleobject(from.destructibleobject());
  }
  if (from.targetable_with_hotkey() != 0) {
    set_targetable_with_hotkey(from.targetable_with_hotkey());
  }
  if (from.show_name() != 0) {
    set_show_name(from.show_name());
  }
  if (from.destructibleunk5() != 0) {
    set_destructibleunk5(from.destructibleunk5());
  }
  if (from.destructibleunk6() != 0) {
    set_destructibleunk6(from.destructibleunk6());
  }
  if (from.destructibleunk7() != 0) {
    set_destructibleunk7(from.destructibleunk7());
  }
  if (from.destructibleunk8() != 0) {
    set_destructibleunk8(from.destructibleunk8());
  }
  if (from.destructibleunk9() != 0) {
    set_destructibleunk9(from.destructibleunk9());
  }
}

void SpawnEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SpawnEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpawnEvent::CopyFrom(const SpawnEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SpawnEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpawnEvent::IsInitialized() const {
  return true;
}

void SpawnEvent::Swap(SpawnEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SpawnEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SpawnEvent::UnsafeArenaSwap(SpawnEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SpawnEvent::InternalSwap(SpawnEvent* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  suffix_.Swap(&other->suffix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lastname_.Swap(&other->lastname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destructiblemodel_.Swap(&other->destructiblemodel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destructiblename2_.Swap(&other->destructiblename2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destructiblestring_.Swap(&other->destructiblestring_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(equipment_, other->equipment_);
  swap(equipment_tint_, other->equipment_tint_);
  swap(unknown0000_, other->unknown0000_);
  swap(gm_, other->gm_);
  swap(unknown0003_, other->unknown0003_);
  swap(aaitle_, other->aaitle_);
  swap(unknown0004_, other->unknown0004_);
  swap(anon_, other->anon_);
  swap(face_, other->face_);
  swap(deity_, other->deity_);
  swap(unknown0073_, other->unknown0073_);
  swap(size_, other->size_);
  swap(unknown0079_, other->unknown0079_);
  swap(npc_, other->npc_);
  swap(invis_, other->invis_);
  swap(haircolor_, other->haircolor_);
  swap(curhp_, other->curhp_);
  swap(max_hp_, other->max_hp_);
  swap(findable_, other->findable_);
  swap(unknown0089_, other->unknown0089_);
  swap(deltaheading_, other->deltaheading_);
  swap(x_, other->x_);
  swap(padding0054_, other->padding0054_);
  swap(y_, other->y_);
  swap(animation_, other->animation_);
  swap(padding0058_, other->padding0058_);
  swap(z_, other->z_);
  swap(deltay_, other->deltay_);
  swap(deltax_, other->deltax_);
  swap(heading_, other->heading_);
  swap(padding0066_, other->padding0066_);
  swap(deltaz_, other->deltaz_);
  swap(padding0070_, other->padding0070_);
  swap(eyecolor1_, other->eyecolor1_);
  swap(unknown0115_, other->unknown0115_);
  swap(standstate_, other->standstate_);
  swap(drakkin_heritage_, other->drakkin_heritage_);
  swap(drakkin_tattoo_, other->drakkin_tattoo_);
  swap(drakkin_details_, other->drakkin_details_);
  swap(showhelm_, other->showhelm_);
  swap(unknown0140_, other->unknown0140_);
  swap(is_npc_, other->is_npc_);
  swap(hairstyle_, other->hairstyle_);
  swap(beard_, other->beard_);
  swap(unknown0147_, other->unknown0147_);
  swap(level_, other->level_);
  swap(playerstate_, other->playerstate_);
  swap(beardcolor_, other->beardcolor_);
  swap(petownerid_, other->petownerid_);
  swap(guildrank_, other->guildrank_);
  swap(unknown0194_, other->unknown0194_);
  swap(runspeed_, other->runspeed_);
  swap(afk_, other->afk_);
  swap(guildid_, other->guildid_);
  swap(unknown0274_, other->unknown0274_);
  swap(set_to_0xff_, other->set_to_0xff_);
  swap(helm_, other->helm_);
  swap(race_, other->race_);
  swap(unknown0288_, other->unknown0288_);
  swap(walkspeed_, other->walkspeed_);
  swap(unknown0328_, other->unknown0328_);
  swap(is_pet_, other->is_pet_);
  swap(light_, other->light_);
  swap(class__, other->class__);
  swap(eyecolor2_, other->eyecolor2_);
  swap(flymode_, other->flymode_);
  swap(gender_, other->gender_);
  swap(bodytype_, other->bodytype_);
  swap(unknown0336_, other->unknown0336_);
  swap(equip_chest2_, other->equip_chest2_);
  swap(mount_color_, other->mount_color_);
  swap(spawnid_, other->spawnid_);
  swap(unknown0344_, other->unknown0344_);
  swap(ismercenary_, other->ismercenary_);
  swap(lfg_, other->lfg_);
  swap(destructibleappearance_, other->destructibleappearance_);
  swap(destructibleunk1_, other->destructibleunk1_);
  swap(destructibleid1_, other->destructibleid1_);
  swap(destructibleid2_, other->destructibleid2_);
  swap(destructibleid3_, other->destructibleid3_);
  swap(destructibleid4_, other->destructibleid4_);
  swap(destructibleunk2_, other->destructibleunk2_);
  swap(destructibleunk3_, other->destructibleunk3_);
  swap(destructibleunk4_, other->destructibleunk4_);
  swap(destructibleobject_, other->destructibleobject_);
  swap(targetable_with_hotkey_, other->targetable_with_hotkey_);
  swap(show_name_, other->show_name_);
  swap(destructibleunk5_, other->destructibleunk5_);
  swap(destructibleunk6_, other->destructibleunk6_);
  swap(destructibleunk7_, other->destructibleunk7_);
  swap(destructibleunk8_, other->destructibleunk8_);
  swap(destructibleunk9_, other->destructibleunk9_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SpawnEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlternateAdvancementStatsEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlternateAdvancementStatsEvent::kExperienceFieldNumber;
const int AlternateAdvancementStatsEvent::kUnspentFieldNumber;
const int AlternateAdvancementStatsEvent::kUnknown006FieldNumber;
const int AlternateAdvancementStatsEvent::kPercentageFieldNumber;
const int AlternateAdvancementStatsEvent::kUnknown009FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlternateAdvancementStatsEvent::AlternateAdvancementStatsEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_AlternateAdvancementStatsEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.AlternateAdvancementStatsEvent)
}
AlternateAdvancementStatsEvent::AlternateAdvancementStatsEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_AlternateAdvancementStatsEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.AlternateAdvancementStatsEvent)
}
AlternateAdvancementStatsEvent::AlternateAdvancementStatsEvent(const AlternateAdvancementStatsEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&experience_, &from.experience_,
    static_cast<size_t>(reinterpret_cast<char*>(&unknown009_) -
    reinterpret_cast<char*>(&experience_)) + sizeof(unknown009_));
  // @@protoc_insertion_point(copy_constructor:pb.AlternateAdvancementStatsEvent)
}

void AlternateAdvancementStatsEvent::SharedCtor() {
  ::memset(&experience_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown009_) -
      reinterpret_cast<char*>(&experience_)) + sizeof(unknown009_));
}

AlternateAdvancementStatsEvent::~AlternateAdvancementStatsEvent() {
  // @@protoc_insertion_point(destructor:pb.AlternateAdvancementStatsEvent)
  SharedDtor();
}

void AlternateAdvancementStatsEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AlternateAdvancementStatsEvent::ArenaDtor(void* object) {
  AlternateAdvancementStatsEvent* _this = reinterpret_cast< AlternateAdvancementStatsEvent* >(object);
  (void)_this;
}
void AlternateAdvancementStatsEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AlternateAdvancementStatsEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AlternateAdvancementStatsEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlternateAdvancementStatsEvent& AlternateAdvancementStatsEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_AlternateAdvancementStatsEvent.base);
  return *internal_default_instance();
}


void AlternateAdvancementStatsEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.AlternateAdvancementStatsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&experience_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unknown009_) -
      reinterpret_cast<char*>(&experience_)) + sizeof(unknown009_));
  _internal_metadata_.Clear();
}

bool AlternateAdvancementStatsEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.AlternateAdvancementStatsEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 experience = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &experience_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unspent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unspent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown006 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown006_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 percentage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unknown009 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown009_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.AlternateAdvancementStatsEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.AlternateAdvancementStatsEvent)
  return false;
#undef DO_
}

void AlternateAdvancementStatsEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.AlternateAdvancementStatsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 experience = 1;
  if (this->experience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->experience(), output);
  }

  // uint32 unspent = 2;
  if (this->unspent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unspent(), output);
  }

  // uint32 unknown006 = 3;
  if (this->unknown006() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unknown006(), output);
  }

  // uint32 percentage = 4;
  if (this->percentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->percentage(), output);
  }

  // uint32 unknown009 = 5;
  if (this->unknown009() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unknown009(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.AlternateAdvancementStatsEvent)
}

::google::protobuf::uint8* AlternateAdvancementStatsEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.AlternateAdvancementStatsEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 experience = 1;
  if (this->experience() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->experience(), target);
  }

  // uint32 unspent = 2;
  if (this->unspent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unspent(), target);
  }

  // uint32 unknown006 = 3;
  if (this->unknown006() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unknown006(), target);
  }

  // uint32 percentage = 4;
  if (this->percentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->percentage(), target);
  }

  // uint32 unknown009 = 5;
  if (this->unknown009() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unknown009(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.AlternateAdvancementStatsEvent)
  return target;
}

size_t AlternateAdvancementStatsEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.AlternateAdvancementStatsEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 experience = 1;
  if (this->experience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->experience());
  }

  // uint32 unspent = 2;
  if (this->unspent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unspent());
  }

  // uint32 unknown006 = 3;
  if (this->unknown006() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown006());
  }

  // uint32 percentage = 4;
  if (this->percentage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->percentage());
  }

  // uint32 unknown009 = 5;
  if (this->unknown009() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown009());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlternateAdvancementStatsEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.AlternateAdvancementStatsEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const AlternateAdvancementStatsEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlternateAdvancementStatsEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.AlternateAdvancementStatsEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.AlternateAdvancementStatsEvent)
    MergeFrom(*source);
  }
}

void AlternateAdvancementStatsEvent::MergeFrom(const AlternateAdvancementStatsEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.AlternateAdvancementStatsEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.experience() != 0) {
    set_experience(from.experience());
  }
  if (from.unspent() != 0) {
    set_unspent(from.unspent());
  }
  if (from.unknown006() != 0) {
    set_unknown006(from.unknown006());
  }
  if (from.percentage() != 0) {
    set_percentage(from.percentage());
  }
  if (from.unknown009() != 0) {
    set_unknown009(from.unknown009());
  }
}

void AlternateAdvancementStatsEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.AlternateAdvancementStatsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlternateAdvancementStatsEvent::CopyFrom(const AlternateAdvancementStatsEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.AlternateAdvancementStatsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlternateAdvancementStatsEvent::IsInitialized() const {
  return true;
}

void AlternateAdvancementStatsEvent::Swap(AlternateAdvancementStatsEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AlternateAdvancementStatsEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AlternateAdvancementStatsEvent::UnsafeArenaSwap(AlternateAdvancementStatsEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AlternateAdvancementStatsEvent::InternalSwap(AlternateAdvancementStatsEvent* other) {
  using std::swap;
  swap(experience_, other->experience_);
  swap(unspent_, other->unspent_);
  swap(unknown006_, other->unknown006_);
  swap(percentage_, other->percentage_);
  swap(unknown009_, other->unknown009_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AlternateAdvancementStatsEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ZoneCompleteEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneCompleteEvent::ZoneCompleteEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ZoneCompleteEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ZoneCompleteEvent)
}
ZoneCompleteEvent::ZoneCompleteEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_ZoneCompleteEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.ZoneCompleteEvent)
}
ZoneCompleteEvent::ZoneCompleteEvent(const ZoneCompleteEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ZoneCompleteEvent)
}

void ZoneCompleteEvent::SharedCtor() {
}

ZoneCompleteEvent::~ZoneCompleteEvent() {
  // @@protoc_insertion_point(destructor:pb.ZoneCompleteEvent)
  SharedDtor();
}

void ZoneCompleteEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ZoneCompleteEvent::ArenaDtor(void* object) {
  ZoneCompleteEvent* _this = reinterpret_cast< ZoneCompleteEvent* >(object);
  (void)_this;
}
void ZoneCompleteEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ZoneCompleteEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ZoneCompleteEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZoneCompleteEvent& ZoneCompleteEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_ZoneCompleteEvent.base);
  return *internal_default_instance();
}


void ZoneCompleteEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ZoneCompleteEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ZoneCompleteEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ZoneCompleteEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ZoneCompleteEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ZoneCompleteEvent)
  return false;
#undef DO_
}

void ZoneCompleteEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ZoneCompleteEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ZoneCompleteEvent)
}

::google::protobuf::uint8* ZoneCompleteEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ZoneCompleteEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ZoneCompleteEvent)
  return target;
}

size_t ZoneCompleteEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ZoneCompleteEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZoneCompleteEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ZoneCompleteEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ZoneCompleteEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneCompleteEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ZoneCompleteEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ZoneCompleteEvent)
    MergeFrom(*source);
  }
}

void ZoneCompleteEvent::MergeFrom(const ZoneCompleteEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ZoneCompleteEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ZoneCompleteEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ZoneCompleteEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneCompleteEvent::CopyFrom(const ZoneCompleteEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ZoneCompleteEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoneCompleteEvent::IsInitialized() const {
  return true;
}

void ZoneCompleteEvent::Swap(ZoneCompleteEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ZoneCompleteEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ZoneCompleteEvent::UnsafeArenaSwap(ZoneCompleteEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ZoneCompleteEvent::InternalSwap(ZoneCompleteEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ZoneCompleteEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UseAAEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseAAEvent::kBeginFieldNumber;
const int UseAAEvent::kAbilityFieldNumber;
const int UseAAEvent::kEndFieldNumber;
const int UseAAEvent::kActionFieldNumber;
const int UseAAEvent::kTargetIdFieldNumber;
const int UseAAEvent::kExpValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseAAEvent::UseAAEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_UseAAEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.UseAAEvent)
}
UseAAEvent::UseAAEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_UseAAEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.UseAAEvent)
}
UseAAEvent::UseAAEvent(const UseAAEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&begin_, &from.begin_,
    static_cast<size_t>(reinterpret_cast<char*>(&exp_value_) -
    reinterpret_cast<char*>(&begin_)) + sizeof(exp_value_));
  // @@protoc_insertion_point(copy_constructor:pb.UseAAEvent)
}

void UseAAEvent::SharedCtor() {
  ::memset(&begin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exp_value_) -
      reinterpret_cast<char*>(&begin_)) + sizeof(exp_value_));
}

UseAAEvent::~UseAAEvent() {
  // @@protoc_insertion_point(destructor:pb.UseAAEvent)
  SharedDtor();
}

void UseAAEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UseAAEvent::ArenaDtor(void* object) {
  UseAAEvent* _this = reinterpret_cast< UseAAEvent* >(object);
  (void)_this;
}
void UseAAEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UseAAEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UseAAEvent::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseAAEvent& UseAAEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_UseAAEvent.base);
  return *internal_default_instance();
}


void UseAAEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.UseAAEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&begin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exp_value_) -
      reinterpret_cast<char*>(&begin_)) + sizeof(exp_value_));
  _internal_metadata_.Clear();
}

bool UseAAEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.UseAAEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 begin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.UseAAEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.UseAAEvent)
  return false;
#undef DO_
}

void UseAAEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.UseAAEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 begin = 1;
  if (this->begin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->begin(), output);
  }

  // uint32 ability = 2;
  if (this->ability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ability(), output);
  }

  // uint32 end = 3;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->end(), output);
  }

  // uint32 action = 4;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->action(), output);
  }

  // uint32 target_id = 5;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->target_id(), output);
  }

  // uint32 exp_value = 6;
  if (this->exp_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->exp_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.UseAAEvent)
}

::google::protobuf::uint8* UseAAEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.UseAAEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 begin = 1;
  if (this->begin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->begin(), target);
  }

  // uint32 ability = 2;
  if (this->ability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ability(), target);
  }

  // uint32 end = 3;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->end(), target);
  }

  // uint32 action = 4;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->action(), target);
  }

  // uint32 target_id = 5;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->target_id(), target);
  }

  // uint32 exp_value = 6;
  if (this->exp_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->exp_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.UseAAEvent)
  return target;
}

size_t UseAAEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.UseAAEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 begin = 1;
  if (this->begin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin());
  }

  // uint32 ability = 2;
  if (this->ability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ability());
  }

  // uint32 end = 3;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end());
  }

  // uint32 action = 4;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action());
  }

  // uint32 target_id = 5;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_id());
  }

  // uint32 exp_value = 6;
  if (this->exp_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UseAAEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.UseAAEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const UseAAEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseAAEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.UseAAEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.UseAAEvent)
    MergeFrom(*source);
  }
}

void UseAAEvent::MergeFrom(const UseAAEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.UseAAEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.begin() != 0) {
    set_begin(from.begin());
  }
  if (from.ability() != 0) {
    set_ability(from.ability());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
  if (from.exp_value() != 0) {
    set_exp_value(from.exp_value());
  }
}

void UseAAEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.UseAAEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseAAEvent::CopyFrom(const UseAAEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.UseAAEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseAAEvent::IsInitialized() const {
  return true;
}

void UseAAEvent::Swap(UseAAEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UseAAEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UseAAEvent::UnsafeArenaSwap(UseAAEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UseAAEvent::InternalSwap(UseAAEvent* other) {
  using std::swap;
  swap(begin_, other->begin_);
  swap(ability_, other->ability_);
  swap(end_, other->end_);
  swap(action_, other->action_);
  swap(target_id_, other->target_id_);
  swap(exp_value_, other->exp_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UseAAEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DailyGain::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyGain::kAccountIdFieldNumber;
const int DailyGain::kCharacterIdFieldNumber;
const int DailyGain::kLevelsGainedFieldNumber;
const int DailyGain::kExperienceGainedFieldNumber;
const int DailyGain::kMoneyEarnedFieldNumber;
const int DailyGain::kIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyGain::DailyGain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_DailyGain.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DailyGain)
}
DailyGain::DailyGain(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_DailyGain.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.DailyGain)
}
DailyGain::DailyGain(const DailyGain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identity().size() > 0) {
    identity_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity(),
      GetArenaNoVirtual());
  }
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&money_earned_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(money_earned_));
  // @@protoc_insertion_point(copy_constructor:pb.DailyGain)
}

void DailyGain::SharedCtor() {
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&money_earned_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(money_earned_));
}

DailyGain::~DailyGain() {
  // @@protoc_insertion_point(destructor:pb.DailyGain)
  SharedDtor();
}

void DailyGain::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DailyGain::ArenaDtor(void* object) {
  DailyGain* _this = reinterpret_cast< DailyGain* >(object);
  (void)_this;
}
void DailyGain::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DailyGain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DailyGain::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyGain& DailyGain::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_DailyGain.base);
  return *internal_default_instance();
}


void DailyGain::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DailyGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&money_earned_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(money_earned_));
  _internal_metadata_.Clear();
}

bool DailyGain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DailyGain)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 character_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &character_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 levels_gained = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levels_gained_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 experience_gained = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &experience_gained_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 money_earned = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_earned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identity().data(), static_cast<int>(this->identity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DailyGain.identity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DailyGain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DailyGain)
  return false;
#undef DO_
}

void DailyGain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DailyGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->account_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->account_id(), output);
  }

  // int32 character_id = 2;
  if (this->character_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->character_id(), output);
  }

  // int32 levels_gained = 3;
  if (this->levels_gained() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->levels_gained(), output);
  }

  // int32 experience_gained = 4;
  if (this->experience_gained() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->experience_gained(), output);
  }

  // int32 money_earned = 5;
  if (this->money_earned() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->money_earned(), output);
  }

  // string identity = 6;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), static_cast<int>(this->identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DailyGain.identity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->identity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DailyGain)
}

::google::protobuf::uint8* DailyGain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DailyGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->account_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->account_id(), target);
  }

  // int32 character_id = 2;
  if (this->character_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->character_id(), target);
  }

  // int32 levels_gained = 3;
  if (this->levels_gained() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->levels_gained(), target);
  }

  // int32 experience_gained = 4;
  if (this->experience_gained() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->experience_gained(), target);
  }

  // int32 money_earned = 5;
  if (this->money_earned() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->money_earned(), target);
  }

  // string identity = 6;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), static_cast<int>(this->identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DailyGain.identity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->identity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DailyGain)
  return target;
}

size_t DailyGain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DailyGain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string identity = 6;
  if (this->identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identity());
  }

  // int32 account_id = 1;
  if (this->account_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->account_id());
  }

  // int32 character_id = 2;
  if (this->character_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->character_id());
  }

  // int32 levels_gained = 3;
  if (this->levels_gained() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levels_gained());
  }

  // int32 experience_gained = 4;
  if (this->experience_gained() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->experience_gained());
  }

  // int32 money_earned = 5;
  if (this->money_earned() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money_earned());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyGain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DailyGain)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyGain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyGain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DailyGain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DailyGain)
    MergeFrom(*source);
  }
}

void DailyGain::MergeFrom(const DailyGain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DailyGain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity().size() > 0) {
    set_identity(from.identity());
  }
  if (from.account_id() != 0) {
    set_account_id(from.account_id());
  }
  if (from.character_id() != 0) {
    set_character_id(from.character_id());
  }
  if (from.levels_gained() != 0) {
    set_levels_gained(from.levels_gained());
  }
  if (from.experience_gained() != 0) {
    set_experience_gained(from.experience_gained());
  }
  if (from.money_earned() != 0) {
    set_money_earned(from.money_earned());
  }
}

void DailyGain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DailyGain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyGain::CopyFrom(const DailyGain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DailyGain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyGain::IsInitialized() const {
  return true;
}

void DailyGain::Swap(DailyGain* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DailyGain* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DailyGain::UnsafeArenaSwap(DailyGain* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DailyGain::InternalSwap(DailyGain* other) {
  using std::swap;
  identity_.Swap(&other->identity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(account_id_, other->account_id_);
  swap(character_id_, other->character_id_);
  swap(levels_gained_, other->levels_gained_);
  swap(experience_gained_, other->experience_gained_);
  swap(money_earned_, other->money_earned_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DailyGain::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ChannelMessage* Arena::CreateMaybeMessage< ::pb::ChannelMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::ChannelMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::CommandMessage* Arena::CreateMaybeMessage< ::pb::CommandMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::CommandMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Entity* Arena::CreateMaybeMessage< ::pb::Entity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::Entity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Entities* Arena::CreateMaybeMessage< ::pb::Entities >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::Entities >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Position* Arena::CreateMaybeMessage< ::pb::Position >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::Position >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::TextureProfile* Arena::CreateMaybeMessage< ::pb::TextureProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::TextureProfile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Texture* Arena::CreateMaybeMessage< ::pb::Texture >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::Texture >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::TintProfile* Arena::CreateMaybeMessage< ::pb::TintProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::TintProfile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Tint* Arena::CreateMaybeMessage< ::pb::Tint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::Tint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Event* Arena::CreateMaybeMessage< ::pb::Event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::Event >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::DeathEvent* Arena::CreateMaybeMessage< ::pb::DeathEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::DeathEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::DamageEvent* Arena::CreateMaybeMessage< ::pb::DamageEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::DamageEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::EntityEvent* Arena::CreateMaybeMessage< ::pb::EntityEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::EntityEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ChannelMessageEvent* Arena::CreateMaybeMessage< ::pb::ChannelMessageEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::ChannelMessageEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::SpecialMessageEvent* Arena::CreateMaybeMessage< ::pb::SpecialMessageEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SpecialMessageEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::NewZoneEvent* Arena::CreateMaybeMessage< ::pb::NewZoneEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::NewZoneEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::WearChangeEvent* Arena::CreateMaybeMessage< ::pb::WearChangeEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::WearChangeEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::DeleteSpawnEvent* Arena::CreateMaybeMessage< ::pb::DeleteSpawnEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::DeleteSpawnEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::HPEvent* Arena::CreateMaybeMessage< ::pb::HPEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::HPEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::PlayerPositionUpdateEvent* Arena::CreateMaybeMessage< ::pb::PlayerPositionUpdateEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::PlayerPositionUpdateEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::AnimationEvent* Arena::CreateMaybeMessage< ::pb::AnimationEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::AnimationEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::SpawnEvent* Arena::CreateMaybeMessage< ::pb::SpawnEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SpawnEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::AlternateAdvancementStatsEvent* Arena::CreateMaybeMessage< ::pb::AlternateAdvancementStatsEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::AlternateAdvancementStatsEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ZoneCompleteEvent* Arena::CreateMaybeMessage< ::pb::ZoneCompleteEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::ZoneCompleteEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::UseAAEvent* Arena::CreateMaybeMessage< ::pb::UseAAEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::UseAAEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::DailyGain* Arena::CreateMaybeMessage< ::pb::DailyGain >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::DailyGain >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
