// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace eqproto {
class ChannelMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChannelMessage>
     _instance;
} _ChannelMessage_default_instance_;
class CommandMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CommandMessage>
     _instance;
} _CommandMessage_default_instance_;
class DailyGainDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyGain>
     _instance;
} _DailyGain_default_instance_;
class EntityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Entity>
     _instance;
} _Entity_default_instance_;
class EntityEventDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityEvent>
     _instance;
} _EntityEvent_default_instance_;

namespace protobuf_message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, chan_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, guilddbid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, deliverto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, minstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, fromadmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, noreply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, is_emote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, queued_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, zone_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyGain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyGain, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyGain, character_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyGain, levels_gained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyGain, experience_gained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyGain, money_earned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyGain, identity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityEvent, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityEvent, event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ChannelMessage)},
  { 19, -1, sizeof(CommandMessage)},
  { 28, -1, sizeof(DailyGain)},
  { 39, -1, sizeof(Entity)},
  { 49, -1, sizeof(EntityEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChannelMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CommandMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyGain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Entity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityEvent_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ChannelMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChannelMessage_default_instance_);_CommandMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CommandMessage_default_instance_);_DailyGain_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyGain_default_instance_);_Entity_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Entity_default_instance_);_EntityEvent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityEvent_default_instance_);_EntityEvent_default_instance_._instance.get_mutable()->entity_ = const_cast< ::eqproto::Entity*>(
      ::eqproto::Entity::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\022\007eqproto\"\375\001\n\016ChannelMess"
      "age\022\020\n\010chan_num\030\001 \001(\005\022\020\n\010language\030\002 \001(\005\022"
      "\014\n\004from\030\003 \001(\t\022\n\n\002to\030\004 \001(\t\022\017\n\007message\030\005 \001"
      "(\t\022\021\n\tguilddbid\030\006 \001(\005\022\021\n\tdeliverto\030\007 \001(\t"
      "\022\014\n\004type\030\010 \001(\005\022\021\n\tminstatus\030\t \001(\005\022\021\n\tfro"
      "madmin\030\n \001(\005\022\017\n\007noreply\030\013 \001(\010\022\020\n\010is_emot"
      "e\030\014 \001(\010\022\016\n\006queued\030\r \001(\005\022\017\n\007zone_id\030\016 \001(\005"
      "\"Q\n\016CommandMessage\022\016\n\006author\030\001 \001(\t\022\017\n\007co"
      "mmand\030\002 \001(\t\022\016\n\006params\030\003 \003(\t\022\016\n\006result\030\004 "
      "\001(\t\"\217\001\n\tDailyGain\022\022\n\naccount_id\030\001 \001(\005\022\024\n"
      "\014character_id\030\002 \001(\005\022\025\n\rlevels_gained\030\003 \001"
      "(\005\022\031\n\021experience_gained\030\004 \001(\005\022\024\n\014money_e"
      "arned\030\005 \001(\005\022\020\n\010identity\030\006 \001(\t\"K\n\006Entity\022"
      "\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\014\n\004type\030\003 \001(\005\022"
      "\n\n\002hp\030\004 \001(\005\022\r\n\005level\030\005 \001(\005\"=\n\013EntityEven"
      "t\022\037\n\006entity\030\001 \001(\0132\017.eqproto.Entity\022\r\n\005ev"
      "ent\030\002 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 657);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_message_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelMessage::kChanNumFieldNumber;
const int ChannelMessage::kLanguageFieldNumber;
const int ChannelMessage::kFromFieldNumber;
const int ChannelMessage::kToFieldNumber;
const int ChannelMessage::kMessageFieldNumber;
const int ChannelMessage::kGuilddbidFieldNumber;
const int ChannelMessage::kDelivertoFieldNumber;
const int ChannelMessage::kTypeFieldNumber;
const int ChannelMessage::kMinstatusFieldNumber;
const int ChannelMessage::kFromadminFieldNumber;
const int ChannelMessage::kNoreplyFieldNumber;
const int ChannelMessage::kIsEmoteFieldNumber;
const int ChannelMessage::kQueuedFieldNumber;
const int ChannelMessage::kZoneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelMessage::ChannelMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.ChannelMessage)
}
ChannelMessage::ChannelMessage(const ChannelMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  deliverto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deliverto().size() > 0) {
    deliverto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliverto_);
  }
  ::memcpy(&chan_num_, &from.chan_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&zone_id_) -
    reinterpret_cast<char*>(&chan_num_)) + sizeof(zone_id_));
  // @@protoc_insertion_point(copy_constructor:eqproto.ChannelMessage)
}

void ChannelMessage::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliverto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chan_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zone_id_) -
      reinterpret_cast<char*>(&chan_num_)) + sizeof(zone_id_));
  _cached_size_ = 0;
}

ChannelMessage::~ChannelMessage() {
  // @@protoc_insertion_point(destructor:eqproto.ChannelMessage)
  SharedDtor();
}

void ChannelMessage::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliverto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChannelMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChannelMessage::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelMessage& ChannelMessage::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChannelMessage* ChannelMessage::New(::google::protobuf::Arena* arena) const {
  ChannelMessage* n = new ChannelMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChannelMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.ChannelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliverto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chan_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zone_id_) -
      reinterpret_cast<char*>(&chan_num_)) + sizeof(zone_id_));
  _internal_metadata_.Clear();
}

bool ChannelMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.ChannelMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 chan_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chan_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 language = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guilddbid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guilddbid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deliverto = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliverto()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deliverto().data(), static_cast<int>(this->deliverto().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.deliverto"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minstatus = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fromadmin = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromadmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool noreply = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noreply_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_emote = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_emote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 queued = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queued_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 zone_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.ChannelMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.ChannelMessage)
  return false;
#undef DO_
}

void ChannelMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.ChannelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chan_num = 1;
  if (this->chan_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chan_num(), output);
  }

  // int32 language = 2;
  if (this->language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->language(), output);
  }

  // string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from(), output);
  }

  // string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->message(), output);
  }

  // int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->guilddbid(), output);
  }

  // string deliverto = 7;
  if (this->deliverto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliverto().data(), static_cast<int>(this->deliverto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.deliverto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->deliverto(), output);
  }

  // int32 type = 8;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->type(), output);
  }

  // int32 minstatus = 9;
  if (this->minstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->minstatus(), output);
  }

  // int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->fromadmin(), output);
  }

  // bool noreply = 11;
  if (this->noreply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->noreply(), output);
  }

  // bool is_emote = 12;
  if (this->is_emote() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_emote(), output);
  }

  // int32 queued = 13;
  if (this->queued() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->queued(), output);
  }

  // int32 zone_id = 14;
  if (this->zone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->zone_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eqproto.ChannelMessage)
}

::google::protobuf::uint8* ChannelMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.ChannelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chan_num = 1;
  if (this->chan_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chan_num(), target);
  }

  // int32 language = 2;
  if (this->language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->language(), target);
  }

  // string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from(), target);
  }

  // string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->message(), target);
  }

  // int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->guilddbid(), target);
  }

  // string deliverto = 7;
  if (this->deliverto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliverto().data(), static_cast<int>(this->deliverto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.deliverto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->deliverto(), target);
  }

  // int32 type = 8;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->type(), target);
  }

  // int32 minstatus = 9;
  if (this->minstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->minstatus(), target);
  }

  // int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->fromadmin(), target);
  }

  // bool noreply = 11;
  if (this->noreply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->noreply(), target);
  }

  // bool is_emote = 12;
  if (this->is_emote() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_emote(), target);
  }

  // int32 queued = 13;
  if (this->queued() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->queued(), target);
  }

  // int32 zone_id = 14;
  if (this->zone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->zone_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eqproto.ChannelMessage)
  return target;
}

size_t ChannelMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.ChannelMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 3;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string message = 5;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string deliverto = 7;
  if (this->deliverto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deliverto());
  }

  // int32 chan_num = 1;
  if (this->chan_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chan_num());
  }

  // int32 language = 2;
  if (this->language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->language());
  }

  // int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guilddbid());
  }

  // int32 type = 8;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 minstatus = 9;
  if (this->minstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minstatus());
  }

  // int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromadmin());
  }

  // bool noreply = 11;
  if (this->noreply() != 0) {
    total_size += 1 + 1;
  }

  // bool is_emote = 12;
  if (this->is_emote() != 0) {
    total_size += 1 + 1;
  }

  // int32 queued = 13;
  if (this->queued() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->queued());
  }

  // int32 zone_id = 14;
  if (this->zone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zone_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChannelMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.ChannelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.ChannelMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.ChannelMessage)
    MergeFrom(*source);
  }
}

void ChannelMessage::MergeFrom(const ChannelMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.ChannelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.deliverto().size() > 0) {

    deliverto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliverto_);
  }
  if (from.chan_num() != 0) {
    set_chan_num(from.chan_num());
  }
  if (from.language() != 0) {
    set_language(from.language());
  }
  if (from.guilddbid() != 0) {
    set_guilddbid(from.guilddbid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.minstatus() != 0) {
    set_minstatus(from.minstatus());
  }
  if (from.fromadmin() != 0) {
    set_fromadmin(from.fromadmin());
  }
  if (from.noreply() != 0) {
    set_noreply(from.noreply());
  }
  if (from.is_emote() != 0) {
    set_is_emote(from.is_emote());
  }
  if (from.queued() != 0) {
    set_queued(from.queued());
  }
  if (from.zone_id() != 0) {
    set_zone_id(from.zone_id());
  }
}

void ChannelMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.ChannelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelMessage::CopyFrom(const ChannelMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.ChannelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelMessage::IsInitialized() const {
  return true;
}

void ChannelMessage::Swap(ChannelMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelMessage::InternalSwap(ChannelMessage* other) {
  using std::swap;
  from_.Swap(&other->from_);
  to_.Swap(&other->to_);
  message_.Swap(&other->message_);
  deliverto_.Swap(&other->deliverto_);
  swap(chan_num_, other->chan_num_);
  swap(language_, other->language_);
  swap(guilddbid_, other->guilddbid_);
  swap(type_, other->type_);
  swap(minstatus_, other->minstatus_);
  swap(fromadmin_, other->fromadmin_);
  swap(noreply_, other->noreply_);
  swap(is_emote_, other->is_emote_);
  swap(queued_, other->queued_);
  swap(zone_id_, other->zone_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChannelMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChannelMessage

// int32 chan_num = 1;
void ChannelMessage::clear_chan_num() {
  chan_num_ = 0;
}
::google::protobuf::int32 ChannelMessage::chan_num() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.chan_num)
  return chan_num_;
}
void ChannelMessage::set_chan_num(::google::protobuf::int32 value) {
  
  chan_num_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.chan_num)
}

// int32 language = 2;
void ChannelMessage::clear_language() {
  language_ = 0;
}
::google::protobuf::int32 ChannelMessage::language() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.language)
  return language_;
}
void ChannelMessage::set_language(::google::protobuf::int32 value) {
  
  language_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.language)
}

// string from = 3;
void ChannelMessage::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChannelMessage::from() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.from)
  return from_.GetNoArena();
}
void ChannelMessage::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.from)
}
#if LANG_CXX11
void ChannelMessage::set_from(::std::string&& value) {
  
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessage.from)
}
#endif
void ChannelMessage::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.from)
}
void ChannelMessage::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.from)
}
::std::string* ChannelMessage::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChannelMessage::release_from() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.from)
}

// string to = 4;
void ChannelMessage::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChannelMessage::to() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.to)
  return to_.GetNoArena();
}
void ChannelMessage::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.to)
}
#if LANG_CXX11
void ChannelMessage::set_to(::std::string&& value) {
  
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessage.to)
}
#endif
void ChannelMessage::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.to)
}
void ChannelMessage::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.to)
}
::std::string* ChannelMessage::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChannelMessage::release_to() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.to)
}

// string message = 5;
void ChannelMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChannelMessage::message() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.message)
  return message_.GetNoArena();
}
void ChannelMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.message)
}
#if LANG_CXX11
void ChannelMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessage.message)
}
#endif
void ChannelMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.message)
}
void ChannelMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.message)
}
::std::string* ChannelMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChannelMessage::release_message() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.message)
}

// int32 guilddbid = 6;
void ChannelMessage::clear_guilddbid() {
  guilddbid_ = 0;
}
::google::protobuf::int32 ChannelMessage::guilddbid() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.guilddbid)
  return guilddbid_;
}
void ChannelMessage::set_guilddbid(::google::protobuf::int32 value) {
  
  guilddbid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.guilddbid)
}

// string deliverto = 7;
void ChannelMessage::clear_deliverto() {
  deliverto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChannelMessage::deliverto() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.deliverto)
  return deliverto_.GetNoArena();
}
void ChannelMessage::set_deliverto(const ::std::string& value) {
  
  deliverto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.deliverto)
}
#if LANG_CXX11
void ChannelMessage::set_deliverto(::std::string&& value) {
  
  deliverto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessage.deliverto)
}
#endif
void ChannelMessage::set_deliverto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliverto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.deliverto)
}
void ChannelMessage::set_deliverto(const char* value, size_t size) {
  
  deliverto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.deliverto)
}
::std::string* ChannelMessage::mutable_deliverto() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.deliverto)
  return deliverto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChannelMessage::release_deliverto() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.deliverto)
  
  return deliverto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_allocated_deliverto(::std::string* deliverto) {
  if (deliverto != NULL) {
    
  } else {
    
  }
  deliverto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliverto);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.deliverto)
}

// int32 type = 8;
void ChannelMessage::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ChannelMessage::type() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.type)
  return type_;
}
void ChannelMessage::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.type)
}

// int32 minstatus = 9;
void ChannelMessage::clear_minstatus() {
  minstatus_ = 0;
}
::google::protobuf::int32 ChannelMessage::minstatus() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.minstatus)
  return minstatus_;
}
void ChannelMessage::set_minstatus(::google::protobuf::int32 value) {
  
  minstatus_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.minstatus)
}

// int32 fromadmin = 10;
void ChannelMessage::clear_fromadmin() {
  fromadmin_ = 0;
}
::google::protobuf::int32 ChannelMessage::fromadmin() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.fromadmin)
  return fromadmin_;
}
void ChannelMessage::set_fromadmin(::google::protobuf::int32 value) {
  
  fromadmin_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.fromadmin)
}

// bool noreply = 11;
void ChannelMessage::clear_noreply() {
  noreply_ = false;
}
bool ChannelMessage::noreply() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.noreply)
  return noreply_;
}
void ChannelMessage::set_noreply(bool value) {
  
  noreply_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.noreply)
}

// bool is_emote = 12;
void ChannelMessage::clear_is_emote() {
  is_emote_ = false;
}
bool ChannelMessage::is_emote() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.is_emote)
  return is_emote_;
}
void ChannelMessage::set_is_emote(bool value) {
  
  is_emote_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.is_emote)
}

// int32 queued = 13;
void ChannelMessage::clear_queued() {
  queued_ = 0;
}
::google::protobuf::int32 ChannelMessage::queued() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.queued)
  return queued_;
}
void ChannelMessage::set_queued(::google::protobuf::int32 value) {
  
  queued_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.queued)
}

// int32 zone_id = 14;
void ChannelMessage::clear_zone_id() {
  zone_id_ = 0;
}
::google::protobuf::int32 ChannelMessage::zone_id() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.zone_id)
  return zone_id_;
}
void ChannelMessage::set_zone_id(::google::protobuf::int32 value) {
  
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.zone_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandMessage::kAuthorFieldNumber;
const int CommandMessage::kCommandFieldNumber;
const int CommandMessage::kParamsFieldNumber;
const int CommandMessage::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandMessage::CommandMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.CommandMessage)
}
CommandMessage::CommandMessage(const CommandMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command().size() > 0) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  // @@protoc_insertion_point(copy_constructor:eqproto.CommandMessage)
}

void CommandMessage::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CommandMessage::~CommandMessage() {
  // @@protoc_insertion_point(destructor:eqproto.CommandMessage)
  SharedDtor();
}

void CommandMessage::SharedDtor() {
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommandMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommandMessage::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommandMessage& CommandMessage::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

CommandMessage* CommandMessage::New(::google::protobuf::Arena* arena) const {
  CommandMessage* n = new CommandMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommandMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.CommandMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CommandMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.CommandMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string author = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params(this->params_size() - 1).data(),
            static_cast<int>(this->params(this->params_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.result"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.CommandMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.CommandMessage)
  return false;
#undef DO_
}

void CommandMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.CommandMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->author(), output);
  }

  // string command = 2;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command(), output);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->params(i), output);
  }

  // string result = 4;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eqproto.CommandMessage)
}

::google::protobuf::uint8* CommandMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.CommandMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->author(), target);
  }

  // string command = 2;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command(), target);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->params(i), target);
  }

  // string result = 4;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eqproto.CommandMessage)
  return target;
}

size_t CommandMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.CommandMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string params = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0, n = this->params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  // string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string command = 2;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  // string result = 4;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.CommandMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.CommandMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.CommandMessage)
    MergeFrom(*source);
  }
}

void CommandMessage::MergeFrom(const CommandMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.CommandMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.author().size() > 0) {

    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  if (from.command().size() > 0) {

    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void CommandMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.CommandMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandMessage::CopyFrom(const CommandMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.CommandMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandMessage::IsInitialized() const {
  return true;
}

void CommandMessage::Swap(CommandMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandMessage::InternalSwap(CommandMessage* other) {
  using std::swap;
  params_.InternalSwap(&other->params_);
  author_.Swap(&other->author_);
  command_.Swap(&other->command_);
  result_.Swap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommandMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommandMessage

// string author = 1;
void CommandMessage::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CommandMessage::author() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.author)
  return author_.GetNoArena();
}
void CommandMessage::set_author(const ::std::string& value) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.author)
}
#if LANG_CXX11
void CommandMessage::set_author(::std::string&& value) {
  
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.CommandMessage.author)
}
#endif
void CommandMessage::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.author)
}
void CommandMessage::set_author(const char* value, size_t size) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.author)
}
::std::string* CommandMessage::mutable_author() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CommandMessage::release_author() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.author)
  
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandMessage::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    
  } else {
    
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.author)
}

// string command = 2;
void CommandMessage::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CommandMessage::command() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.command)
  return command_.GetNoArena();
}
void CommandMessage::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.command)
}
#if LANG_CXX11
void CommandMessage::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.CommandMessage.command)
}
#endif
void CommandMessage::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.command)
}
void CommandMessage::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.command)
}
::std::string* CommandMessage::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CommandMessage::release_command() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandMessage::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.command)
}

// repeated string params = 3;
int CommandMessage::params_size() const {
  return params_.size();
}
void CommandMessage::clear_params() {
  params_.Clear();
}
const ::std::string& CommandMessage::params(int index) const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.params)
  return params_.Get(index);
}
::std::string* CommandMessage::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.params)
  return params_.Mutable(index);
}
void CommandMessage::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.params)
  params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CommandMessage::set_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.params)
  params_.Mutable(index)->assign(std::move(value));
}
#endif
void CommandMessage::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.params)
}
void CommandMessage::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.params)
}
::std::string* CommandMessage::add_params() {
  // @@protoc_insertion_point(field_add_mutable:eqproto.CommandMessage.params)
  return params_.Add();
}
void CommandMessage::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:eqproto.CommandMessage.params)
}
#if LANG_CXX11
void CommandMessage::add_params(::std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:eqproto.CommandMessage.params)
}
#endif
void CommandMessage::add_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:eqproto.CommandMessage.params)
}
void CommandMessage::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:eqproto.CommandMessage.params)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CommandMessage::params() const {
  // @@protoc_insertion_point(field_list:eqproto.CommandMessage.params)
  return params_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CommandMessage::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:eqproto.CommandMessage.params)
  return &params_;
}

// string result = 4;
void CommandMessage::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CommandMessage::result() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.result)
  return result_.GetNoArena();
}
void CommandMessage::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.result)
}
#if LANG_CXX11
void CommandMessage::set_result(::std::string&& value) {
  
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.CommandMessage.result)
}
#endif
void CommandMessage::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.result)
}
void CommandMessage::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.result)
}
::std::string* CommandMessage::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CommandMessage::release_result() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandMessage::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyGain::kAccountIdFieldNumber;
const int DailyGain::kCharacterIdFieldNumber;
const int DailyGain::kLevelsGainedFieldNumber;
const int DailyGain::kExperienceGainedFieldNumber;
const int DailyGain::kMoneyEarnedFieldNumber;
const int DailyGain::kIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyGain::DailyGain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.DailyGain)
}
DailyGain::DailyGain(const DailyGain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identity().size() > 0) {
    identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_);
  }
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&money_earned_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(money_earned_));
  // @@protoc_insertion_point(copy_constructor:eqproto.DailyGain)
}

void DailyGain::SharedCtor() {
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&money_earned_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(money_earned_));
  _cached_size_ = 0;
}

DailyGain::~DailyGain() {
  // @@protoc_insertion_point(destructor:eqproto.DailyGain)
  SharedDtor();
}

void DailyGain::SharedDtor() {
  identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DailyGain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyGain::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyGain& DailyGain::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyGain* DailyGain::New(::google::protobuf::Arena* arena) const {
  DailyGain* n = new DailyGain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyGain::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.DailyGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&money_earned_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(money_earned_));
  _internal_metadata_.Clear();
}

bool DailyGain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.DailyGain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 character_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &character_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 levels_gained = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levels_gained_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 experience_gained = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &experience_gained_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 money_earned = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_earned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identity().data(), static_cast<int>(this->identity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.DailyGain.identity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.DailyGain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.DailyGain)
  return false;
#undef DO_
}

void DailyGain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.DailyGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->account_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->account_id(), output);
  }

  // int32 character_id = 2;
  if (this->character_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->character_id(), output);
  }

  // int32 levels_gained = 3;
  if (this->levels_gained() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->levels_gained(), output);
  }

  // int32 experience_gained = 4;
  if (this->experience_gained() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->experience_gained(), output);
  }

  // int32 money_earned = 5;
  if (this->money_earned() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->money_earned(), output);
  }

  // string identity = 6;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), static_cast<int>(this->identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.DailyGain.identity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->identity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eqproto.DailyGain)
}

::google::protobuf::uint8* DailyGain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.DailyGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 account_id = 1;
  if (this->account_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->account_id(), target);
  }

  // int32 character_id = 2;
  if (this->character_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->character_id(), target);
  }

  // int32 levels_gained = 3;
  if (this->levels_gained() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->levels_gained(), target);
  }

  // int32 experience_gained = 4;
  if (this->experience_gained() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->experience_gained(), target);
  }

  // int32 money_earned = 5;
  if (this->money_earned() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->money_earned(), target);
  }

  // string identity = 6;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), static_cast<int>(this->identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.DailyGain.identity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->identity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eqproto.DailyGain)
  return target;
}

size_t DailyGain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.DailyGain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string identity = 6;
  if (this->identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identity());
  }

  // int32 account_id = 1;
  if (this->account_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->account_id());
  }

  // int32 character_id = 2;
  if (this->character_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->character_id());
  }

  // int32 levels_gained = 3;
  if (this->levels_gained() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levels_gained());
  }

  // int32 experience_gained = 4;
  if (this->experience_gained() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->experience_gained());
  }

  // int32 money_earned = 5;
  if (this->money_earned() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money_earned());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyGain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.DailyGain)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyGain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyGain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.DailyGain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.DailyGain)
    MergeFrom(*source);
  }
}

void DailyGain::MergeFrom(const DailyGain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.DailyGain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity().size() > 0) {

    identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_);
  }
  if (from.account_id() != 0) {
    set_account_id(from.account_id());
  }
  if (from.character_id() != 0) {
    set_character_id(from.character_id());
  }
  if (from.levels_gained() != 0) {
    set_levels_gained(from.levels_gained());
  }
  if (from.experience_gained() != 0) {
    set_experience_gained(from.experience_gained());
  }
  if (from.money_earned() != 0) {
    set_money_earned(from.money_earned());
  }
}

void DailyGain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.DailyGain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyGain::CopyFrom(const DailyGain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.DailyGain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyGain::IsInitialized() const {
  return true;
}

void DailyGain::Swap(DailyGain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyGain::InternalSwap(DailyGain* other) {
  using std::swap;
  identity_.Swap(&other->identity_);
  swap(account_id_, other->account_id_);
  swap(character_id_, other->character_id_);
  swap(levels_gained_, other->levels_gained_);
  swap(experience_gained_, other->experience_gained_);
  swap(money_earned_, other->money_earned_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyGain::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyGain

// int32 account_id = 1;
void DailyGain::clear_account_id() {
  account_id_ = 0;
}
::google::protobuf::int32 DailyGain::account_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.account_id)
  return account_id_;
}
void DailyGain::set_account_id(::google::protobuf::int32 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.account_id)
}

// int32 character_id = 2;
void DailyGain::clear_character_id() {
  character_id_ = 0;
}
::google::protobuf::int32 DailyGain::character_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.character_id)
  return character_id_;
}
void DailyGain::set_character_id(::google::protobuf::int32 value) {
  
  character_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.character_id)
}

// int32 levels_gained = 3;
void DailyGain::clear_levels_gained() {
  levels_gained_ = 0;
}
::google::protobuf::int32 DailyGain::levels_gained() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.levels_gained)
  return levels_gained_;
}
void DailyGain::set_levels_gained(::google::protobuf::int32 value) {
  
  levels_gained_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.levels_gained)
}

// int32 experience_gained = 4;
void DailyGain::clear_experience_gained() {
  experience_gained_ = 0;
}
::google::protobuf::int32 DailyGain::experience_gained() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.experience_gained)
  return experience_gained_;
}
void DailyGain::set_experience_gained(::google::protobuf::int32 value) {
  
  experience_gained_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.experience_gained)
}

// int32 money_earned = 5;
void DailyGain::clear_money_earned() {
  money_earned_ = 0;
}
::google::protobuf::int32 DailyGain::money_earned() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.money_earned)
  return money_earned_;
}
void DailyGain::set_money_earned(::google::protobuf::int32 value) {
  
  money_earned_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.money_earned)
}

// string identity = 6;
void DailyGain::clear_identity() {
  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DailyGain::identity() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.identity)
  return identity_.GetNoArena();
}
void DailyGain::set_identity(const ::std::string& value) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.identity)
}
#if LANG_CXX11
void DailyGain::set_identity(::std::string&& value) {
  
  identity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.DailyGain.identity)
}
#endif
void DailyGain::set_identity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.DailyGain.identity)
}
void DailyGain::set_identity(const char* value, size_t size) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.DailyGain.identity)
}
::std::string* DailyGain::mutable_identity() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.DailyGain.identity)
  return identity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DailyGain::release_identity() {
  // @@protoc_insertion_point(field_release:eqproto.DailyGain.identity)
  
  return identity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DailyGain::set_allocated_identity(::std::string* identity) {
  if (identity != NULL) {
    
  } else {
    
  }
  identity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identity);
  // @@protoc_insertion_point(field_set_allocated:eqproto.DailyGain.identity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entity::kIdFieldNumber;
const int Entity::kNameFieldNumber;
const int Entity::kTypeFieldNumber;
const int Entity::kHpFieldNumber;
const int Entity::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entity::Entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.Entity)
}
Entity::Entity(const Entity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:eqproto.Entity)
}

void Entity::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _cached_size_ = 0;
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:eqproto.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Entity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Entity::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entity& Entity::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Entity* Entity::New(::google::protobuf::Arena* arena) const {
  Entity* n = new Entity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(level_));
  _internal_metadata_.Clear();
}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.Entity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.Entity.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.Entity.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // int32 hp = 4;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hp(), output);
  }

  // int32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eqproto.Entity)
}

::google::protobuf::uint8* Entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.Entity.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // int32 hp = 4;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hp(), target);
  }

  // int32 level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eqproto.Entity)
  return target;
}

size_t Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.Entity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 hp = 4;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // int32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  const Entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.Entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.Entity)
    MergeFrom(*source);
  }
}

void Entity::MergeFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void Entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entity::IsInitialized() const {
  return true;
}

void Entity::Swap(Entity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Entity::InternalSwap(Entity* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(hp_, other->hp_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Entity

// int32 id = 1;
void Entity::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 Entity::id() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.id)
  return id_;
}
void Entity::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.id)
}

// string name = 2;
void Entity::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Entity::name() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.name)
  return name_.GetNoArena();
}
void Entity::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.Entity.name)
}
#if LANG_CXX11
void Entity::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.Entity.name)
}
#endif
void Entity::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.Entity.name)
}
void Entity::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.Entity.name)
}
::std::string* Entity::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.Entity.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Entity::release_name() {
  // @@protoc_insertion_point(field_release:eqproto.Entity.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Entity::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:eqproto.Entity.name)
}

// int32 type = 3;
void Entity::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 Entity::type() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.type)
  return type_;
}
void Entity::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.type)
}

// int32 hp = 4;
void Entity::clear_hp() {
  hp_ = 0;
}
::google::protobuf::int32 Entity::hp() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.hp)
  return hp_;
}
void Entity::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.hp)
}

// int32 level = 5;
void Entity::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 Entity::level() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.level)
  return level_;
}
void Entity::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityEvent::kEntityFieldNumber;
const int EntityEvent::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityEvent::EntityEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.EntityEvent)
}
EntityEvent::EntityEvent(const EntityEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::eqproto::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  event_ = from.event_;
  // @@protoc_insertion_point(copy_constructor:eqproto.EntityEvent)
}

void EntityEvent::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(event_));
  _cached_size_ = 0;
}

EntityEvent::~EntityEvent() {
  // @@protoc_insertion_point(destructor:eqproto.EntityEvent)
  SharedDtor();
}

void EntityEvent::SharedDtor() {
  if (this != internal_default_instance()) delete entity_;
}

void EntityEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityEvent::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityEvent& EntityEvent::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityEvent* EntityEvent::New(::google::protobuf::Arena* arena) const {
  EntityEvent* n = new EntityEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  event_ = 0;
  _internal_metadata_.Clear();
}

bool EntityEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.EntityEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eqproto.Entity entity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.EntityEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.EntityEvent)
  return false;
#undef DO_
}

void EntityEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eqproto.Entity entity = 1;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->entity_, output);
  }

  // int32 event = 2;
  if (this->event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eqproto.EntityEvent)
}

::google::protobuf::uint8* EntityEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eqproto.Entity entity = 1;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->entity_, deterministic, target);
  }

  // int32 event = 2;
  if (this->event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->event(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eqproto.EntityEvent)
  return target;
}

size_t EntityEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.EntityEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .eqproto.Entity entity = 1;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // int32 event = 2;
  if (this->event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->event());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.EntityEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.EntityEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.EntityEvent)
    MergeFrom(*source);
  }
}

void EntityEvent::MergeFrom(const EntityEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.EntityEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity()) {
    mutable_entity()->::eqproto::Entity::MergeFrom(from.entity());
  }
  if (from.event() != 0) {
    set_event(from.event());
  }
}

void EntityEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.EntityEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityEvent::CopyFrom(const EntityEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.EntityEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityEvent::IsInitialized() const {
  return true;
}

void EntityEvent::Swap(EntityEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityEvent::InternalSwap(EntityEvent* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityEvent::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityEvent

// .eqproto.Entity entity = 1;
bool EntityEvent::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void EntityEvent::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::eqproto::Entity& EntityEvent::entity() const {
  const ::eqproto::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:eqproto.EntityEvent.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Entity*>(
      &::eqproto::_Entity_default_instance_);
}
::eqproto::Entity* EntityEvent::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::eqproto::Entity;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.EntityEvent.entity)
  return entity_;
}
::eqproto::Entity* EntityEvent::release_entity() {
  // @@protoc_insertion_point(field_release:eqproto.EntityEvent.entity)
  
  ::eqproto::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
void EntityEvent::set_allocated_entity(::eqproto::Entity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.EntityEvent.entity)
}

// int32 event = 2;
void EntityEvent::clear_event() {
  event_ = 0;
}
::google::protobuf::int32 EntityEvent::event() const {
  // @@protoc_insertion_point(field_get:eqproto.EntityEvent.event)
  return event_;
}
void EntityEvent::set_event(::google::protobuf::int32 value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:eqproto.EntityEvent.event)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace eqproto

// @@protoc_insertion_point(global_scope)
