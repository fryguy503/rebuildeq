// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[21];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsChannelMessageImpl();
void InitDefaultsChannelMessage();
void InitDefaultsCommandMessageImpl();
void InitDefaultsCommandMessage();
void InitDefaultsDailyGainImpl();
void InitDefaultsDailyGain();
void InitDefaultsEntityImpl();
void InitDefaultsEntity();
void InitDefaultsEntitiesImpl();
void InitDefaultsEntities();
void InitDefaultsPositionImpl();
void InitDefaultsPosition();
void InitDefaultsTextureProfileImpl();
void InitDefaultsTextureProfile();
void InitDefaultsTextureImpl();
void InitDefaultsTexture();
void InitDefaultsTintProfileImpl();
void InitDefaultsTintProfile();
void InitDefaultsTintImpl();
void InitDefaultsTint();
void InitDefaultsEventImpl();
void InitDefaultsEvent();
void InitDefaultsDeathEventImpl();
void InitDefaultsDeathEvent();
void InitDefaultsDamageEventImpl();
void InitDefaultsDamageEvent();
void InitDefaultsEntityEventImpl();
void InitDefaultsEntityEvent();
void InitDefaultsChannelMessageEventImpl();
void InitDefaultsChannelMessageEvent();
void InitDefaultsWearChangeEventImpl();
void InitDefaultsWearChangeEvent();
void InitDefaultsDeleteSpawnEventImpl();
void InitDefaultsDeleteSpawnEvent();
void InitDefaultsHPEventImpl();
void InitDefaultsHPEvent();
void InitDefaultsPlayerPositionUpdateEventImpl();
void InitDefaultsPlayerPositionUpdateEvent();
void InitDefaultsAnimationEventImpl();
void InitDefaultsAnimationEvent();
void InitDefaultsSpawnEventImpl();
void InitDefaultsSpawnEvent();
inline void InitDefaults() {
  InitDefaultsChannelMessage();
  InitDefaultsCommandMessage();
  InitDefaultsDailyGain();
  InitDefaultsEntity();
  InitDefaultsEntities();
  InitDefaultsPosition();
  InitDefaultsTextureProfile();
  InitDefaultsTexture();
  InitDefaultsTintProfile();
  InitDefaultsTint();
  InitDefaultsEvent();
  InitDefaultsDeathEvent();
  InitDefaultsDamageEvent();
  InitDefaultsEntityEvent();
  InitDefaultsChannelMessageEvent();
  InitDefaultsWearChangeEvent();
  InitDefaultsDeleteSpawnEvent();
  InitDefaultsHPEvent();
  InitDefaultsPlayerPositionUpdateEvent();
  InitDefaultsAnimationEvent();
  InitDefaultsSpawnEvent();
}
}  // namespace protobuf_message_2eproto
namespace eqproto {
class AnimationEvent;
class AnimationEventDefaultTypeInternal;
extern AnimationEventDefaultTypeInternal _AnimationEvent_default_instance_;
class ChannelMessage;
class ChannelMessageDefaultTypeInternal;
extern ChannelMessageDefaultTypeInternal _ChannelMessage_default_instance_;
class ChannelMessageEvent;
class ChannelMessageEventDefaultTypeInternal;
extern ChannelMessageEventDefaultTypeInternal _ChannelMessageEvent_default_instance_;
class CommandMessage;
class CommandMessageDefaultTypeInternal;
extern CommandMessageDefaultTypeInternal _CommandMessage_default_instance_;
class DailyGain;
class DailyGainDefaultTypeInternal;
extern DailyGainDefaultTypeInternal _DailyGain_default_instance_;
class DamageEvent;
class DamageEventDefaultTypeInternal;
extern DamageEventDefaultTypeInternal _DamageEvent_default_instance_;
class DeathEvent;
class DeathEventDefaultTypeInternal;
extern DeathEventDefaultTypeInternal _DeathEvent_default_instance_;
class DeleteSpawnEvent;
class DeleteSpawnEventDefaultTypeInternal;
extern DeleteSpawnEventDefaultTypeInternal _DeleteSpawnEvent_default_instance_;
class Entities;
class EntitiesDefaultTypeInternal;
extern EntitiesDefaultTypeInternal _Entities_default_instance_;
class Entity;
class EntityDefaultTypeInternal;
extern EntityDefaultTypeInternal _Entity_default_instance_;
class EntityEvent;
class EntityEventDefaultTypeInternal;
extern EntityEventDefaultTypeInternal _EntityEvent_default_instance_;
class Event;
class EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class HPEvent;
class HPEventDefaultTypeInternal;
extern HPEventDefaultTypeInternal _HPEvent_default_instance_;
class PlayerPositionUpdateEvent;
class PlayerPositionUpdateEventDefaultTypeInternal;
extern PlayerPositionUpdateEventDefaultTypeInternal _PlayerPositionUpdateEvent_default_instance_;
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class SpawnEvent;
class SpawnEventDefaultTypeInternal;
extern SpawnEventDefaultTypeInternal _SpawnEvent_default_instance_;
class Texture;
class TextureDefaultTypeInternal;
extern TextureDefaultTypeInternal _Texture_default_instance_;
class TextureProfile;
class TextureProfileDefaultTypeInternal;
extern TextureProfileDefaultTypeInternal _TextureProfile_default_instance_;
class Tint;
class TintDefaultTypeInternal;
extern TintDefaultTypeInternal _Tint_default_instance_;
class TintProfile;
class TintProfileDefaultTypeInternal;
extern TintProfileDefaultTypeInternal _TintProfile_default_instance_;
class WearChangeEvent;
class WearChangeEventDefaultTypeInternal;
extern WearChangeEventDefaultTypeInternal _WearChangeEvent_default_instance_;
}  // namespace eqproto
namespace eqproto {

enum OpCode {
  OP_Unknown = 0,
  OP_ExploreUnknown = 1,
  OP_0x0193 = 2,
  OP_0x0347 = 3,
  OP_AAAction = 4,
  OP_AAExpUpdate = 5,
  OP_AcceptNewTask = 6,
  OP_AckPacket = 7,
  OP_Action = 8,
  OP_Action2 = 9,
  OP_AddNimbusEffect = 10,
  OP_AdventureData = 11,
  OP_AdventureDetails = 12,
  OP_AdventureFinish = 13,
  OP_AdventureInfo = 14,
  OP_AdventureInfoRequest = 15,
  OP_AdventureLeaderboardReply = 16,
  OP_AdventureLeaderboardRequest = 17,
  OP_AdventureMerchantPurchase = 18,
  OP_AdventureMerchantRequest = 19,
  OP_AdventureMerchantResponse = 20,
  OP_AdventureMerchantSell = 21,
  OP_AdventurePointsUpdate = 22,
  OP_AdventureRequest = 23,
  OP_AdventureStatsReply = 24,
  OP_AdventureStatsRequest = 25,
  OP_AdventureUpdate = 26,
  OP_AggroMeterLockTarget = 27,
  OP_AggroMeterTargetInfo = 28,
  OP_AggroMeterUpdate = 29,
  OP_AltCurrency = 30,
  OP_AltCurrencyMerchantReply = 31,
  OP_AltCurrencyMerchantRequest = 32,
  OP_AltCurrencyPurchase = 33,
  OP_AltCurrencyReclaim = 34,
  OP_AltCurrencySell = 35,
  OP_AltCurrencySellSelection = 36,
  OP_Animation = 37,
  OP_AnnoyingZoneUnknown = 38,
  OP_ApplyPoison = 39,
  OP_ApproveName = 40,
  OP_ApproveWorld = 41,
  OP_ApproveZone = 42,
  OP_Assist = 43,
  OP_AssistGroup = 44,
  OP_AugmentInfo = 45,
  OP_AugmentItem = 46,
  OP_AutoAttack = 47,
  OP_AutoAttack2 = 48,
  OP_AutoFire = 49,
  OP_Bandolier = 50,
  OP_BankerChange = 51,
  OP_Barter = 52,
  OP_Bazaar = 53,
  OP_BazaarInspect = 54,
  OP_BazaarSearch = 55,
  OP_BecomeCorpse = 56,
  OP_BecomeTrader = 57,
  OP_Begging = 58,
  OP_BeginCast = 59,
  OP_Bind_Wound = 60,
  OP_BlockedBuffs = 61,
  OP_BoardBoat = 62,
  OP_Buff = 63,
  OP_BuffCreate = 64,
  OP_BuffRemoveRequest = 65,
  OP_Bug = 66,
  OP_CameraEffect = 67,
  OP_Camp = 68,
  OP_CancelSneakHide = 69,
  OP_CancelTask = 70,
  OP_CancelTrade = 71,
  OP_CastSpell = 72,
  OP_ChangeSize = 73,
  OP_ChannelMessage = 74,
  OP_CharacterCreate = 75,
  OP_CharacterCreateRequest = 76,
  OP_CharInventory = 77,
  OP_Charm = 78,
  OP_ChatMessage = 79,
  OP_ClearAA = 80,
  OP_ClearBlockedBuffs = 81,
  OP_ClearLeadershipAbilities = 82,
  OP_ClearNPCMarks = 83,
  OP_ClearObject = 84,
  OP_ClearSurname = 85,
  OP_ClickDoor = 86,
  OP_ClickObject = 87,
  OP_ClickObjectAction = 88,
  OP_ClientError = 89,
  OP_ClientReady = 90,
  OP_ClientTimeStamp = 91,
  OP_ClientUpdate = 92,
  OP_CloseContainer = 93,
  OP_CloseTributeMaster = 94,
  OP_ColoredText = 95,
  OP_CombatAbility = 96,
  OP_Command = 97,
  OP_CompletedTasks = 98,
  OP_ConfirmDelete = 99,
  OP_Consent = 100,
  OP_ConsentDeny = 101,
  OP_ConsentResponse = 102,
  OP_Consider = 103,
  OP_ConsiderCorpse = 104,
  OP_Consume = 105,
  OP_ControlBoat = 106,
  OP_CorpseDrag = 107,
  OP_CorpseDrop = 108,
  OP_CrashDump = 109,
  OP_CrystalCountUpdate = 110,
  OP_CrystalCreate = 111,
  OP_CrystalReclaim = 112,
  OP_CustomTitles = 113,
  OP_Damage = 114,
  OP_Death = 115,
  OP_DelegateAbility = 116,
  OP_DeleteCharacter = 117,
  OP_DeleteCharge = 118,
  OP_DeleteItem = 119,
  OP_DeletePetition = 120,
  OP_DeleteSpawn = 121,
  OP_DeleteSpell = 122,
  OP_DenyResponse = 123,
  OP_Disarm = 124,
  OP_DisarmTraps = 125,
  OP_DisciplineTimer = 126,
  OP_DisciplineUpdate = 127,
  OP_DiscordMerchantInventory = 128,
  OP_DoGroupLeadershipAbility = 129,
  OP_DuelResponse = 130,
  OP_DuelResponse2 = 131,
  OP_DumpName = 132,
  OP_Dye = 133,
  OP_DynamicWall = 134,
  OP_DzAddPlayer = 135,
  OP_DzChooseZone = 136,
  OP_DzCompass = 137,
  OP_DzExpeditionEndsWarning = 138,
  OP_DzExpeditionInfo = 139,
  OP_DzExpeditionList = 140,
  OP_DzJoinExpeditionConfirm = 141,
  OP_DzJoinExpeditionReply = 142,
  OP_DzLeaderStatus = 143,
  OP_DzListTimers = 144,
  OP_DzMakeLeader = 145,
  OP_DzMemberList = 146,
  OP_DzMemberStatus = 147,
  OP_DzPlayerList = 148,
  OP_DzQuit = 149,
  OP_DzRemovePlayer = 150,
  OP_DzSwapPlayer = 151,
  OP_Emote = 152,
  OP_EndLootRequest = 153,
  OP_EnduranceUpdate = 154,
  OP_EnterChat = 155,
  OP_EnterWorld = 156,
  OP_EnvDamage = 157,
  OP_ExpansionInfo = 158,
  OP_ExpUpdate = 159,
  OP_FaceChange = 160,
  OP_Feedback = 161,
  OP_FeignDeath = 162,
  OP_FellowshipUpdate = 163,
  OP_FindPersonReply = 164,
  OP_FindPersonRequest = 165,
  OP_FinishTrade = 166,
  OP_FinishWindow = 167,
  OP_FinishWindow2 = 168,
  OP_Fishing = 169,
  OP_Fling = 170,
  OP_FloatListThing = 171,
  OP_Forage = 172,
  OP_ForceFindPerson = 173,
  OP_FormattedMessage = 174,
  OP_FriendsWho = 175,
  OP_GetGuildMOTD = 176,
  OP_GetGuildMOTDReply = 177,
  OP_GetGuildsList = 178,
  OP_GiveMoney = 179,
  OP_GMApproval = 180,
  OP_GMBecomeNPC = 181,
  OP_GMDelCorpse = 182,
  OP_GMEmoteZone = 183,
  OP_GMEndTraining = 184,
  OP_GMEndTrainingResponse = 185,
  OP_GMFind = 186,
  OP_GMGoto = 187,
  OP_GMHideMe = 188,
  OP_GMKick = 189,
  OP_GMKill = 190,
  OP_GMLastName = 191,
  OP_GMNameChange = 192,
  OP_GMSearchCorpse = 193,
  OP_GMServers = 194,
  OP_GMSummon = 195,
  OP_GMToggle = 196,
  OP_GMTraining = 197,
  OP_GMTrainSkill = 198,
  OP_GMTrainSkillConfirm = 199,
  OP_GMZoneRequest = 200,
  OP_GMZoneRequest2 = 201,
  OP_GroundSpawn = 202,
  OP_GroupAcknowledge = 203,
  OP_GroupCancelInvite = 204,
  OP_GroupDelete = 205,
  OP_GroupDisband = 206,
  OP_GroupDisbandOther = 207,
  OP_GroupDisbandYou = 208,
  OP_GroupFollow = 209,
  OP_GroupFollow2 = 210,
  OP_GroupInvite = 211,
  OP_GroupInvite2 = 212,
  OP_GroupLeaderChange = 213,
  OP_GroupLeadershipAAUpdate = 214,
  OP_GroupMakeLeader = 215,
  OP_GroupMentor = 216,
  OP_GroupRoles = 217,
  OP_GroupUpdate = 218,
  OP_GroupUpdateB = 219,
  OP_GroupUpdateLeaderAA = 220,
  OP_GuildBank = 221,
  OP_GuildBankItemList = 222,
  OP_GuildCreate = 223,
  OP_GuildDelete = 224,
  OP_GuildDemote = 225,
  OP_GuildInvite = 226,
  OP_GuildInviteAccept = 227,
  OP_GuildLeader = 228,
  OP_GuildManageAdd = 229,
  OP_GuildManageBanker = 230,
  OP_GuildManageRemove = 231,
  OP_GuildManageStatus = 232,
  OP_GuildMemberLevelUpdate = 233,
  OP_GuildMemberList = 234,
  OP_GuildMemberUpdate = 235,
  OP_GuildMOTD = 236,
  OP_GuildPeace = 237,
  OP_GuildPromote = 238,
  OP_GuildPublicNote = 239,
  OP_GuildRemove = 240,
  OP_GuildsList = 241,
  OP_GuildStatus = 242,
  OP_GuildTributeInfo = 243,
  OP_GuildUpdateURLAndChannel = 244,
  OP_GuildWar = 245,
  OP_Heartbeat = 246,
  OP_Hide = 247,
  OP_HideCorpse = 248,
  OP_HPUpdate = 249,
  OP_Illusion = 250,
  OP_IncreaseStats = 251,
  OP_InitialHPUpdate = 252,
  OP_InitialMobHealth = 253,
  OP_InspectAnswer = 254,
  OP_InspectBuffs = 255,
  OP_InspectMessageUpdate = 256,
  OP_InspectRequest = 257,
  OP_InstillDoubt = 258,
  OP_InterruptCast = 259,
  OP_ItemLinkClick = 260,
  OP_ItemLinkResponse = 261,
  OP_ItemLinkText = 262,
  OP_ItemName = 263,
  OP_ItemPacket = 264,
  OP_ItemPreview = 265,
  OP_ItemRecastDelay = 266,
  OP_ItemVerifyReply = 267,
  OP_ItemVerifyRequest = 268,
  OP_ItemViewUnknown = 269,
  OP_Jump = 270,
  OP_KeyRing = 271,
  OP_KnowledgeBase = 272,
  OP_LDoNButton = 273,
  OP_LDoNDisarmTraps = 274,
  OP_LDoNInspect = 275,
  OP_LDoNOpen = 276,
  OP_LDoNPickLock = 277,
  OP_LDoNSenseTraps = 278,
  OP_LeadershipExpToggle = 279,
  OP_LeadershipExpUpdate = 280,
  OP_LeaveAdventure = 281,
  OP_LeaveBoat = 282,
  OP_LevelAppearance = 283,
  OP_LevelUpdate = 284,
  OP_LFGAppearance = 285,
  OP_LFGCommand = 286,
  OP_LFGGetMatchesRequest = 287,
  OP_LFGGetMatchesResponse = 288,
  OP_LFGResponse = 289,
  OP_LFGuild = 290,
  OP_LFPCommand = 291,
  OP_LFPGetMatchesRequest = 292,
  OP_LFPGetMatchesResponse = 293,
  OP_LinkedReuse = 294,
  OP_LoadSpellSet = 295,
  OP_LocInfo = 296,
  OP_LockoutTimerInfo = 297,
  OP_Login = 298,
  OP_LoginAccepted = 299,
  OP_LoginComplete = 300,
  OP_LoginUnknown1 = 301,
  OP_LoginUnknown2 = 302,
  OP_Logout = 303,
  OP_LogoutReply = 304,
  OP_LogServer = 305,
  OP_LootComplete = 306,
  OP_LootItem = 307,
  OP_LootRequest = 308,
  OP_ManaChange = 309,
  OP_ManaUpdate = 310,
  OP_MarkNPC = 311,
  OP_Marquee = 312,
  OP_MemorizeSpell = 313,
  OP_Mend = 314,
  OP_MendHPUpdate = 315,
  OP_MercenaryAssign = 316,
  OP_MercenaryCommand = 317,
  OP_MercenaryDataRequest = 318,
  OP_MercenaryDataResponse = 319,
  OP_MercenaryDataUpdate = 320,
  OP_MercenaryDataUpdateRequest = 321,
  OP_MercenaryDismiss = 322,
  OP_MercenaryHire = 323,
  OP_MercenarySuspendRequest = 324,
  OP_MercenarySuspendResponse = 325,
  OP_MercenaryTimer = 326,
  OP_MercenaryTimerRequest = 327,
  OP_MercenaryUnknown1 = 328,
  OP_MercenaryUnsuspendResponse = 329,
  OP_MobEnduranceUpdate = 330,
  OP_MobHealth = 331,
  OP_MobManaUpdate = 332,
  OP_MobRename = 333,
  OP_MobUpdate = 334,
  OP_MoneyOnCorpse = 335,
  OP_MoneyUpdate = 336,
  OP_MOTD = 337,
  OP_MoveCoin = 338,
  OP_MoveDoor = 339,
  OP_MoveItem = 340,
  OP_MoveLogDisregard = 341,
  OP_MoveLogRequest = 342,
  OP_MultiLineMsg = 343,
  OP_NewSpawn = 344,
  OP_NewTitlesAvailable = 345,
  OP_NewZone = 346,
  OP_OnLevelMessage = 347,
  OP_OpenContainer = 348,
  OP_OpenDiscordMerchant = 349,
  OP_OpenGuildTributeMaster = 350,
  OP_OpenInventory = 351,
  OP_OpenNewTasksWindow = 352,
  OP_OpenTributeMaster = 353,
  OP_PDeletePetition = 354,
  OP_PetBuffWindow = 355,
  OP_PetCommands = 356,
  OP_PetCommandState = 357,
  OP_PetHoTT = 358,
  OP_Petition = 359,
  OP_PetitionBug = 360,
  OP_PetitionCheckIn = 361,
  OP_PetitionCheckout = 362,
  OP_PetitionCheckout2 = 363,
  OP_PetitionDelete = 364,
  OP_PetitionQue = 365,
  OP_PetitionRefresh = 366,
  OP_PetitionResolve = 367,
  OP_PetitionSearch = 368,
  OP_PetitionSearchResults = 369,
  OP_PetitionSearchText = 370,
  OP_PetitionUnCheckout = 371,
  OP_PetitionUpdate = 372,
  OP_PickPocket = 373,
  OP_PlayerProfile = 374,
  OP_PlayerStateAdd = 375,
  OP_PlayerStateRemove = 376,
  OP_PlayEverquestRequest = 377,
  OP_PlayEverquestResponse = 378,
  OP_PlayMP3 = 379,
  OP_Poll = 380,
  OP_PollResponse = 381,
  OP_PopupResponse = 382,
  OP_PostEnterWorld = 383,
  OP_PotionBelt = 384,
  OP_PreLogoutReply = 385,
  OP_PurchaseLeadershipAA = 386,
  OP_PVPLeaderBoardDetailsReply = 387,
  OP_PVPLeaderBoardDetailsRequest = 388,
  OP_PVPLeaderBoardReply = 389,
  OP_PVPLeaderBoardRequest = 390,
  OP_PVPStats = 391,
  OP_QueryResponseThing = 392,
  OP_RaidInvite = 393,
  OP_RaidJoin = 394,
  OP_RaidUpdate = 395,
  OP_RandomNameGenerator = 396,
  OP_RandomReply = 397,
  OP_RandomReq = 398,
  OP_ReadBook = 399,
  OP_RecipeAutoCombine = 400,
  OP_RecipeDetails = 401,
  OP_RecipeReply = 402,
  OP_RecipesFavorite = 403,
  OP_RecipesSearch = 404,
  OP_ReclaimCrystals = 405,
  OP_ReloadUI = 406,
  OP_RemoveAllDoors = 407,
  OP_RemoveBlockedBuffs = 408,
  OP_RemoveNimbusEffect = 409,
  OP_RemoveTrap = 410,
  OP_Report = 411,
  OP_ReqClientSpawn = 412,
  OP_ReqNewZone = 413,
  OP_RequestClientZoneChange = 414,
  OP_RequestDuel = 415,
  OP_RequestKnowledgeBase = 416,
  OP_RequestTitles = 417,
  OP_RespawnWindow = 418,
  OP_RespondAA = 419,
  OP_RestState = 420,
  OP_Rewind = 421,
  OP_RezzAnswer = 422,
  OP_RezzComplete = 423,
  OP_RezzRequest = 424,
  OP_Sacrifice = 425,
  OP_SafeFallSuccess = 426,
  OP_SafePoint = 427,
  OP_Save = 428,
  OP_SaveOnZoneReq = 429,
  OP_SelectTribute = 430,
  OP_SendAAStats = 431,
  OP_SendAATable = 432,
  OP_SendCharInfo = 433,
  OP_SendExpZonein = 434,
  OP_SendFindableNPCs = 435,
  OP_SendGuildTributes = 436,
  OP_SendLoginInfo = 437,
  OP_SendMaxCharacters = 438,
  OP_SendMembership = 439,
  OP_SendMembershipDetails = 440,
  OP_SendSystemStats = 441,
  OP_SendTitleList = 442,
  OP_SendTributes = 443,
  OP_SendZonepoints = 444,
  OP_SenseHeading = 445,
  OP_SenseTraps = 446,
  OP_ServerListRequest = 447,
  OP_ServerListResponse = 448,
  OP_SessionReady = 449,
  OP_SetChatServer = 450,
  OP_SetChatServer2 = 451,
  OP_SetGroupTarget = 452,
  OP_SetGuildMOTD = 453,
  OP_SetGuildRank = 454,
  OP_SetRunMode = 455,
  OP_SetServerFilter = 456,
  OP_SetStartCity = 457,
  OP_SetTitle = 458,
  OP_SetTitleReply = 459,
  OP_Shielding = 460,
  OP_ShopDelItem = 461,
  OP_ShopEnd = 462,
  OP_ShopEndConfirm = 463,
  OP_ShopItem = 464,
  OP_ShopPlayerBuy = 465,
  OP_ShopPlayerSell = 466,
  OP_ShopRequest = 467,
  OP_SimpleMessage = 468,
  OP_SkillUpdate = 469,
  OP_Sneak = 470,
  OP_Some3ByteHPUpdate = 471,
  OP_Some6ByteHPUpdate = 472,
  OP_SomeItemPacketMaybe = 473,
  OP_Sound = 474,
  OP_SpawnAppearance = 475,
  OP_SpawnDoor = 476,
  OP_SpawnPositionUpdate = 477,
  OP_SpecialMesg = 478,
  OP_SpellEffect = 479,
  OP_Split = 480,
  OP_Stamina = 481,
  OP_Stun = 482,
  OP_Surname = 483,
  OP_SwapSpell = 484,
  OP_TargetBuffs = 485,
  OP_TargetCommand = 486,
  OP_TargetHoTT = 487,
  OP_TargetMouse = 488,
  OP_TargetReject = 489,
  OP_TaskActivity = 490,
  OP_TaskActivityComplete = 491,
  OP_TaskDescription = 492,
  OP_TaskHistoryReply = 493,
  OP_TaskHistoryRequest = 494,
  OP_TaskMemberList = 495,
  OP_Taunt = 496,
  OP_TestBuff = 497,
  OP_TGB = 498,
  OP_TimeOfDay = 499,
  OP_Track = 500,
  OP_TrackTarget = 501,
  OP_TrackUnknown = 502,
  OP_TradeAcceptClick = 503,
  OP_TradeBusy = 504,
  OP_TradeCoins = 505,
  OP_TradeMoneyUpdate = 506,
  OP_Trader = 507,
  OP_TraderBuy = 508,
  OP_TraderDelItem = 509,
  OP_TradeRequest = 510,
  OP_TradeRequestAck = 511,
  OP_TraderItemUpdate = 512,
  OP_TraderShop = 513,
  OP_TradeSkillCombine = 514,
  OP_Translocate = 515,
  OP_TributeInfo = 516,
  OP_TributeItem = 517,
  OP_TributeMoney = 518,
  OP_TributeNPC = 519,
  OP_TributePointUpdate = 520,
  OP_TributeTimer = 521,
  OP_TributeToggle = 522,
  OP_TributeUpdate = 523,
  OP_Untargetable = 524,
  OP_UpdateAA = 525,
  OP_UpdateAura = 526,
  OP_UpdateLeadershipAA = 527,
  OP_VetClaimReply = 528,
  OP_VetClaimRequest = 529,
  OP_VetRewardsAvaliable = 530,
  OP_VoiceMacroIn = 531,
  OP_VoiceMacroOut = 532,
  OP_WeaponEquip1 = 533,
  OP_WearChange = 534,
  OP_Weather = 535,
  OP_Weblink = 536,
  OP_WhoAllRequest = 537,
  OP_WhoAllResponse = 538,
  OP_World_Client_CRC1 = 539,
  OP_World_Client_CRC2 = 540,
  OP_WorldClientReady = 541,
  OP_WorldComplete = 542,
  OP_WorldLogout = 543,
  OP_WorldObjectsSent = 544,
  OP_WorldUnknown001 = 545,
  OP_XTargetAutoAddHaters = 546,
  OP_XTargetOpen = 547,
  OP_XTargetOpenResponse = 548,
  OP_XTargetRequest = 549,
  OP_XTargetResponse = 550,
  OP_YellForHelp = 551,
  OP_ZoneChange = 552,
  OP_ZoneComplete = 553,
  OP_ZoneEntry = 554,
  OP_ZoneGuildList = 555,
  OP_ZoneInUnknown = 556,
  OP_ZonePlayerToBind = 557,
  OP_ZoneServerInfo = 558,
  OP_ZoneServerReady = 559,
  OP_ZoneSpawns = 560,
  OP_ZoneUnavail = 561,
  OP_ResetAA = 562,
  OP_Buddy = 563,
  OP_ChannelAnnounceJoin = 564,
  OP_ChannelAnnounceLeave = 565,
  OP_Ignore = 566,
  OP_Mail = 567,
  OP_MailboxChange = 568,
  OP_MailDeliveryStatus = 569,
  OP_MailHeader = 570,
  OP_MailHeaderCount = 571,
  OP_MailLogin = 572,
  OP_MailNew = 573,
  OP_MailSendBody = 574,
  OpCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpCode_IsValid(int value);
const OpCode OpCode_MIN = OP_Unknown;
const OpCode OpCode_MAX = OP_MailSendBody;
const int OpCode_ARRAYSIZE = OpCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpCode_descriptor();
inline const ::std::string& OpCode_Name(OpCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpCode_descriptor(), value);
}
inline bool OpCode_Parse(
    const ::std::string& name, OpCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpCode>(
    OpCode_descriptor(), name, value);
}
// ===================================================================

class ChannelMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.ChannelMessage) */ {
 public:
  ChannelMessage();
  virtual ~ChannelMessage();

  ChannelMessage(const ChannelMessage& from);

  inline ChannelMessage& operator=(const ChannelMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChannelMessage(ChannelMessage&& from) noexcept
    : ChannelMessage() {
    *this = ::std::move(from);
  }

  inline ChannelMessage& operator=(ChannelMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChannelMessage* internal_default_instance() {
    return reinterpret_cast<const ChannelMessage*>(
               &_ChannelMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ChannelMessage* other);
  friend void swap(ChannelMessage& a, ChannelMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChannelMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ChannelMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChannelMessage& from);
  void MergeFrom(const ChannelMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChannelMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from = 3;
  void clear_from();
  static const int kFromFieldNumber = 3;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  #if LANG_CXX11
  void set_from(::std::string&& value);
  #endif
  void set_from(const char* value);
  void set_from(const char* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // string to = 4;
  void clear_to();
  static const int kToFieldNumber = 4;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  #if LANG_CXX11
  void set_to(::std::string&& value);
  #endif
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // string message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // string deliverto = 7;
  void clear_deliverto();
  static const int kDelivertoFieldNumber = 7;
  const ::std::string& deliverto() const;
  void set_deliverto(const ::std::string& value);
  #if LANG_CXX11
  void set_deliverto(::std::string&& value);
  #endif
  void set_deliverto(const char* value);
  void set_deliverto(const char* value, size_t size);
  ::std::string* mutable_deliverto();
  ::std::string* release_deliverto();
  void set_allocated_deliverto(::std::string* deliverto);

  // int32 chan_num = 1;
  void clear_chan_num();
  static const int kChanNumFieldNumber = 1;
  ::google::protobuf::int32 chan_num() const;
  void set_chan_num(::google::protobuf::int32 value);

  // int32 language = 2;
  void clear_language();
  static const int kLanguageFieldNumber = 2;
  ::google::protobuf::int32 language() const;
  void set_language(::google::protobuf::int32 value);

  // int32 guilddbid = 6;
  void clear_guilddbid();
  static const int kGuilddbidFieldNumber = 6;
  ::google::protobuf::int32 guilddbid() const;
  void set_guilddbid(::google::protobuf::int32 value);

  // int32 type = 8;
  void clear_type();
  static const int kTypeFieldNumber = 8;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 minstatus = 9;
  void clear_minstatus();
  static const int kMinstatusFieldNumber = 9;
  ::google::protobuf::int32 minstatus() const;
  void set_minstatus(::google::protobuf::int32 value);

  // int32 fromadmin = 10;
  void clear_fromadmin();
  static const int kFromadminFieldNumber = 10;
  ::google::protobuf::int32 fromadmin() const;
  void set_fromadmin(::google::protobuf::int32 value);

  // bool noreply = 11;
  void clear_noreply();
  static const int kNoreplyFieldNumber = 11;
  bool noreply() const;
  void set_noreply(bool value);

  // bool is_emote = 12;
  void clear_is_emote();
  static const int kIsEmoteFieldNumber = 12;
  bool is_emote() const;
  void set_is_emote(bool value);

  // int32 queued = 13;
  void clear_queued();
  static const int kQueuedFieldNumber = 13;
  ::google::protobuf::int32 queued() const;
  void set_queued(::google::protobuf::int32 value);

  // int32 zone_id = 14;
  void clear_zone_id();
  static const int kZoneIdFieldNumber = 14;
  ::google::protobuf::int32 zone_id() const;
  void set_zone_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eqproto.ChannelMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr deliverto_;
  ::google::protobuf::int32 chan_num_;
  ::google::protobuf::int32 language_;
  ::google::protobuf::int32 guilddbid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 minstatus_;
  ::google::protobuf::int32 fromadmin_;
  bool noreply_;
  bool is_emote_;
  ::google::protobuf::int32 queued_;
  ::google::protobuf::int32 zone_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsChannelMessageImpl();
};
// -------------------------------------------------------------------

class CommandMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.CommandMessage) */ {
 public:
  CommandMessage();
  virtual ~CommandMessage();

  CommandMessage(const CommandMessage& from);

  inline CommandMessage& operator=(const CommandMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandMessage(CommandMessage&& from) noexcept
    : CommandMessage() {
    *this = ::std::move(from);
  }

  inline CommandMessage& operator=(CommandMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandMessage* internal_default_instance() {
    return reinterpret_cast<const CommandMessage*>(
               &_CommandMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CommandMessage* other);
  friend void swap(CommandMessage& a, CommandMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CommandMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommandMessage& from);
  void MergeFrom(const CommandMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommandMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string params = 3;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 3;
  const ::std::string& params(int index) const;
  ::std::string* mutable_params(int index);
  void set_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_params(int index, ::std::string&& value);
  #endif
  void set_params(int index, const char* value);
  void set_params(int index, const char* value, size_t size);
  ::std::string* add_params();
  void add_params(const ::std::string& value);
  #if LANG_CXX11
  void add_params(::std::string&& value);
  #endif
  void add_params(const char* value);
  void add_params(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // string author = 1;
  void clear_author();
  static const int kAuthorFieldNumber = 1;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // string command = 2;
  void clear_command();
  static const int kCommandFieldNumber = 2;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // string result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // bytes payload = 5;
  void clear_payload();
  static const int kPayloadFieldNumber = 5;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:eqproto.CommandMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsCommandMessageImpl();
};
// -------------------------------------------------------------------

class DailyGain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.DailyGain) */ {
 public:
  DailyGain();
  virtual ~DailyGain();

  DailyGain(const DailyGain& from);

  inline DailyGain& operator=(const DailyGain& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyGain(DailyGain&& from) noexcept
    : DailyGain() {
    *this = ::std::move(from);
  }

  inline DailyGain& operator=(DailyGain&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyGain& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DailyGain* internal_default_instance() {
    return reinterpret_cast<const DailyGain*>(
               &_DailyGain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DailyGain* other);
  friend void swap(DailyGain& a, DailyGain& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyGain* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyGain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyGain& from);
  void MergeFrom(const DailyGain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyGain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string identity = 6;
  void clear_identity();
  static const int kIdentityFieldNumber = 6;
  const ::std::string& identity() const;
  void set_identity(const ::std::string& value);
  #if LANG_CXX11
  void set_identity(::std::string&& value);
  #endif
  void set_identity(const char* value);
  void set_identity(const char* value, size_t size);
  ::std::string* mutable_identity();
  ::std::string* release_identity();
  void set_allocated_identity(::std::string* identity);

  // int32 account_id = 1;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::int32 account_id() const;
  void set_account_id(::google::protobuf::int32 value);

  // int32 character_id = 2;
  void clear_character_id();
  static const int kCharacterIdFieldNumber = 2;
  ::google::protobuf::int32 character_id() const;
  void set_character_id(::google::protobuf::int32 value);

  // int32 levels_gained = 3;
  void clear_levels_gained();
  static const int kLevelsGainedFieldNumber = 3;
  ::google::protobuf::int32 levels_gained() const;
  void set_levels_gained(::google::protobuf::int32 value);

  // int32 experience_gained = 4;
  void clear_experience_gained();
  static const int kExperienceGainedFieldNumber = 4;
  ::google::protobuf::int32 experience_gained() const;
  void set_experience_gained(::google::protobuf::int32 value);

  // int32 money_earned = 5;
  void clear_money_earned();
  static const int kMoneyEarnedFieldNumber = 5;
  ::google::protobuf::int32 money_earned() const;
  void set_money_earned(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eqproto.DailyGain)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr identity_;
  ::google::protobuf::int32 account_id_;
  ::google::protobuf::int32 character_id_;
  ::google::protobuf::int32 levels_gained_;
  ::google::protobuf::int32 experience_gained_;
  ::google::protobuf::int32 money_earned_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsDailyGainImpl();
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.Entity) */ {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Entity(Entity&& from) noexcept
    : Entity() {
    *this = ::std::move(from);
  }

  inline Entity& operator=(Entity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Entity* internal_default_instance() {
    return reinterpret_cast<const Entity*>(
               &_Entity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Entity* other);
  friend void swap(Entity& a, Entity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Entity* New() const PROTOBUF_FINAL { return New(NULL); }

  Entity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .eqproto.Position position = 6;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 6;
  const ::eqproto::Position& position() const;
  ::eqproto::Position* release_position();
  ::eqproto::Position* mutable_position();
  void set_allocated_position(::eqproto::Position* position);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 hp = 4;
  void clear_hp();
  static const int kHpFieldNumber = 4;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // int32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 race = 7;
  void clear_race();
  static const int kRaceFieldNumber = 7;
  ::google::protobuf::int32 race() const;
  void set_race(::google::protobuf::int32 value);

  // int32 class = 8;
  void clear_class_();
  static const int kClassFieldNumber = 8;
  ::google::protobuf::int32 class_() const;
  void set_class_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eqproto.Entity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::eqproto::Position* position_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 race_;
  ::google::protobuf::int32 class__;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsEntityImpl();
};
// -------------------------------------------------------------------

class Entities : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.Entities) */ {
 public:
  Entities();
  virtual ~Entities();

  Entities(const Entities& from);

  inline Entities& operator=(const Entities& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Entities(Entities&& from) noexcept
    : Entities() {
    *this = ::std::move(from);
  }

  inline Entities& operator=(Entities&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Entities& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Entities* internal_default_instance() {
    return reinterpret_cast<const Entities*>(
               &_Entities_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Entities* other);
  friend void swap(Entities& a, Entities& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Entities* New() const PROTOBUF_FINAL { return New(NULL); }

  Entities* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Entities& from);
  void MergeFrom(const Entities& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Entities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .eqproto.Entity entities = 1;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 1;
  const ::eqproto::Entity& entities(int index) const;
  ::eqproto::Entity* mutable_entities(int index);
  ::eqproto::Entity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::eqproto::Entity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::eqproto::Entity >&
      entities() const;

  // @@protoc_insertion_point(class_scope:eqproto.Entities)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::eqproto::Entity > entities_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsEntitiesImpl();
};
// -------------------------------------------------------------------

class Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Position* other);
  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const PROTOBUF_FINAL { return New(NULL); }

  Position* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float h = 4;
  void clear_h();
  static const int kHFieldNumber = 4;
  float h() const;
  void set_h(float value);

  // @@protoc_insertion_point(class_scope:eqproto.Position)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float h_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsPositionImpl();
};
// -------------------------------------------------------------------

class TextureProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.TextureProfile) */ {
 public:
  TextureProfile();
  virtual ~TextureProfile();

  TextureProfile(const TextureProfile& from);

  inline TextureProfile& operator=(const TextureProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TextureProfile(TextureProfile&& from) noexcept
    : TextureProfile() {
    *this = ::std::move(from);
  }

  inline TextureProfile& operator=(TextureProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TextureProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TextureProfile* internal_default_instance() {
    return reinterpret_cast<const TextureProfile*>(
               &_TextureProfile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TextureProfile* other);
  friend void swap(TextureProfile& a, TextureProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TextureProfile* New() const PROTOBUF_FINAL { return New(NULL); }

  TextureProfile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TextureProfile& from);
  void MergeFrom(const TextureProfile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TextureProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eqproto.Texture Head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::eqproto::Texture& head() const;
  ::eqproto::Texture* release_head();
  ::eqproto::Texture* mutable_head();
  void set_allocated_head(::eqproto::Texture* head);

  // .eqproto.Texture Chest = 2;
  bool has_chest() const;
  void clear_chest();
  static const int kChestFieldNumber = 2;
  const ::eqproto::Texture& chest() const;
  ::eqproto::Texture* release_chest();
  ::eqproto::Texture* mutable_chest();
  void set_allocated_chest(::eqproto::Texture* chest);

  // .eqproto.Texture Arms = 3;
  bool has_arms() const;
  void clear_arms();
  static const int kArmsFieldNumber = 3;
  const ::eqproto::Texture& arms() const;
  ::eqproto::Texture* release_arms();
  ::eqproto::Texture* mutable_arms();
  void set_allocated_arms(::eqproto::Texture* arms);

  // .eqproto.Texture Wrist = 4;
  bool has_wrist() const;
  void clear_wrist();
  static const int kWristFieldNumber = 4;
  const ::eqproto::Texture& wrist() const;
  ::eqproto::Texture* release_wrist();
  ::eqproto::Texture* mutable_wrist();
  void set_allocated_wrist(::eqproto::Texture* wrist);

  // .eqproto.Texture Hands = 5;
  bool has_hands() const;
  void clear_hands();
  static const int kHandsFieldNumber = 5;
  const ::eqproto::Texture& hands() const;
  ::eqproto::Texture* release_hands();
  ::eqproto::Texture* mutable_hands();
  void set_allocated_hands(::eqproto::Texture* hands);

  // .eqproto.Texture Legs = 6;
  bool has_legs() const;
  void clear_legs();
  static const int kLegsFieldNumber = 6;
  const ::eqproto::Texture& legs() const;
  ::eqproto::Texture* release_legs();
  ::eqproto::Texture* mutable_legs();
  void set_allocated_legs(::eqproto::Texture* legs);

  // .eqproto.Texture Feet = 7;
  bool has_feet() const;
  void clear_feet();
  static const int kFeetFieldNumber = 7;
  const ::eqproto::Texture& feet() const;
  ::eqproto::Texture* release_feet();
  ::eqproto::Texture* mutable_feet();
  void set_allocated_feet(::eqproto::Texture* feet);

  // .eqproto.Texture Primary = 8;
  bool has_primary() const;
  void clear_primary();
  static const int kPrimaryFieldNumber = 8;
  const ::eqproto::Texture& primary() const;
  ::eqproto::Texture* release_primary();
  ::eqproto::Texture* mutable_primary();
  void set_allocated_primary(::eqproto::Texture* primary);

  // .eqproto.Texture Secondary = 9;
  bool has_secondary() const;
  void clear_secondary();
  static const int kSecondaryFieldNumber = 9;
  const ::eqproto::Texture& secondary() const;
  ::eqproto::Texture* release_secondary();
  ::eqproto::Texture* mutable_secondary();
  void set_allocated_secondary(::eqproto::Texture* secondary);

  // @@protoc_insertion_point(class_scope:eqproto.TextureProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eqproto::Texture* head_;
  ::eqproto::Texture* chest_;
  ::eqproto::Texture* arms_;
  ::eqproto::Texture* wrist_;
  ::eqproto::Texture* hands_;
  ::eqproto::Texture* legs_;
  ::eqproto::Texture* feet_;
  ::eqproto::Texture* primary_;
  ::eqproto::Texture* secondary_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsTextureProfileImpl();
};
// -------------------------------------------------------------------

class Texture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.Texture) */ {
 public:
  Texture();
  virtual ~Texture();

  Texture(const Texture& from);

  inline Texture& operator=(const Texture& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Texture(Texture&& from) noexcept
    : Texture() {
    *this = ::std::move(from);
  }

  inline Texture& operator=(Texture&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Texture& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Texture* internal_default_instance() {
    return reinterpret_cast<const Texture*>(
               &_Texture_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Texture* other);
  friend void swap(Texture& a, Texture& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Texture* New() const PROTOBUF_FINAL { return New(NULL); }

  Texture* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Texture& from);
  void MergeFrom(const Texture& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Texture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 material = 1;
  void clear_material();
  static const int kMaterialFieldNumber = 1;
  ::google::protobuf::uint32 material() const;
  void set_material(::google::protobuf::uint32 value);

  // uint32 unknown1 = 2;
  void clear_unknown1();
  static const int kUnknown1FieldNumber = 2;
  ::google::protobuf::uint32 unknown1() const;
  void set_unknown1(::google::protobuf::uint32 value);

  // uint32 EliteModel = 3;
  void clear_elitemodel();
  static const int kEliteModelFieldNumber = 3;
  ::google::protobuf::uint32 elitemodel() const;
  void set_elitemodel(::google::protobuf::uint32 value);

  // uint32 HerosForgeModel = 4;
  void clear_herosforgemodel();
  static const int kHerosForgeModelFieldNumber = 4;
  ::google::protobuf::uint32 herosforgemodel() const;
  void set_herosforgemodel(::google::protobuf::uint32 value);

  // uint32 Unknown2 = 5;
  void clear_unknown2();
  static const int kUnknown2FieldNumber = 5;
  ::google::protobuf::uint32 unknown2() const;
  void set_unknown2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.Texture)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 material_;
  ::google::protobuf::uint32 unknown1_;
  ::google::protobuf::uint32 elitemodel_;
  ::google::protobuf::uint32 herosforgemodel_;
  ::google::protobuf::uint32 unknown2_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsTextureImpl();
};
// -------------------------------------------------------------------

class TintProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.TintProfile) */ {
 public:
  TintProfile();
  virtual ~TintProfile();

  TintProfile(const TintProfile& from);

  inline TintProfile& operator=(const TintProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TintProfile(TintProfile&& from) noexcept
    : TintProfile() {
    *this = ::std::move(from);
  }

  inline TintProfile& operator=(TintProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TintProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TintProfile* internal_default_instance() {
    return reinterpret_cast<const TintProfile*>(
               &_TintProfile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TintProfile* other);
  friend void swap(TintProfile& a, TintProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TintProfile* New() const PROTOBUF_FINAL { return New(NULL); }

  TintProfile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TintProfile& from);
  void MergeFrom(const TintProfile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TintProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eqproto.Tint Head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::eqproto::Tint& head() const;
  ::eqproto::Tint* release_head();
  ::eqproto::Tint* mutable_head();
  void set_allocated_head(::eqproto::Tint* head);

  // .eqproto.Tint Chest = 2;
  bool has_chest() const;
  void clear_chest();
  static const int kChestFieldNumber = 2;
  const ::eqproto::Tint& chest() const;
  ::eqproto::Tint* release_chest();
  ::eqproto::Tint* mutable_chest();
  void set_allocated_chest(::eqproto::Tint* chest);

  // .eqproto.Tint Arms = 3;
  bool has_arms() const;
  void clear_arms();
  static const int kArmsFieldNumber = 3;
  const ::eqproto::Tint& arms() const;
  ::eqproto::Tint* release_arms();
  ::eqproto::Tint* mutable_arms();
  void set_allocated_arms(::eqproto::Tint* arms);

  // .eqproto.Tint Wrist = 4;
  bool has_wrist() const;
  void clear_wrist();
  static const int kWristFieldNumber = 4;
  const ::eqproto::Tint& wrist() const;
  ::eqproto::Tint* release_wrist();
  ::eqproto::Tint* mutable_wrist();
  void set_allocated_wrist(::eqproto::Tint* wrist);

  // .eqproto.Tint Hands = 5;
  bool has_hands() const;
  void clear_hands();
  static const int kHandsFieldNumber = 5;
  const ::eqproto::Tint& hands() const;
  ::eqproto::Tint* release_hands();
  ::eqproto::Tint* mutable_hands();
  void set_allocated_hands(::eqproto::Tint* hands);

  // .eqproto.Tint Legs = 6;
  bool has_legs() const;
  void clear_legs();
  static const int kLegsFieldNumber = 6;
  const ::eqproto::Tint& legs() const;
  ::eqproto::Tint* release_legs();
  ::eqproto::Tint* mutable_legs();
  void set_allocated_legs(::eqproto::Tint* legs);

  // .eqproto.Tint Feet = 7;
  bool has_feet() const;
  void clear_feet();
  static const int kFeetFieldNumber = 7;
  const ::eqproto::Tint& feet() const;
  ::eqproto::Tint* release_feet();
  ::eqproto::Tint* mutable_feet();
  void set_allocated_feet(::eqproto::Tint* feet);

  // .eqproto.Tint Primary = 8;
  bool has_primary() const;
  void clear_primary();
  static const int kPrimaryFieldNumber = 8;
  const ::eqproto::Tint& primary() const;
  ::eqproto::Tint* release_primary();
  ::eqproto::Tint* mutable_primary();
  void set_allocated_primary(::eqproto::Tint* primary);

  // .eqproto.Tint Secondary = 9;
  bool has_secondary() const;
  void clear_secondary();
  static const int kSecondaryFieldNumber = 9;
  const ::eqproto::Tint& secondary() const;
  ::eqproto::Tint* release_secondary();
  ::eqproto::Tint* mutable_secondary();
  void set_allocated_secondary(::eqproto::Tint* secondary);

  // @@protoc_insertion_point(class_scope:eqproto.TintProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eqproto::Tint* head_;
  ::eqproto::Tint* chest_;
  ::eqproto::Tint* arms_;
  ::eqproto::Tint* wrist_;
  ::eqproto::Tint* hands_;
  ::eqproto::Tint* legs_;
  ::eqproto::Tint* feet_;
  ::eqproto::Tint* primary_;
  ::eqproto::Tint* secondary_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsTintProfileImpl();
};
// -------------------------------------------------------------------

class Tint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.Tint) */ {
 public:
  Tint();
  virtual ~Tint();

  Tint(const Tint& from);

  inline Tint& operator=(const Tint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tint(Tint&& from) noexcept
    : Tint() {
    *this = ::std::move(from);
  }

  inline Tint& operator=(Tint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tint* internal_default_instance() {
    return reinterpret_cast<const Tint*>(
               &_Tint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Tint* other);
  friend void swap(Tint& a, Tint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tint* New() const PROTOBUF_FINAL { return New(NULL); }

  Tint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Tint& from);
  void MergeFrom(const Tint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Tint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 Blue = 1;
  void clear_blue();
  static const int kBlueFieldNumber = 1;
  ::google::protobuf::uint32 blue() const;
  void set_blue(::google::protobuf::uint32 value);

  // uint32 Green = 2;
  void clear_green();
  static const int kGreenFieldNumber = 2;
  ::google::protobuf::uint32 green() const;
  void set_green(::google::protobuf::uint32 value);

  // uint32 Red = 3;
  void clear_red();
  static const int kRedFieldNumber = 3;
  ::google::protobuf::uint32 red() const;
  void set_red(::google::protobuf::uint32 value);

  // uint32 UseTint = 4;
  void clear_usetint();
  static const int kUseTintFieldNumber = 4;
  ::google::protobuf::uint32 usetint() const;
  void set_usetint(::google::protobuf::uint32 value);

  // uint32 Color = 5;
  void clear_color();
  static const int kColorFieldNumber = 5;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.Tint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 blue_;
  ::google::protobuf::uint32 green_;
  ::google::protobuf::uint32 red_;
  ::google::protobuf::uint32 usetint_;
  ::google::protobuf::uint32 color_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsTintImpl();
};
// -------------------------------------------------------------------

class Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.Event) */ {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Event(Event&& from) noexcept
    : Event() {
    *this = ::std::move(from);
  }

  inline Event& operator=(Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Event* other);
  friend void swap(Event& a, Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Event* New() const PROTOBUF_FINAL { return New(NULL); }

  Event* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes payload = 2;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // .eqproto.OpCode op = 1;
  void clear_op();
  static const int kOpFieldNumber = 1;
  ::eqproto::OpCode op() const;
  void set_op(::eqproto::OpCode value);

  // @@protoc_insertion_point(class_scope:eqproto.Event)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  int op_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsEventImpl();
};
// -------------------------------------------------------------------

class DeathEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.DeathEvent) */ {
 public:
  DeathEvent();
  virtual ~DeathEvent();

  DeathEvent(const DeathEvent& from);

  inline DeathEvent& operator=(const DeathEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeathEvent(DeathEvent&& from) noexcept
    : DeathEvent() {
    *this = ::std::move(from);
  }

  inline DeathEvent& operator=(DeathEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeathEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeathEvent* internal_default_instance() {
    return reinterpret_cast<const DeathEvent*>(
               &_DeathEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(DeathEvent* other);
  friend void swap(DeathEvent& a, DeathEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeathEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeathEvent& from);
  void MergeFrom(const DeathEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeathEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 spawn_id = 1;
  void clear_spawn_id();
  static const int kSpawnIdFieldNumber = 1;
  ::google::protobuf::uint32 spawn_id() const;
  void set_spawn_id(::google::protobuf::uint32 value);

  // uint32 killer_id = 2;
  void clear_killer_id();
  static const int kKillerIdFieldNumber = 2;
  ::google::protobuf::uint32 killer_id() const;
  void set_killer_id(::google::protobuf::uint32 value);

  // uint32 corpse_id = 3;
  void clear_corpse_id();
  static const int kCorpseIdFieldNumber = 3;
  ::google::protobuf::uint32 corpse_id() const;
  void set_corpse_id(::google::protobuf::uint32 value);

  // uint32 bind_zone_id = 4;
  void clear_bind_zone_id();
  static const int kBindZoneIdFieldNumber = 4;
  ::google::protobuf::uint32 bind_zone_id() const;
  void set_bind_zone_id(::google::protobuf::uint32 value);

  // uint32 spell_id = 5;
  void clear_spell_id();
  static const int kSpellIdFieldNumber = 5;
  ::google::protobuf::uint32 spell_id() const;
  void set_spell_id(::google::protobuf::uint32 value);

  // uint32 attack_skill_id = 6;
  void clear_attack_skill_id();
  static const int kAttackSkillIdFieldNumber = 6;
  ::google::protobuf::uint32 attack_skill_id() const;
  void set_attack_skill_id(::google::protobuf::uint32 value);

  // uint32 damage = 7;
  void clear_damage();
  static const int kDamageFieldNumber = 7;
  ::google::protobuf::uint32 damage() const;
  void set_damage(::google::protobuf::uint32 value);

  // uint32 unknown028 = 8;
  void clear_unknown028();
  static const int kUnknown028FieldNumber = 8;
  ::google::protobuf::uint32 unknown028() const;
  void set_unknown028(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.DeathEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 spawn_id_;
  ::google::protobuf::uint32 killer_id_;
  ::google::protobuf::uint32 corpse_id_;
  ::google::protobuf::uint32 bind_zone_id_;
  ::google::protobuf::uint32 spell_id_;
  ::google::protobuf::uint32 attack_skill_id_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 unknown028_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsDeathEventImpl();
};
// -------------------------------------------------------------------

class DamageEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.DamageEvent) */ {
 public:
  DamageEvent();
  virtual ~DamageEvent();

  DamageEvent(const DamageEvent& from);

  inline DamageEvent& operator=(const DamageEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DamageEvent(DamageEvent&& from) noexcept
    : DamageEvent() {
    *this = ::std::move(from);
  }

  inline DamageEvent& operator=(DamageEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DamageEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DamageEvent* internal_default_instance() {
    return reinterpret_cast<const DamageEvent*>(
               &_DamageEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DamageEvent* other);
  friend void swap(DamageEvent& a, DamageEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DamageEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  DamageEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DamageEvent& from);
  void MergeFrom(const DamageEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DamageEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target = 1;
  void clear_target();
  static const int kTargetFieldNumber = 1;
  ::google::protobuf::uint32 target() const;
  void set_target(::google::protobuf::uint32 value);

  // uint32 source = 2;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // uint32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 spellid = 4;
  void clear_spellid();
  static const int kSpellidFieldNumber = 4;
  ::google::protobuf::uint32 spellid() const;
  void set_spellid(::google::protobuf::uint32 value);

  // uint32 damage = 5;
  void clear_damage();
  static const int kDamageFieldNumber = 5;
  ::google::protobuf::uint32 damage() const;
  void set_damage(::google::protobuf::uint32 value);

  // float force = 6;
  void clear_force();
  static const int kForceFieldNumber = 6;
  float force() const;
  void set_force(float value);

  // float meleepush_xy = 7;
  void clear_meleepush_xy();
  static const int kMeleepushXyFieldNumber = 7;
  float meleepush_xy() const;
  void set_meleepush_xy(float value);

  // float meleepush_z = 8;
  void clear_meleepush_z();
  static const int kMeleepushZFieldNumber = 8;
  float meleepush_z() const;
  void set_meleepush_z(float value);

  // @@protoc_insertion_point(class_scope:eqproto.DamageEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 spellid_;
  ::google::protobuf::uint32 damage_;
  float force_;
  float meleepush_xy_;
  float meleepush_z_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsDamageEventImpl();
};
// -------------------------------------------------------------------

class EntityEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.EntityEvent) */ {
 public:
  EntityEvent();
  virtual ~EntityEvent();

  EntityEvent(const EntityEvent& from);

  inline EntityEvent& operator=(const EntityEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityEvent(EntityEvent&& from) noexcept
    : EntityEvent() {
    *this = ::std::move(from);
  }

  inline EntityEvent& operator=(EntityEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EntityEvent* internal_default_instance() {
    return reinterpret_cast<const EntityEvent*>(
               &_EntityEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(EntityEvent* other);
  friend void swap(EntityEvent& a, EntityEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityEvent& from);
  void MergeFrom(const EntityEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 target_id = 2;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  ::google::protobuf::uint32 target_id() const;
  void set_target_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.EntityEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 target_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsEntityEventImpl();
};
// -------------------------------------------------------------------

class ChannelMessageEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.ChannelMessageEvent) */ {
 public:
  ChannelMessageEvent();
  virtual ~ChannelMessageEvent();

  ChannelMessageEvent(const ChannelMessageEvent& from);

  inline ChannelMessageEvent& operator=(const ChannelMessageEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChannelMessageEvent(ChannelMessageEvent&& from) noexcept
    : ChannelMessageEvent() {
    *this = ::std::move(from);
  }

  inline ChannelMessageEvent& operator=(ChannelMessageEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelMessageEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChannelMessageEvent* internal_default_instance() {
    return reinterpret_cast<const ChannelMessageEvent*>(
               &_ChannelMessageEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ChannelMessageEvent* other);
  friend void swap(ChannelMessageEvent& a, ChannelMessageEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChannelMessageEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  ChannelMessageEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChannelMessageEvent& from);
  void MergeFrom(const ChannelMessageEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChannelMessageEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string target_name = 1;
  void clear_target_name();
  static const int kTargetNameFieldNumber = 1;
  const ::std::string& target_name() const;
  void set_target_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_name(::std::string&& value);
  #endif
  void set_target_name(const char* value);
  void set_target_name(const char* value, size_t size);
  ::std::string* mutable_target_name();
  ::std::string* release_target_name();
  void set_allocated_target_name(::std::string* target_name);

  // string sender = 2;
  void clear_sender();
  static const int kSenderFieldNumber = 2;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // string message = 7;
  void clear_message();
  static const int kMessageFieldNumber = 7;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // uint32 language = 3;
  void clear_language();
  static const int kLanguageFieldNumber = 3;
  ::google::protobuf::uint32 language() const;
  void set_language(::google::protobuf::uint32 value);

  // uint32 chan_num = 4;
  void clear_chan_num();
  static const int kChanNumFieldNumber = 4;
  ::google::protobuf::uint32 chan_num() const;
  void set_chan_num(::google::protobuf::uint32 value);

  // uint32 cm_unknown4 = 5;
  void clear_cm_unknown4();
  static const int kCmUnknown4FieldNumber = 5;
  ::google::protobuf::uint32 cm_unknown4() const;
  void set_cm_unknown4(::google::protobuf::uint32 value);

  // uint32 skill_in_language = 6;
  void clear_skill_in_language();
  static const int kSkillInLanguageFieldNumber = 6;
  ::google::protobuf::uint32 skill_in_language() const;
  void set_skill_in_language(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.ChannelMessageEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr target_name_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 language_;
  ::google::protobuf::uint32 chan_num_;
  ::google::protobuf::uint32 cm_unknown4_;
  ::google::protobuf::uint32 skill_in_language_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsChannelMessageEventImpl();
};
// -------------------------------------------------------------------

class WearChangeEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.WearChangeEvent) */ {
 public:
  WearChangeEvent();
  virtual ~WearChangeEvent();

  WearChangeEvent(const WearChangeEvent& from);

  inline WearChangeEvent& operator=(const WearChangeEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WearChangeEvent(WearChangeEvent&& from) noexcept
    : WearChangeEvent() {
    *this = ::std::move(from);
  }

  inline WearChangeEvent& operator=(WearChangeEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WearChangeEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WearChangeEvent* internal_default_instance() {
    return reinterpret_cast<const WearChangeEvent*>(
               &_WearChangeEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(WearChangeEvent* other);
  friend void swap(WearChangeEvent& a, WearChangeEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WearChangeEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  WearChangeEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WearChangeEvent& from);
  void MergeFrom(const WearChangeEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WearChangeEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eqproto.Tint color = 7;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 7;
  const ::eqproto::Tint& color() const;
  ::eqproto::Tint* release_color();
  ::eqproto::Tint* mutable_color();
  void set_allocated_color(::eqproto::Tint* color);

  // uint32 spawn_id = 1;
  void clear_spawn_id();
  static const int kSpawnIdFieldNumber = 1;
  ::google::protobuf::uint32 spawn_id() const;
  void set_spawn_id(::google::protobuf::uint32 value);

  // uint32 material = 2;
  void clear_material();
  static const int kMaterialFieldNumber = 2;
  ::google::protobuf::uint32 material() const;
  void set_material(::google::protobuf::uint32 value);

  // uint32 unknown06 = 3;
  void clear_unknown06();
  static const int kUnknown06FieldNumber = 3;
  ::google::protobuf::uint32 unknown06() const;
  void set_unknown06(::google::protobuf::uint32 value);

  // uint32 elite_material = 4;
  void clear_elite_material();
  static const int kEliteMaterialFieldNumber = 4;
  ::google::protobuf::uint32 elite_material() const;
  void set_elite_material(::google::protobuf::uint32 value);

  // uint32 hero_forge_model = 5;
  void clear_hero_forge_model();
  static const int kHeroForgeModelFieldNumber = 5;
  ::google::protobuf::uint32 hero_forge_model() const;
  void set_hero_forge_model(::google::protobuf::uint32 value);

  // uint32 unknown18 = 6;
  void clear_unknown18();
  static const int kUnknown18FieldNumber = 6;
  ::google::protobuf::uint32 unknown18() const;
  void set_unknown18(::google::protobuf::uint32 value);

  // uint32 wear_slot_id = 8;
  void clear_wear_slot_id();
  static const int kWearSlotIdFieldNumber = 8;
  ::google::protobuf::uint32 wear_slot_id() const;
  void set_wear_slot_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.WearChangeEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eqproto::Tint* color_;
  ::google::protobuf::uint32 spawn_id_;
  ::google::protobuf::uint32 material_;
  ::google::protobuf::uint32 unknown06_;
  ::google::protobuf::uint32 elite_material_;
  ::google::protobuf::uint32 hero_forge_model_;
  ::google::protobuf::uint32 unknown18_;
  ::google::protobuf::uint32 wear_slot_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsWearChangeEventImpl();
};
// -------------------------------------------------------------------

class DeleteSpawnEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.DeleteSpawnEvent) */ {
 public:
  DeleteSpawnEvent();
  virtual ~DeleteSpawnEvent();

  DeleteSpawnEvent(const DeleteSpawnEvent& from);

  inline DeleteSpawnEvent& operator=(const DeleteSpawnEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteSpawnEvent(DeleteSpawnEvent&& from) noexcept
    : DeleteSpawnEvent() {
    *this = ::std::move(from);
  }

  inline DeleteSpawnEvent& operator=(DeleteSpawnEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteSpawnEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSpawnEvent* internal_default_instance() {
    return reinterpret_cast<const DeleteSpawnEvent*>(
               &_DeleteSpawnEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(DeleteSpawnEvent* other);
  friend void swap(DeleteSpawnEvent& a, DeleteSpawnEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteSpawnEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteSpawnEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteSpawnEvent& from);
  void MergeFrom(const DeleteSpawnEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteSpawnEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 spawn_id = 1;
  void clear_spawn_id();
  static const int kSpawnIdFieldNumber = 1;
  ::google::protobuf::uint32 spawn_id() const;
  void set_spawn_id(::google::protobuf::uint32 value);

  // uint32 decay = 2;
  void clear_decay();
  static const int kDecayFieldNumber = 2;
  ::google::protobuf::uint32 decay() const;
  void set_decay(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.DeleteSpawnEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 spawn_id_;
  ::google::protobuf::uint32 decay_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsDeleteSpawnEventImpl();
};
// -------------------------------------------------------------------

class HPEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.HPEvent) */ {
 public:
  HPEvent();
  virtual ~HPEvent();

  HPEvent(const HPEvent& from);

  inline HPEvent& operator=(const HPEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HPEvent(HPEvent&& from) noexcept
    : HPEvent() {
    *this = ::std::move(from);
  }

  inline HPEvent& operator=(HPEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HPEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HPEvent* internal_default_instance() {
    return reinterpret_cast<const HPEvent*>(
               &_HPEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(HPEvent* other);
  friend void swap(HPEvent& a, HPEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HPEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  HPEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HPEvent& from);
  void MergeFrom(const HPEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HPEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 spawn_id = 1;
  void clear_spawn_id();
  static const int kSpawnIdFieldNumber = 1;
  ::google::protobuf::uint32 spawn_id() const;
  void set_spawn_id(::google::protobuf::uint32 value);

  // uint32 cur_hp = 2;
  void clear_cur_hp();
  static const int kCurHpFieldNumber = 2;
  ::google::protobuf::uint32 cur_hp() const;
  void set_cur_hp(::google::protobuf::uint32 value);

  // uint32 max_hp = 3;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 3;
  ::google::protobuf::uint32 max_hp() const;
  void set_max_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.HPEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 spawn_id_;
  ::google::protobuf::uint32 cur_hp_;
  ::google::protobuf::uint32 max_hp_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsHPEventImpl();
};
// -------------------------------------------------------------------

class PlayerPositionUpdateEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.PlayerPositionUpdateEvent) */ {
 public:
  PlayerPositionUpdateEvent();
  virtual ~PlayerPositionUpdateEvent();

  PlayerPositionUpdateEvent(const PlayerPositionUpdateEvent& from);

  inline PlayerPositionUpdateEvent& operator=(const PlayerPositionUpdateEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPositionUpdateEvent(PlayerPositionUpdateEvent&& from) noexcept
    : PlayerPositionUpdateEvent() {
    *this = ::std::move(from);
  }

  inline PlayerPositionUpdateEvent& operator=(PlayerPositionUpdateEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPositionUpdateEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPositionUpdateEvent* internal_default_instance() {
    return reinterpret_cast<const PlayerPositionUpdateEvent*>(
               &_PlayerPositionUpdateEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PlayerPositionUpdateEvent* other);
  friend void swap(PlayerPositionUpdateEvent& a, PlayerPositionUpdateEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPositionUpdateEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerPositionUpdateEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPositionUpdateEvent& from);
  void MergeFrom(const PlayerPositionUpdateEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPositionUpdateEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 spawn_id = 1;
  void clear_spawn_id();
  static const int kSpawnIdFieldNumber = 1;
  ::google::protobuf::uint32 spawn_id() const;
  void set_spawn_id(::google::protobuf::uint32 value);

  // int32 delta_heading = 2;
  void clear_delta_heading();
  static const int kDeltaHeadingFieldNumber = 2;
  ::google::protobuf::int32 delta_heading() const;
  void set_delta_heading(::google::protobuf::int32 value);

  // int32 x_pos = 3;
  void clear_x_pos();
  static const int kXPosFieldNumber = 3;
  ::google::protobuf::int32 x_pos() const;
  void set_x_pos(::google::protobuf::int32 value);

  // int32 padding0002 = 4;
  void clear_padding0002();
  static const int kPadding0002FieldNumber = 4;
  ::google::protobuf::int32 padding0002() const;
  void set_padding0002(::google::protobuf::int32 value);

  // int32 y_pos = 5;
  void clear_y_pos();
  static const int kYPosFieldNumber = 5;
  ::google::protobuf::int32 y_pos() const;
  void set_y_pos(::google::protobuf::int32 value);

  // int32 animation = 6;
  void clear_animation();
  static const int kAnimationFieldNumber = 6;
  ::google::protobuf::int32 animation() const;
  void set_animation(::google::protobuf::int32 value);

  // int32 padding0006 = 7;
  void clear_padding0006();
  static const int kPadding0006FieldNumber = 7;
  ::google::protobuf::int32 padding0006() const;
  void set_padding0006(::google::protobuf::int32 value);

  // int32 z_pos = 8;
  void clear_z_pos();
  static const int kZPosFieldNumber = 8;
  ::google::protobuf::int32 z_pos() const;
  void set_z_pos(::google::protobuf::int32 value);

  // int32 delta_y = 9;
  void clear_delta_y();
  static const int kDeltaYFieldNumber = 9;
  ::google::protobuf::int32 delta_y() const;
  void set_delta_y(::google::protobuf::int32 value);

  // int32 delta_x = 10;
  void clear_delta_x();
  static const int kDeltaXFieldNumber = 10;
  ::google::protobuf::int32 delta_x() const;
  void set_delta_x(::google::protobuf::int32 value);

  // int32 heading = 11;
  void clear_heading();
  static const int kHeadingFieldNumber = 11;
  ::google::protobuf::int32 heading() const;
  void set_heading(::google::protobuf::int32 value);

  // int32 padding0014 = 12;
  void clear_padding0014();
  static const int kPadding0014FieldNumber = 12;
  ::google::protobuf::int32 padding0014() const;
  void set_padding0014(::google::protobuf::int32 value);

  // int32 delta_z = 13;
  void clear_delta_z();
  static const int kDeltaZFieldNumber = 13;
  ::google::protobuf::int32 delta_z() const;
  void set_delta_z(::google::protobuf::int32 value);

  // int32 padding0018 = 14;
  void clear_padding0018();
  static const int kPadding0018FieldNumber = 14;
  ::google::protobuf::int32 padding0018() const;
  void set_padding0018(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eqproto.PlayerPositionUpdateEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 spawn_id_;
  ::google::protobuf::int32 delta_heading_;
  ::google::protobuf::int32 x_pos_;
  ::google::protobuf::int32 padding0002_;
  ::google::protobuf::int32 y_pos_;
  ::google::protobuf::int32 animation_;
  ::google::protobuf::int32 padding0006_;
  ::google::protobuf::int32 z_pos_;
  ::google::protobuf::int32 delta_y_;
  ::google::protobuf::int32 delta_x_;
  ::google::protobuf::int32 heading_;
  ::google::protobuf::int32 padding0014_;
  ::google::protobuf::int32 delta_z_;
  ::google::protobuf::int32 padding0018_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsPlayerPositionUpdateEventImpl();
};
// -------------------------------------------------------------------

class AnimationEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.AnimationEvent) */ {
 public:
  AnimationEvent();
  virtual ~AnimationEvent();

  AnimationEvent(const AnimationEvent& from);

  inline AnimationEvent& operator=(const AnimationEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnimationEvent(AnimationEvent&& from) noexcept
    : AnimationEvent() {
    *this = ::std::move(from);
  }

  inline AnimationEvent& operator=(AnimationEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnimationEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnimationEvent* internal_default_instance() {
    return reinterpret_cast<const AnimationEvent*>(
               &_AnimationEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(AnimationEvent* other);
  friend void swap(AnimationEvent& a, AnimationEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnimationEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  AnimationEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnimationEvent& from);
  void MergeFrom(const AnimationEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnimationEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 spawnid = 1;
  void clear_spawnid();
  static const int kSpawnidFieldNumber = 1;
  ::google::protobuf::uint32 spawnid() const;
  void set_spawnid(::google::protobuf::uint32 value);

  // uint32 speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // uint32 action = 3;
  void clear_action();
  static const int kActionFieldNumber = 3;
  ::google::protobuf::uint32 action() const;
  void set_action(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.AnimationEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 spawnid_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 action_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsAnimationEventImpl();
};
// -------------------------------------------------------------------

class SpawnEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eqproto.SpawnEvent) */ {
 public:
  SpawnEvent();
  virtual ~SpawnEvent();

  SpawnEvent(const SpawnEvent& from);

  inline SpawnEvent& operator=(const SpawnEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpawnEvent(SpawnEvent&& from) noexcept
    : SpawnEvent() {
    *this = ::std::move(from);
  }

  inline SpawnEvent& operator=(SpawnEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpawnEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpawnEvent* internal_default_instance() {
    return reinterpret_cast<const SpawnEvent*>(
               &_SpawnEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SpawnEvent* other);
  friend void swap(SpawnEvent& a, SpawnEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpawnEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  SpawnEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpawnEvent& from);
  void MergeFrom(const SpawnEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpawnEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 8;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string suffix = 48;
  void clear_suffix();
  static const int kSuffixFieldNumber = 48;
  const ::std::string& suffix() const;
  void set_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_suffix(::std::string&& value);
  #endif
  void set_suffix(const char* value);
  void set_suffix(const char* value, size_t size);
  ::std::string* mutable_suffix();
  ::std::string* release_suffix();
  void set_allocated_suffix(::std::string* suffix);

  // string title = 56;
  void clear_title();
  static const int kTitleFieldNumber = 56;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string lastName = 62;
  void clear_lastname();
  static const int kLastNameFieldNumber = 62;
  const ::std::string& lastname() const;
  void set_lastname(const ::std::string& value);
  #if LANG_CXX11
  void set_lastname(::std::string&& value);
  #endif
  void set_lastname(const char* value);
  void set_lastname(const char* value, size_t size);
  ::std::string* mutable_lastname();
  ::std::string* release_lastname();
  void set_allocated_lastname(::std::string* lastname);

  // string DestructibleModel = 82;
  void clear_destructiblemodel();
  static const int kDestructibleModelFieldNumber = 82;
  const ::std::string& destructiblemodel() const;
  void set_destructiblemodel(const ::std::string& value);
  #if LANG_CXX11
  void set_destructiblemodel(::std::string&& value);
  #endif
  void set_destructiblemodel(const char* value);
  void set_destructiblemodel(const char* value, size_t size);
  ::std::string* mutable_destructiblemodel();
  ::std::string* release_destructiblemodel();
  void set_allocated_destructiblemodel(::std::string* destructiblemodel);

  // string DestructibleName2 = 83;
  void clear_destructiblename2();
  static const int kDestructibleName2FieldNumber = 83;
  const ::std::string& destructiblename2() const;
  void set_destructiblename2(const ::std::string& value);
  #if LANG_CXX11
  void set_destructiblename2(::std::string&& value);
  #endif
  void set_destructiblename2(const char* value);
  void set_destructiblename2(const char* value, size_t size);
  ::std::string* mutable_destructiblename2();
  ::std::string* release_destructiblename2();
  void set_allocated_destructiblename2(::std::string* destructiblename2);

  // string DestructibleString = 84;
  void clear_destructiblestring();
  static const int kDestructibleStringFieldNumber = 84;
  const ::std::string& destructiblestring() const;
  void set_destructiblestring(const ::std::string& value);
  #if LANG_CXX11
  void set_destructiblestring(::std::string&& value);
  #endif
  void set_destructiblestring(const char* value);
  void set_destructiblestring(const char* value, size_t size);
  ::std::string* mutable_destructiblestring();
  ::std::string* release_destructiblestring();
  void set_allocated_destructiblestring(::std::string* destructiblestring);

  // .eqproto.TextureProfile equipment = 52;
  bool has_equipment() const;
  void clear_equipment();
  static const int kEquipmentFieldNumber = 52;
  const ::eqproto::TextureProfile& equipment() const;
  ::eqproto::TextureProfile* release_equipment();
  ::eqproto::TextureProfile* mutable_equipment();
  void set_allocated_equipment(::eqproto::TextureProfile* equipment);

  // .eqproto.TintProfile equipment_tint = 78;
  bool has_equipment_tint() const;
  void clear_equipment_tint();
  static const int kEquipmentTintFieldNumber = 78;
  const ::eqproto::TintProfile& equipment_tint() const;
  ::eqproto::TintProfile* release_equipment_tint();
  ::eqproto::TintProfile* mutable_equipment_tint();
  void set_allocated_equipment_tint(::eqproto::TintProfile* equipment_tint);

  // uint32 unknown0000 = 1;
  void clear_unknown0000();
  static const int kUnknown0000FieldNumber = 1;
  ::google::protobuf::uint32 unknown0000() const;
  void set_unknown0000(::google::protobuf::uint32 value);

  // uint32 gm = 2;
  void clear_gm();
  static const int kGmFieldNumber = 2;
  ::google::protobuf::uint32 gm() const;
  void set_gm(::google::protobuf::uint32 value);

  // uint32 unknown0003 = 3;
  void clear_unknown0003();
  static const int kUnknown0003FieldNumber = 3;
  ::google::protobuf::uint32 unknown0003() const;
  void set_unknown0003(::google::protobuf::uint32 value);

  // uint32 aaitle = 4;
  void clear_aaitle();
  static const int kAaitleFieldNumber = 4;
  ::google::protobuf::uint32 aaitle() const;
  void set_aaitle(::google::protobuf::uint32 value);

  // uint32 unknown0004 = 5;
  void clear_unknown0004();
  static const int kUnknown0004FieldNumber = 5;
  ::google::protobuf::uint32 unknown0004() const;
  void set_unknown0004(::google::protobuf::uint32 value);

  // uint32 anon = 6;
  void clear_anon();
  static const int kAnonFieldNumber = 6;
  ::google::protobuf::uint32 anon() const;
  void set_anon(::google::protobuf::uint32 value);

  // uint32 face = 7;
  void clear_face();
  static const int kFaceFieldNumber = 7;
  ::google::protobuf::uint32 face() const;
  void set_face(::google::protobuf::uint32 value);

  // uint32 deity = 9;
  void clear_deity();
  static const int kDeityFieldNumber = 9;
  ::google::protobuf::uint32 deity() const;
  void set_deity(::google::protobuf::uint32 value);

  // uint32 unknown0073 = 10;
  void clear_unknown0073();
  static const int kUnknown0073FieldNumber = 10;
  ::google::protobuf::uint32 unknown0073() const;
  void set_unknown0073(::google::protobuf::uint32 value);

  // float size = 11;
  void clear_size();
  static const int kSizeFieldNumber = 11;
  float size() const;
  void set_size(float value);

  // uint32 unknown0079 = 12;
  void clear_unknown0079();
  static const int kUnknown0079FieldNumber = 12;
  ::google::protobuf::uint32 unknown0079() const;
  void set_unknown0079(::google::protobuf::uint32 value);

  // uint32 NPC = 13;
  void clear_npc();
  static const int kNPCFieldNumber = 13;
  ::google::protobuf::uint32 npc() const;
  void set_npc(::google::protobuf::uint32 value);

  // uint32 invis = 14;
  void clear_invis();
  static const int kInvisFieldNumber = 14;
  ::google::protobuf::uint32 invis() const;
  void set_invis(::google::protobuf::uint32 value);

  // uint32 haircolor = 15;
  void clear_haircolor();
  static const int kHaircolorFieldNumber = 15;
  ::google::protobuf::uint32 haircolor() const;
  void set_haircolor(::google::protobuf::uint32 value);

  // uint32 curHp = 16;
  void clear_curhp();
  static const int kCurHpFieldNumber = 16;
  ::google::protobuf::uint32 curhp() const;
  void set_curhp(::google::protobuf::uint32 value);

  // uint32 max_hp = 17;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 17;
  ::google::protobuf::uint32 max_hp() const;
  void set_max_hp(::google::protobuf::uint32 value);

  // uint32 findable = 18;
  void clear_findable();
  static const int kFindableFieldNumber = 18;
  ::google::protobuf::uint32 findable() const;
  void set_findable(::google::protobuf::uint32 value);

  // uint32 unknown0089 = 19;
  void clear_unknown0089();
  static const int kUnknown0089FieldNumber = 19;
  ::google::protobuf::uint32 unknown0089() const;
  void set_unknown0089(::google::protobuf::uint32 value);

  // int32 deltaHeading = 20;
  void clear_deltaheading();
  static const int kDeltaHeadingFieldNumber = 20;
  ::google::protobuf::int32 deltaheading() const;
  void set_deltaheading(::google::protobuf::int32 value);

  // int32 x = 21;
  void clear_x();
  static const int kXFieldNumber = 21;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 padding0054 = 22;
  void clear_padding0054();
  static const int kPadding0054FieldNumber = 22;
  ::google::protobuf::int32 padding0054() const;
  void set_padding0054(::google::protobuf::int32 value);

  // int32 y = 23;
  void clear_y();
  static const int kYFieldNumber = 23;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // int32 animation = 24;
  void clear_animation();
  static const int kAnimationFieldNumber = 24;
  ::google::protobuf::int32 animation() const;
  void set_animation(::google::protobuf::int32 value);

  // int32 padding0058 = 25;
  void clear_padding0058();
  static const int kPadding0058FieldNumber = 25;
  ::google::protobuf::int32 padding0058() const;
  void set_padding0058(::google::protobuf::int32 value);

  // int32 z = 26;
  void clear_z();
  static const int kZFieldNumber = 26;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // int32 deltaY = 27;
  void clear_deltay();
  static const int kDeltaYFieldNumber = 27;
  ::google::protobuf::int32 deltay() const;
  void set_deltay(::google::protobuf::int32 value);

  // int32 deltaX = 28;
  void clear_deltax();
  static const int kDeltaXFieldNumber = 28;
  ::google::protobuf::int32 deltax() const;
  void set_deltax(::google::protobuf::int32 value);

  // uint32 heading = 29;
  void clear_heading();
  static const int kHeadingFieldNumber = 29;
  ::google::protobuf::uint32 heading() const;
  void set_heading(::google::protobuf::uint32 value);

  // int32 padding0066 = 30;
  void clear_padding0066();
  static const int kPadding0066FieldNumber = 30;
  ::google::protobuf::int32 padding0066() const;
  void set_padding0066(::google::protobuf::int32 value);

  // int32 deltaZ = 31;
  void clear_deltaz();
  static const int kDeltaZFieldNumber = 31;
  ::google::protobuf::int32 deltaz() const;
  void set_deltaz(::google::protobuf::int32 value);

  // int32 padding0070 = 32;
  void clear_padding0070();
  static const int kPadding0070FieldNumber = 32;
  ::google::protobuf::int32 padding0070() const;
  void set_padding0070(::google::protobuf::int32 value);

  // uint32 eyecolor1 = 33;
  void clear_eyecolor1();
  static const int kEyecolor1FieldNumber = 33;
  ::google::protobuf::uint32 eyecolor1() const;
  void set_eyecolor1(::google::protobuf::uint32 value);

  // uint32 unknown0115 = 34;
  void clear_unknown0115();
  static const int kUnknown0115FieldNumber = 34;
  ::google::protobuf::uint32 unknown0115() const;
  void set_unknown0115(::google::protobuf::uint32 value);

  // uint32 StandState = 35;
  void clear_standstate();
  static const int kStandStateFieldNumber = 35;
  ::google::protobuf::uint32 standstate() const;
  void set_standstate(::google::protobuf::uint32 value);

  // uint32 drakkin_heritage = 36;
  void clear_drakkin_heritage();
  static const int kDrakkinHeritageFieldNumber = 36;
  ::google::protobuf::uint32 drakkin_heritage() const;
  void set_drakkin_heritage(::google::protobuf::uint32 value);

  // uint32 drakkin_tattoo = 37;
  void clear_drakkin_tattoo();
  static const int kDrakkinTattooFieldNumber = 37;
  ::google::protobuf::uint32 drakkin_tattoo() const;
  void set_drakkin_tattoo(::google::protobuf::uint32 value);

  // uint32 drakkin_details = 38;
  void clear_drakkin_details();
  static const int kDrakkinDetailsFieldNumber = 38;
  ::google::protobuf::uint32 drakkin_details() const;
  void set_drakkin_details(::google::protobuf::uint32 value);

  // uint32 showhelm = 39;
  void clear_showhelm();
  static const int kShowhelmFieldNumber = 39;
  ::google::protobuf::uint32 showhelm() const;
  void set_showhelm(::google::protobuf::uint32 value);

  // uint32 unknown0140 = 40;
  void clear_unknown0140();
  static const int kUnknown0140FieldNumber = 40;
  ::google::protobuf::uint32 unknown0140() const;
  void set_unknown0140(::google::protobuf::uint32 value);

  // uint32 is_npc = 41;
  void clear_is_npc();
  static const int kIsNpcFieldNumber = 41;
  ::google::protobuf::uint32 is_npc() const;
  void set_is_npc(::google::protobuf::uint32 value);

  // uint32 hairstyle = 42;
  void clear_hairstyle();
  static const int kHairstyleFieldNumber = 42;
  ::google::protobuf::uint32 hairstyle() const;
  void set_hairstyle(::google::protobuf::uint32 value);

  // uint32 beard = 43;
  void clear_beard();
  static const int kBeardFieldNumber = 43;
  ::google::protobuf::uint32 beard() const;
  void set_beard(::google::protobuf::uint32 value);

  // uint32 unknown0147 = 44;
  void clear_unknown0147();
  static const int kUnknown0147FieldNumber = 44;
  ::google::protobuf::uint32 unknown0147() const;
  void set_unknown0147(::google::protobuf::uint32 value);

  // uint32 level = 45;
  void clear_level();
  static const int kLevelFieldNumber = 45;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 PlayerState = 46;
  void clear_playerstate();
  static const int kPlayerStateFieldNumber = 46;
  ::google::protobuf::uint32 playerstate() const;
  void set_playerstate(::google::protobuf::uint32 value);

  // uint32 beardcolor = 47;
  void clear_beardcolor();
  static const int kBeardcolorFieldNumber = 47;
  ::google::protobuf::uint32 beardcolor() const;
  void set_beardcolor(::google::protobuf::uint32 value);

  // uint32 petOwnerId = 49;
  void clear_petownerid();
  static const int kPetOwnerIdFieldNumber = 49;
  ::google::protobuf::uint32 petownerid() const;
  void set_petownerid(::google::protobuf::uint32 value);

  // uint32 guildrank = 50;
  void clear_guildrank();
  static const int kGuildrankFieldNumber = 50;
  ::google::protobuf::uint32 guildrank() const;
  void set_guildrank(::google::protobuf::uint32 value);

  // uint32 unknown0194 = 51;
  void clear_unknown0194();
  static const int kUnknown0194FieldNumber = 51;
  ::google::protobuf::uint32 unknown0194() const;
  void set_unknown0194(::google::protobuf::uint32 value);

  // float runspeed = 53;
  void clear_runspeed();
  static const int kRunspeedFieldNumber = 53;
  float runspeed() const;
  void set_runspeed(float value);

  // uint32 afk = 54;
  void clear_afk();
  static const int kAfkFieldNumber = 54;
  ::google::protobuf::uint32 afk() const;
  void set_afk(::google::protobuf::uint32 value);

  // uint32 guildID = 55;
  void clear_guildid();
  static const int kGuildIDFieldNumber = 55;
  ::google::protobuf::uint32 guildid() const;
  void set_guildid(::google::protobuf::uint32 value);

  // uint32 unknown0274 = 57;
  void clear_unknown0274();
  static const int kUnknown0274FieldNumber = 57;
  ::google::protobuf::uint32 unknown0274() const;
  void set_unknown0274(::google::protobuf::uint32 value);

  // uint32 set_to_0xFF = 58;
  void clear_set_to_0xff();
  static const int kSetTo0XFFFieldNumber = 58;
  ::google::protobuf::uint32 set_to_0xff() const;
  void set_set_to_0xff(::google::protobuf::uint32 value);

  // uint32 helm = 59;
  void clear_helm();
  static const int kHelmFieldNumber = 59;
  ::google::protobuf::uint32 helm() const;
  void set_helm(::google::protobuf::uint32 value);

  // uint32 race = 60;
  void clear_race();
  static const int kRaceFieldNumber = 60;
  ::google::protobuf::uint32 race() const;
  void set_race(::google::protobuf::uint32 value);

  // uint32 unknown0288 = 61;
  void clear_unknown0288();
  static const int kUnknown0288FieldNumber = 61;
  ::google::protobuf::uint32 unknown0288() const;
  void set_unknown0288(::google::protobuf::uint32 value);

  // float walkspeed = 63;
  void clear_walkspeed();
  static const int kWalkspeedFieldNumber = 63;
  float walkspeed() const;
  void set_walkspeed(float value);

  // uint32 unknown0328 = 64;
  void clear_unknown0328();
  static const int kUnknown0328FieldNumber = 64;
  ::google::protobuf::uint32 unknown0328() const;
  void set_unknown0328(::google::protobuf::uint32 value);

  // uint32 is_pet = 65;
  void clear_is_pet();
  static const int kIsPetFieldNumber = 65;
  ::google::protobuf::uint32 is_pet() const;
  void set_is_pet(::google::protobuf::uint32 value);

  // uint32 light = 66;
  void clear_light();
  static const int kLightFieldNumber = 66;
  ::google::protobuf::uint32 light() const;
  void set_light(::google::protobuf::uint32 value);

  // uint32 class_ = 67;
  void clear_class_();
  static const int kClassFieldNumber = 67;
  ::google::protobuf::uint32 class_() const;
  void set_class_(::google::protobuf::uint32 value);

  // uint32 eyecolor2 = 68;
  void clear_eyecolor2();
  static const int kEyecolor2FieldNumber = 68;
  ::google::protobuf::uint32 eyecolor2() const;
  void set_eyecolor2(::google::protobuf::uint32 value);

  // uint32 flymode = 69;
  void clear_flymode();
  static const int kFlymodeFieldNumber = 69;
  ::google::protobuf::uint32 flymode() const;
  void set_flymode(::google::protobuf::uint32 value);

  // uint32 gender = 70;
  void clear_gender();
  static const int kGenderFieldNumber = 70;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // uint32 bodytype = 71;
  void clear_bodytype();
  static const int kBodytypeFieldNumber = 71;
  ::google::protobuf::uint32 bodytype() const;
  void set_bodytype(::google::protobuf::uint32 value);

  // uint32 unknown0336 = 72;
  void clear_unknown0336();
  static const int kUnknown0336FieldNumber = 72;
  ::google::protobuf::uint32 unknown0336() const;
  void set_unknown0336(::google::protobuf::uint32 value);

  // uint32 equip_chest2 = 73;
  void clear_equip_chest2();
  static const int kEquipChest2FieldNumber = 73;
  ::google::protobuf::uint32 equip_chest2() const;
  void set_equip_chest2(::google::protobuf::uint32 value);

  // uint32 mount_color = 74;
  void clear_mount_color();
  static const int kMountColorFieldNumber = 74;
  ::google::protobuf::uint32 mount_color() const;
  void set_mount_color(::google::protobuf::uint32 value);

  // uint32 spawnId = 75;
  void clear_spawnid();
  static const int kSpawnIdFieldNumber = 75;
  ::google::protobuf::uint32 spawnid() const;
  void set_spawnid(::google::protobuf::uint32 value);

  // uint32 unknown0344 = 76;
  void clear_unknown0344();
  static const int kUnknown0344FieldNumber = 76;
  ::google::protobuf::uint32 unknown0344() const;
  void set_unknown0344(::google::protobuf::uint32 value);

  // uint32 IsMercenary = 77;
  void clear_ismercenary();
  static const int kIsMercenaryFieldNumber = 77;
  ::google::protobuf::uint32 ismercenary() const;
  void set_ismercenary(::google::protobuf::uint32 value);

  // uint32 lfg = 79;
  void clear_lfg();
  static const int kLfgFieldNumber = 79;
  ::google::protobuf::uint32 lfg() const;
  void set_lfg(::google::protobuf::uint32 value);

  // uint32 DestructibleAppearance = 85;
  void clear_destructibleappearance();
  static const int kDestructibleAppearanceFieldNumber = 85;
  ::google::protobuf::uint32 destructibleappearance() const;
  void set_destructibleappearance(::google::protobuf::uint32 value);

  // uint32 DestructibleUnk1 = 86;
  void clear_destructibleunk1();
  static const int kDestructibleUnk1FieldNumber = 86;
  ::google::protobuf::uint32 destructibleunk1() const;
  void set_destructibleunk1(::google::protobuf::uint32 value);

  // uint32 DestructibleID1 = 87;
  void clear_destructibleid1();
  static const int kDestructibleID1FieldNumber = 87;
  ::google::protobuf::uint32 destructibleid1() const;
  void set_destructibleid1(::google::protobuf::uint32 value);

  // uint32 DestructibleID2 = 88;
  void clear_destructibleid2();
  static const int kDestructibleID2FieldNumber = 88;
  ::google::protobuf::uint32 destructibleid2() const;
  void set_destructibleid2(::google::protobuf::uint32 value);

  // uint32 DestructibleID3 = 89;
  void clear_destructibleid3();
  static const int kDestructibleID3FieldNumber = 89;
  ::google::protobuf::uint32 destructibleid3() const;
  void set_destructibleid3(::google::protobuf::uint32 value);

  // uint32 DestructibleID4 = 90;
  void clear_destructibleid4();
  static const int kDestructibleID4FieldNumber = 90;
  ::google::protobuf::uint32 destructibleid4() const;
  void set_destructibleid4(::google::protobuf::uint32 value);

  // uint32 DestructibleUnk2 = 91;
  void clear_destructibleunk2();
  static const int kDestructibleUnk2FieldNumber = 91;
  ::google::protobuf::uint32 destructibleunk2() const;
  void set_destructibleunk2(::google::protobuf::uint32 value);

  // uint32 DestructibleUnk3 = 92;
  void clear_destructibleunk3();
  static const int kDestructibleUnk3FieldNumber = 92;
  ::google::protobuf::uint32 destructibleunk3() const;
  void set_destructibleunk3(::google::protobuf::uint32 value);

  // uint32 DestructibleUnk4 = 93;
  void clear_destructibleunk4();
  static const int kDestructibleUnk4FieldNumber = 93;
  ::google::protobuf::uint32 destructibleunk4() const;
  void set_destructibleunk4(::google::protobuf::uint32 value);

  // bool DestructibleObject = 80;
  void clear_destructibleobject();
  static const int kDestructibleObjectFieldNumber = 80;
  bool destructibleobject() const;
  void set_destructibleobject(bool value);

  // bool targetable_with_hotkey = 99;
  void clear_targetable_with_hotkey();
  static const int kTargetableWithHotkeyFieldNumber = 99;
  bool targetable_with_hotkey() const;
  void set_targetable_with_hotkey(bool value);

  // bool show_name = 100;
  void clear_show_name();
  static const int kShowNameFieldNumber = 100;
  bool show_name() const;
  void set_show_name(bool value);

  // uint32 DestructibleUnk5 = 94;
  void clear_destructibleunk5();
  static const int kDestructibleUnk5FieldNumber = 94;
  ::google::protobuf::uint32 destructibleunk5() const;
  void set_destructibleunk5(::google::protobuf::uint32 value);

  // uint32 DestructibleUnk6 = 95;
  void clear_destructibleunk6();
  static const int kDestructibleUnk6FieldNumber = 95;
  ::google::protobuf::uint32 destructibleunk6() const;
  void set_destructibleunk6(::google::protobuf::uint32 value);

  // uint32 DestructibleUnk7 = 96;
  void clear_destructibleunk7();
  static const int kDestructibleUnk7FieldNumber = 96;
  ::google::protobuf::uint32 destructibleunk7() const;
  void set_destructibleunk7(::google::protobuf::uint32 value);

  // uint32 DestructibleUnk8 = 97;
  void clear_destructibleunk8();
  static const int kDestructibleUnk8FieldNumber = 97;
  ::google::protobuf::uint32 destructibleunk8() const;
  void set_destructibleunk8(::google::protobuf::uint32 value);

  // uint32 DestructibleUnk9 = 98;
  void clear_destructibleunk9();
  static const int kDestructibleUnk9FieldNumber = 98;
  ::google::protobuf::uint32 destructibleunk9() const;
  void set_destructibleunk9(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:eqproto.SpawnEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr suffix_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr lastname_;
  ::google::protobuf::internal::ArenaStringPtr destructiblemodel_;
  ::google::protobuf::internal::ArenaStringPtr destructiblename2_;
  ::google::protobuf::internal::ArenaStringPtr destructiblestring_;
  ::eqproto::TextureProfile* equipment_;
  ::eqproto::TintProfile* equipment_tint_;
  ::google::protobuf::uint32 unknown0000_;
  ::google::protobuf::uint32 gm_;
  ::google::protobuf::uint32 unknown0003_;
  ::google::protobuf::uint32 aaitle_;
  ::google::protobuf::uint32 unknown0004_;
  ::google::protobuf::uint32 anon_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 deity_;
  ::google::protobuf::uint32 unknown0073_;
  float size_;
  ::google::protobuf::uint32 unknown0079_;
  ::google::protobuf::uint32 npc_;
  ::google::protobuf::uint32 invis_;
  ::google::protobuf::uint32 haircolor_;
  ::google::protobuf::uint32 curhp_;
  ::google::protobuf::uint32 max_hp_;
  ::google::protobuf::uint32 findable_;
  ::google::protobuf::uint32 unknown0089_;
  ::google::protobuf::int32 deltaheading_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 padding0054_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 animation_;
  ::google::protobuf::int32 padding0058_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::int32 deltay_;
  ::google::protobuf::int32 deltax_;
  ::google::protobuf::uint32 heading_;
  ::google::protobuf::int32 padding0066_;
  ::google::protobuf::int32 deltaz_;
  ::google::protobuf::int32 padding0070_;
  ::google::protobuf::uint32 eyecolor1_;
  ::google::protobuf::uint32 unknown0115_;
  ::google::protobuf::uint32 standstate_;
  ::google::protobuf::uint32 drakkin_heritage_;
  ::google::protobuf::uint32 drakkin_tattoo_;
  ::google::protobuf::uint32 drakkin_details_;
  ::google::protobuf::uint32 showhelm_;
  ::google::protobuf::uint32 unknown0140_;
  ::google::protobuf::uint32 is_npc_;
  ::google::protobuf::uint32 hairstyle_;
  ::google::protobuf::uint32 beard_;
  ::google::protobuf::uint32 unknown0147_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 playerstate_;
  ::google::protobuf::uint32 beardcolor_;
  ::google::protobuf::uint32 petownerid_;
  ::google::protobuf::uint32 guildrank_;
  ::google::protobuf::uint32 unknown0194_;
  float runspeed_;
  ::google::protobuf::uint32 afk_;
  ::google::protobuf::uint32 guildid_;
  ::google::protobuf::uint32 unknown0274_;
  ::google::protobuf::uint32 set_to_0xff_;
  ::google::protobuf::uint32 helm_;
  ::google::protobuf::uint32 race_;
  ::google::protobuf::uint32 unknown0288_;
  float walkspeed_;
  ::google::protobuf::uint32 unknown0328_;
  ::google::protobuf::uint32 is_pet_;
  ::google::protobuf::uint32 light_;
  ::google::protobuf::uint32 class__;
  ::google::protobuf::uint32 eyecolor2_;
  ::google::protobuf::uint32 flymode_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 bodytype_;
  ::google::protobuf::uint32 unknown0336_;
  ::google::protobuf::uint32 equip_chest2_;
  ::google::protobuf::uint32 mount_color_;
  ::google::protobuf::uint32 spawnid_;
  ::google::protobuf::uint32 unknown0344_;
  ::google::protobuf::uint32 ismercenary_;
  ::google::protobuf::uint32 lfg_;
  ::google::protobuf::uint32 destructibleappearance_;
  ::google::protobuf::uint32 destructibleunk1_;
  ::google::protobuf::uint32 destructibleid1_;
  ::google::protobuf::uint32 destructibleid2_;
  ::google::protobuf::uint32 destructibleid3_;
  ::google::protobuf::uint32 destructibleid4_;
  ::google::protobuf::uint32 destructibleunk2_;
  ::google::protobuf::uint32 destructibleunk3_;
  ::google::protobuf::uint32 destructibleunk4_;
  bool destructibleobject_;
  bool targetable_with_hotkey_;
  bool show_name_;
  ::google::protobuf::uint32 destructibleunk5_;
  ::google::protobuf::uint32 destructibleunk6_;
  ::google::protobuf::uint32 destructibleunk7_;
  ::google::protobuf::uint32 destructibleunk8_;
  ::google::protobuf::uint32 destructibleunk9_;
  mutable int _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsSpawnEventImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChannelMessage

// int32 chan_num = 1;
inline void ChannelMessage::clear_chan_num() {
  chan_num_ = 0;
}
inline ::google::protobuf::int32 ChannelMessage::chan_num() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.chan_num)
  return chan_num_;
}
inline void ChannelMessage::set_chan_num(::google::protobuf::int32 value) {
  
  chan_num_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.chan_num)
}

// int32 language = 2;
inline void ChannelMessage::clear_language() {
  language_ = 0;
}
inline ::google::protobuf::int32 ChannelMessage::language() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.language)
  return language_;
}
inline void ChannelMessage::set_language(::google::protobuf::int32 value) {
  
  language_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.language)
}

// string from = 3;
inline void ChannelMessage::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChannelMessage::from() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.from)
  return from_.GetNoArena();
}
inline void ChannelMessage::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.from)
}
#if LANG_CXX11
inline void ChannelMessage::set_from(::std::string&& value) {
  
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessage.from)
}
#endif
inline void ChannelMessage::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.from)
}
inline void ChannelMessage::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.from)
}
inline ::std::string* ChannelMessage::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelMessage::release_from() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChannelMessage::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.from)
}

// string to = 4;
inline void ChannelMessage::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChannelMessage::to() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.to)
  return to_.GetNoArena();
}
inline void ChannelMessage::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.to)
}
#if LANG_CXX11
inline void ChannelMessage::set_to(::std::string&& value) {
  
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessage.to)
}
#endif
inline void ChannelMessage::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.to)
}
inline void ChannelMessage::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.to)
}
inline ::std::string* ChannelMessage::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelMessage::release_to() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChannelMessage::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.to)
}

// string message = 5;
inline void ChannelMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChannelMessage::message() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.message)
  return message_.GetNoArena();
}
inline void ChannelMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.message)
}
#if LANG_CXX11
inline void ChannelMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessage.message)
}
#endif
inline void ChannelMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.message)
}
inline void ChannelMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.message)
}
inline ::std::string* ChannelMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelMessage::release_message() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChannelMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.message)
}

// int32 guilddbid = 6;
inline void ChannelMessage::clear_guilddbid() {
  guilddbid_ = 0;
}
inline ::google::protobuf::int32 ChannelMessage::guilddbid() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.guilddbid)
  return guilddbid_;
}
inline void ChannelMessage::set_guilddbid(::google::protobuf::int32 value) {
  
  guilddbid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.guilddbid)
}

// string deliverto = 7;
inline void ChannelMessage::clear_deliverto() {
  deliverto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChannelMessage::deliverto() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.deliverto)
  return deliverto_.GetNoArena();
}
inline void ChannelMessage::set_deliverto(const ::std::string& value) {
  
  deliverto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.deliverto)
}
#if LANG_CXX11
inline void ChannelMessage::set_deliverto(::std::string&& value) {
  
  deliverto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessage.deliverto)
}
#endif
inline void ChannelMessage::set_deliverto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliverto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.deliverto)
}
inline void ChannelMessage::set_deliverto(const char* value, size_t size) {
  
  deliverto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.deliverto)
}
inline ::std::string* ChannelMessage::mutable_deliverto() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.deliverto)
  return deliverto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelMessage::release_deliverto() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.deliverto)
  
  return deliverto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChannelMessage::set_allocated_deliverto(::std::string* deliverto) {
  if (deliverto != NULL) {
    
  } else {
    
  }
  deliverto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliverto);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.deliverto)
}

// int32 type = 8;
inline void ChannelMessage::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ChannelMessage::type() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.type)
  return type_;
}
inline void ChannelMessage::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.type)
}

// int32 minstatus = 9;
inline void ChannelMessage::clear_minstatus() {
  minstatus_ = 0;
}
inline ::google::protobuf::int32 ChannelMessage::minstatus() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.minstatus)
  return minstatus_;
}
inline void ChannelMessage::set_minstatus(::google::protobuf::int32 value) {
  
  minstatus_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.minstatus)
}

// int32 fromadmin = 10;
inline void ChannelMessage::clear_fromadmin() {
  fromadmin_ = 0;
}
inline ::google::protobuf::int32 ChannelMessage::fromadmin() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.fromadmin)
  return fromadmin_;
}
inline void ChannelMessage::set_fromadmin(::google::protobuf::int32 value) {
  
  fromadmin_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.fromadmin)
}

// bool noreply = 11;
inline void ChannelMessage::clear_noreply() {
  noreply_ = false;
}
inline bool ChannelMessage::noreply() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.noreply)
  return noreply_;
}
inline void ChannelMessage::set_noreply(bool value) {
  
  noreply_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.noreply)
}

// bool is_emote = 12;
inline void ChannelMessage::clear_is_emote() {
  is_emote_ = false;
}
inline bool ChannelMessage::is_emote() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.is_emote)
  return is_emote_;
}
inline void ChannelMessage::set_is_emote(bool value) {
  
  is_emote_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.is_emote)
}

// int32 queued = 13;
inline void ChannelMessage::clear_queued() {
  queued_ = 0;
}
inline ::google::protobuf::int32 ChannelMessage::queued() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.queued)
  return queued_;
}
inline void ChannelMessage::set_queued(::google::protobuf::int32 value) {
  
  queued_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.queued)
}

// int32 zone_id = 14;
inline void ChannelMessage::clear_zone_id() {
  zone_id_ = 0;
}
inline ::google::protobuf::int32 ChannelMessage::zone_id() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.zone_id)
  return zone_id_;
}
inline void ChannelMessage::set_zone_id(::google::protobuf::int32 value) {
  
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.zone_id)
}

// -------------------------------------------------------------------

// CommandMessage

// string author = 1;
inline void CommandMessage::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandMessage::author() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.author)
  return author_.GetNoArena();
}
inline void CommandMessage::set_author(const ::std::string& value) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.author)
}
#if LANG_CXX11
inline void CommandMessage::set_author(::std::string&& value) {
  
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.CommandMessage.author)
}
#endif
inline void CommandMessage::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.author)
}
inline void CommandMessage::set_author(const char* value, size_t size) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.author)
}
inline ::std::string* CommandMessage::mutable_author() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandMessage::release_author() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.author)
  
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandMessage::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    
  } else {
    
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.author)
}

// string command = 2;
inline void CommandMessage::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandMessage::command() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.command)
  return command_.GetNoArena();
}
inline void CommandMessage::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.command)
}
#if LANG_CXX11
inline void CommandMessage::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.CommandMessage.command)
}
#endif
inline void CommandMessage::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.command)
}
inline void CommandMessage::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.command)
}
inline ::std::string* CommandMessage::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandMessage::release_command() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandMessage::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.command)
}

// repeated string params = 3;
inline int CommandMessage::params_size() const {
  return params_.size();
}
inline void CommandMessage::clear_params() {
  params_.Clear();
}
inline const ::std::string& CommandMessage::params(int index) const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.params)
  return params_.Get(index);
}
inline ::std::string* CommandMessage::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.params)
  return params_.Mutable(index);
}
inline void CommandMessage::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.params)
  params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CommandMessage::set_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.params)
  params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CommandMessage::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.params)
}
inline void CommandMessage::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.params)
}
inline ::std::string* CommandMessage::add_params() {
  // @@protoc_insertion_point(field_add_mutable:eqproto.CommandMessage.params)
  return params_.Add();
}
inline void CommandMessage::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:eqproto.CommandMessage.params)
}
#if LANG_CXX11
inline void CommandMessage::add_params(::std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:eqproto.CommandMessage.params)
}
#endif
inline void CommandMessage::add_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:eqproto.CommandMessage.params)
}
inline void CommandMessage::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:eqproto.CommandMessage.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CommandMessage::params() const {
  // @@protoc_insertion_point(field_list:eqproto.CommandMessage.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CommandMessage::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:eqproto.CommandMessage.params)
  return &params_;
}

// string result = 4;
inline void CommandMessage::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandMessage::result() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.result)
  return result_.GetNoArena();
}
inline void CommandMessage::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.result)
}
#if LANG_CXX11
inline void CommandMessage::set_result(::std::string&& value) {
  
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.CommandMessage.result)
}
#endif
inline void CommandMessage::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.result)
}
inline void CommandMessage::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.result)
}
inline ::std::string* CommandMessage::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandMessage::release_result() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandMessage::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.result)
}

// bytes payload = 5;
inline void CommandMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandMessage::payload() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.payload)
  return payload_.GetNoArena();
}
inline void CommandMessage::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.payload)
}
#if LANG_CXX11
inline void CommandMessage::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.CommandMessage.payload)
}
#endif
inline void CommandMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.payload)
}
inline void CommandMessage::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.payload)
}
inline ::std::string* CommandMessage::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandMessage::release_payload() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.payload)
}

// -------------------------------------------------------------------

// DailyGain

// int32 account_id = 1;
inline void DailyGain::clear_account_id() {
  account_id_ = 0;
}
inline ::google::protobuf::int32 DailyGain::account_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.account_id)
  return account_id_;
}
inline void DailyGain::set_account_id(::google::protobuf::int32 value) {
  
  account_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.account_id)
}

// int32 character_id = 2;
inline void DailyGain::clear_character_id() {
  character_id_ = 0;
}
inline ::google::protobuf::int32 DailyGain::character_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.character_id)
  return character_id_;
}
inline void DailyGain::set_character_id(::google::protobuf::int32 value) {
  
  character_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.character_id)
}

// int32 levels_gained = 3;
inline void DailyGain::clear_levels_gained() {
  levels_gained_ = 0;
}
inline ::google::protobuf::int32 DailyGain::levels_gained() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.levels_gained)
  return levels_gained_;
}
inline void DailyGain::set_levels_gained(::google::protobuf::int32 value) {
  
  levels_gained_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.levels_gained)
}

// int32 experience_gained = 4;
inline void DailyGain::clear_experience_gained() {
  experience_gained_ = 0;
}
inline ::google::protobuf::int32 DailyGain::experience_gained() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.experience_gained)
  return experience_gained_;
}
inline void DailyGain::set_experience_gained(::google::protobuf::int32 value) {
  
  experience_gained_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.experience_gained)
}

// int32 money_earned = 5;
inline void DailyGain::clear_money_earned() {
  money_earned_ = 0;
}
inline ::google::protobuf::int32 DailyGain::money_earned() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.money_earned)
  return money_earned_;
}
inline void DailyGain::set_money_earned(::google::protobuf::int32 value) {
  
  money_earned_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.money_earned)
}

// string identity = 6;
inline void DailyGain::clear_identity() {
  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DailyGain::identity() const {
  // @@protoc_insertion_point(field_get:eqproto.DailyGain.identity)
  return identity_.GetNoArena();
}
inline void DailyGain::set_identity(const ::std::string& value) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.DailyGain.identity)
}
#if LANG_CXX11
inline void DailyGain::set_identity(::std::string&& value) {
  
  identity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.DailyGain.identity)
}
#endif
inline void DailyGain::set_identity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.DailyGain.identity)
}
inline void DailyGain::set_identity(const char* value, size_t size) {
  
  identity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.DailyGain.identity)
}
inline ::std::string* DailyGain::mutable_identity() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.DailyGain.identity)
  return identity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DailyGain::release_identity() {
  // @@protoc_insertion_point(field_release:eqproto.DailyGain.identity)
  
  return identity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DailyGain::set_allocated_identity(::std::string* identity) {
  if (identity != NULL) {
    
  } else {
    
  }
  identity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identity);
  // @@protoc_insertion_point(field_set_allocated:eqproto.DailyGain.identity)
}

// -------------------------------------------------------------------

// Entity

// int32 id = 1;
inline void Entity::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Entity::id() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.id)
  return id_;
}
inline void Entity::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.id)
}

// string name = 2;
inline void Entity::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entity::name() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.name)
  return name_.GetNoArena();
}
inline void Entity::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.Entity.name)
}
#if LANG_CXX11
inline void Entity::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.Entity.name)
}
#endif
inline void Entity::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.Entity.name)
}
inline void Entity::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.Entity.name)
}
inline ::std::string* Entity::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.Entity.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_name() {
  // @@protoc_insertion_point(field_release:eqproto.Entity.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:eqproto.Entity.name)
}

// int32 type = 3;
inline void Entity::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Entity::type() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.type)
  return type_;
}
inline void Entity::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.type)
}

// int32 hp = 4;
inline void Entity::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 Entity::hp() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.hp)
  return hp_;
}
inline void Entity::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.hp)
}

// int32 level = 5;
inline void Entity::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 Entity::level() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.level)
  return level_;
}
inline void Entity::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.level)
}

// .eqproto.Position position = 6;
inline bool Entity::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void Entity::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::eqproto::Position& Entity::position() const {
  const ::eqproto::Position* p = position_;
  // @@protoc_insertion_point(field_get:eqproto.Entity.position)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Position*>(
      &::eqproto::_Position_default_instance_);
}
inline ::eqproto::Position* Entity::release_position() {
  // @@protoc_insertion_point(field_release:eqproto.Entity.position)
  
  ::eqproto::Position* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::eqproto::Position* Entity::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::eqproto::Position;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.Entity.position)
  return position_;
}
inline void Entity::set_allocated_position(::eqproto::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:eqproto.Entity.position)
}

// int32 race = 7;
inline void Entity::clear_race() {
  race_ = 0;
}
inline ::google::protobuf::int32 Entity::race() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.race)
  return race_;
}
inline void Entity::set_race(::google::protobuf::int32 value) {
  
  race_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.race)
}

// int32 class = 8;
inline void Entity::clear_class_() {
  class__ = 0;
}
inline ::google::protobuf::int32 Entity::class_() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.class)
  return class__;
}
inline void Entity::set_class_(::google::protobuf::int32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.class)
}

// -------------------------------------------------------------------

// Entities

// repeated .eqproto.Entity entities = 1;
inline int Entities::entities_size() const {
  return entities_.size();
}
inline void Entities::clear_entities() {
  entities_.Clear();
}
inline const ::eqproto::Entity& Entities::entities(int index) const {
  // @@protoc_insertion_point(field_get:eqproto.Entities.entities)
  return entities_.Get(index);
}
inline ::eqproto::Entity* Entities::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:eqproto.Entities.entities)
  return entities_.Mutable(index);
}
inline ::eqproto::Entity* Entities::add_entities() {
  // @@protoc_insertion_point(field_add:eqproto.Entities.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::eqproto::Entity >*
Entities::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:eqproto.Entities.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::eqproto::Entity >&
Entities::entities() const {
  // @@protoc_insertion_point(field_list:eqproto.Entities.entities)
  return entities_;
}

// -------------------------------------------------------------------

// Position

// float x = 1;
inline void Position::clear_x() {
  x_ = 0;
}
inline float Position::x() const {
  // @@protoc_insertion_point(field_get:eqproto.Position.x)
  return x_;
}
inline void Position::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Position.x)
}

// float y = 2;
inline void Position::clear_y() {
  y_ = 0;
}
inline float Position::y() const {
  // @@protoc_insertion_point(field_get:eqproto.Position.y)
  return y_;
}
inline void Position::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Position.y)
}

// float z = 3;
inline void Position::clear_z() {
  z_ = 0;
}
inline float Position::z() const {
  // @@protoc_insertion_point(field_get:eqproto.Position.z)
  return z_;
}
inline void Position::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Position.z)
}

// float h = 4;
inline void Position::clear_h() {
  h_ = 0;
}
inline float Position::h() const {
  // @@protoc_insertion_point(field_get:eqproto.Position.h)
  return h_;
}
inline void Position::set_h(float value) {
  
  h_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Position.h)
}

// -------------------------------------------------------------------

// TextureProfile

// .eqproto.Texture Head = 1;
inline bool TextureProfile::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
inline void TextureProfile::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::head() const {
  const ::eqproto::Texture* p = head_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Head)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_head() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Head)
  
  ::eqproto::Texture* temp = head_;
  head_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Head)
  return head_;
}
inline void TextureProfile::set_allocated_head(::eqproto::Texture* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete head_;
  }
  if (head) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      head = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, head, submessage_arena);
    }
    
  } else {
    
  }
  head_ = head;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Head)
}

// .eqproto.Texture Chest = 2;
inline bool TextureProfile::has_chest() const {
  return this != internal_default_instance() && chest_ != NULL;
}
inline void TextureProfile::clear_chest() {
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) {
    delete chest_;
  }
  chest_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::chest() const {
  const ::eqproto::Texture* p = chest_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Chest)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_chest() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Chest)
  
  ::eqproto::Texture* temp = chest_;
  chest_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_chest() {
  
  if (chest_ == NULL) {
    chest_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Chest)
  return chest_;
}
inline void TextureProfile::set_allocated_chest(::eqproto::Texture* chest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chest_;
  }
  if (chest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chest, submessage_arena);
    }
    
  } else {
    
  }
  chest_ = chest;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Chest)
}

// .eqproto.Texture Arms = 3;
inline bool TextureProfile::has_arms() const {
  return this != internal_default_instance() && arms_ != NULL;
}
inline void TextureProfile::clear_arms() {
  if (GetArenaNoVirtual() == NULL && arms_ != NULL) {
    delete arms_;
  }
  arms_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::arms() const {
  const ::eqproto::Texture* p = arms_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Arms)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_arms() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Arms)
  
  ::eqproto::Texture* temp = arms_;
  arms_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_arms() {
  
  if (arms_ == NULL) {
    arms_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Arms)
  return arms_;
}
inline void TextureProfile::set_allocated_arms(::eqproto::Texture* arms) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete arms_;
  }
  if (arms) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arms = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arms, submessage_arena);
    }
    
  } else {
    
  }
  arms_ = arms;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Arms)
}

// .eqproto.Texture Wrist = 4;
inline bool TextureProfile::has_wrist() const {
  return this != internal_default_instance() && wrist_ != NULL;
}
inline void TextureProfile::clear_wrist() {
  if (GetArenaNoVirtual() == NULL && wrist_ != NULL) {
    delete wrist_;
  }
  wrist_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::wrist() const {
  const ::eqproto::Texture* p = wrist_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Wrist)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_wrist() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Wrist)
  
  ::eqproto::Texture* temp = wrist_;
  wrist_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_wrist() {
  
  if (wrist_ == NULL) {
    wrist_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Wrist)
  return wrist_;
}
inline void TextureProfile::set_allocated_wrist(::eqproto::Texture* wrist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wrist_;
  }
  if (wrist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wrist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wrist, submessage_arena);
    }
    
  } else {
    
  }
  wrist_ = wrist;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Wrist)
}

// .eqproto.Texture Hands = 5;
inline bool TextureProfile::has_hands() const {
  return this != internal_default_instance() && hands_ != NULL;
}
inline void TextureProfile::clear_hands() {
  if (GetArenaNoVirtual() == NULL && hands_ != NULL) {
    delete hands_;
  }
  hands_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::hands() const {
  const ::eqproto::Texture* p = hands_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Hands)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_hands() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Hands)
  
  ::eqproto::Texture* temp = hands_;
  hands_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_hands() {
  
  if (hands_ == NULL) {
    hands_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Hands)
  return hands_;
}
inline void TextureProfile::set_allocated_hands(::eqproto::Texture* hands) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hands_;
  }
  if (hands) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hands = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hands, submessage_arena);
    }
    
  } else {
    
  }
  hands_ = hands;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Hands)
}

// .eqproto.Texture Legs = 6;
inline bool TextureProfile::has_legs() const {
  return this != internal_default_instance() && legs_ != NULL;
}
inline void TextureProfile::clear_legs() {
  if (GetArenaNoVirtual() == NULL && legs_ != NULL) {
    delete legs_;
  }
  legs_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::legs() const {
  const ::eqproto::Texture* p = legs_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Legs)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_legs() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Legs)
  
  ::eqproto::Texture* temp = legs_;
  legs_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_legs() {
  
  if (legs_ == NULL) {
    legs_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Legs)
  return legs_;
}
inline void TextureProfile::set_allocated_legs(::eqproto::Texture* legs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete legs_;
  }
  if (legs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      legs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, legs, submessage_arena);
    }
    
  } else {
    
  }
  legs_ = legs;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Legs)
}

// .eqproto.Texture Feet = 7;
inline bool TextureProfile::has_feet() const {
  return this != internal_default_instance() && feet_ != NULL;
}
inline void TextureProfile::clear_feet() {
  if (GetArenaNoVirtual() == NULL && feet_ != NULL) {
    delete feet_;
  }
  feet_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::feet() const {
  const ::eqproto::Texture* p = feet_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Feet)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_feet() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Feet)
  
  ::eqproto::Texture* temp = feet_;
  feet_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_feet() {
  
  if (feet_ == NULL) {
    feet_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Feet)
  return feet_;
}
inline void TextureProfile::set_allocated_feet(::eqproto::Texture* feet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete feet_;
  }
  if (feet) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      feet = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, feet, submessage_arena);
    }
    
  } else {
    
  }
  feet_ = feet;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Feet)
}

// .eqproto.Texture Primary = 8;
inline bool TextureProfile::has_primary() const {
  return this != internal_default_instance() && primary_ != NULL;
}
inline void TextureProfile::clear_primary() {
  if (GetArenaNoVirtual() == NULL && primary_ != NULL) {
    delete primary_;
  }
  primary_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::primary() const {
  const ::eqproto::Texture* p = primary_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Primary)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_primary() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Primary)
  
  ::eqproto::Texture* temp = primary_;
  primary_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_primary() {
  
  if (primary_ == NULL) {
    primary_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Primary)
  return primary_;
}
inline void TextureProfile::set_allocated_primary(::eqproto::Texture* primary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete primary_;
  }
  if (primary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      primary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, primary, submessage_arena);
    }
    
  } else {
    
  }
  primary_ = primary;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Primary)
}

// .eqproto.Texture Secondary = 9;
inline bool TextureProfile::has_secondary() const {
  return this != internal_default_instance() && secondary_ != NULL;
}
inline void TextureProfile::clear_secondary() {
  if (GetArenaNoVirtual() == NULL && secondary_ != NULL) {
    delete secondary_;
  }
  secondary_ = NULL;
}
inline const ::eqproto::Texture& TextureProfile::secondary() const {
  const ::eqproto::Texture* p = secondary_;
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Secondary)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Texture*>(
      &::eqproto::_Texture_default_instance_);
}
inline ::eqproto::Texture* TextureProfile::release_secondary() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Secondary)
  
  ::eqproto::Texture* temp = secondary_;
  secondary_ = NULL;
  return temp;
}
inline ::eqproto::Texture* TextureProfile::mutable_secondary() {
  
  if (secondary_ == NULL) {
    secondary_ = new ::eqproto::Texture;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Secondary)
  return secondary_;
}
inline void TextureProfile::set_allocated_secondary(::eqproto::Texture* secondary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete secondary_;
  }
  if (secondary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secondary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secondary, submessage_arena);
    }
    
  } else {
    
  }
  secondary_ = secondary;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Secondary)
}

// -------------------------------------------------------------------

// Texture

// uint32 material = 1;
inline void Texture::clear_material() {
  material_ = 0u;
}
inline ::google::protobuf::uint32 Texture::material() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.material)
  return material_;
}
inline void Texture::set_material(::google::protobuf::uint32 value) {
  
  material_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.material)
}

// uint32 unknown1 = 2;
inline void Texture::clear_unknown1() {
  unknown1_ = 0u;
}
inline ::google::protobuf::uint32 Texture::unknown1() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.unknown1)
  return unknown1_;
}
inline void Texture::set_unknown1(::google::protobuf::uint32 value) {
  
  unknown1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.unknown1)
}

// uint32 EliteModel = 3;
inline void Texture::clear_elitemodel() {
  elitemodel_ = 0u;
}
inline ::google::protobuf::uint32 Texture::elitemodel() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.EliteModel)
  return elitemodel_;
}
inline void Texture::set_elitemodel(::google::protobuf::uint32 value) {
  
  elitemodel_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.EliteModel)
}

// uint32 HerosForgeModel = 4;
inline void Texture::clear_herosforgemodel() {
  herosforgemodel_ = 0u;
}
inline ::google::protobuf::uint32 Texture::herosforgemodel() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.HerosForgeModel)
  return herosforgemodel_;
}
inline void Texture::set_herosforgemodel(::google::protobuf::uint32 value) {
  
  herosforgemodel_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.HerosForgeModel)
}

// uint32 Unknown2 = 5;
inline void Texture::clear_unknown2() {
  unknown2_ = 0u;
}
inline ::google::protobuf::uint32 Texture::unknown2() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.Unknown2)
  return unknown2_;
}
inline void Texture::set_unknown2(::google::protobuf::uint32 value) {
  
  unknown2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.Unknown2)
}

// -------------------------------------------------------------------

// TintProfile

// .eqproto.Tint Head = 1;
inline bool TintProfile::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
inline void TintProfile::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::head() const {
  const ::eqproto::Tint* p = head_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Head)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_head() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Head)
  
  ::eqproto::Tint* temp = head_;
  head_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Head)
  return head_;
}
inline void TintProfile::set_allocated_head(::eqproto::Tint* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete head_;
  }
  if (head) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      head = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, head, submessage_arena);
    }
    
  } else {
    
  }
  head_ = head;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Head)
}

// .eqproto.Tint Chest = 2;
inline bool TintProfile::has_chest() const {
  return this != internal_default_instance() && chest_ != NULL;
}
inline void TintProfile::clear_chest() {
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) {
    delete chest_;
  }
  chest_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::chest() const {
  const ::eqproto::Tint* p = chest_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Chest)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_chest() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Chest)
  
  ::eqproto::Tint* temp = chest_;
  chest_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_chest() {
  
  if (chest_ == NULL) {
    chest_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Chest)
  return chest_;
}
inline void TintProfile::set_allocated_chest(::eqproto::Tint* chest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chest_;
  }
  if (chest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chest, submessage_arena);
    }
    
  } else {
    
  }
  chest_ = chest;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Chest)
}

// .eqproto.Tint Arms = 3;
inline bool TintProfile::has_arms() const {
  return this != internal_default_instance() && arms_ != NULL;
}
inline void TintProfile::clear_arms() {
  if (GetArenaNoVirtual() == NULL && arms_ != NULL) {
    delete arms_;
  }
  arms_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::arms() const {
  const ::eqproto::Tint* p = arms_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Arms)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_arms() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Arms)
  
  ::eqproto::Tint* temp = arms_;
  arms_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_arms() {
  
  if (arms_ == NULL) {
    arms_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Arms)
  return arms_;
}
inline void TintProfile::set_allocated_arms(::eqproto::Tint* arms) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete arms_;
  }
  if (arms) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arms = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arms, submessage_arena);
    }
    
  } else {
    
  }
  arms_ = arms;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Arms)
}

// .eqproto.Tint Wrist = 4;
inline bool TintProfile::has_wrist() const {
  return this != internal_default_instance() && wrist_ != NULL;
}
inline void TintProfile::clear_wrist() {
  if (GetArenaNoVirtual() == NULL && wrist_ != NULL) {
    delete wrist_;
  }
  wrist_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::wrist() const {
  const ::eqproto::Tint* p = wrist_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Wrist)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_wrist() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Wrist)
  
  ::eqproto::Tint* temp = wrist_;
  wrist_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_wrist() {
  
  if (wrist_ == NULL) {
    wrist_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Wrist)
  return wrist_;
}
inline void TintProfile::set_allocated_wrist(::eqproto::Tint* wrist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wrist_;
  }
  if (wrist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wrist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wrist, submessage_arena);
    }
    
  } else {
    
  }
  wrist_ = wrist;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Wrist)
}

// .eqproto.Tint Hands = 5;
inline bool TintProfile::has_hands() const {
  return this != internal_default_instance() && hands_ != NULL;
}
inline void TintProfile::clear_hands() {
  if (GetArenaNoVirtual() == NULL && hands_ != NULL) {
    delete hands_;
  }
  hands_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::hands() const {
  const ::eqproto::Tint* p = hands_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Hands)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_hands() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Hands)
  
  ::eqproto::Tint* temp = hands_;
  hands_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_hands() {
  
  if (hands_ == NULL) {
    hands_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Hands)
  return hands_;
}
inline void TintProfile::set_allocated_hands(::eqproto::Tint* hands) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hands_;
  }
  if (hands) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hands = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hands, submessage_arena);
    }
    
  } else {
    
  }
  hands_ = hands;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Hands)
}

// .eqproto.Tint Legs = 6;
inline bool TintProfile::has_legs() const {
  return this != internal_default_instance() && legs_ != NULL;
}
inline void TintProfile::clear_legs() {
  if (GetArenaNoVirtual() == NULL && legs_ != NULL) {
    delete legs_;
  }
  legs_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::legs() const {
  const ::eqproto::Tint* p = legs_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Legs)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_legs() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Legs)
  
  ::eqproto::Tint* temp = legs_;
  legs_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_legs() {
  
  if (legs_ == NULL) {
    legs_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Legs)
  return legs_;
}
inline void TintProfile::set_allocated_legs(::eqproto::Tint* legs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete legs_;
  }
  if (legs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      legs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, legs, submessage_arena);
    }
    
  } else {
    
  }
  legs_ = legs;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Legs)
}

// .eqproto.Tint Feet = 7;
inline bool TintProfile::has_feet() const {
  return this != internal_default_instance() && feet_ != NULL;
}
inline void TintProfile::clear_feet() {
  if (GetArenaNoVirtual() == NULL && feet_ != NULL) {
    delete feet_;
  }
  feet_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::feet() const {
  const ::eqproto::Tint* p = feet_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Feet)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_feet() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Feet)
  
  ::eqproto::Tint* temp = feet_;
  feet_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_feet() {
  
  if (feet_ == NULL) {
    feet_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Feet)
  return feet_;
}
inline void TintProfile::set_allocated_feet(::eqproto::Tint* feet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete feet_;
  }
  if (feet) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      feet = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, feet, submessage_arena);
    }
    
  } else {
    
  }
  feet_ = feet;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Feet)
}

// .eqproto.Tint Primary = 8;
inline bool TintProfile::has_primary() const {
  return this != internal_default_instance() && primary_ != NULL;
}
inline void TintProfile::clear_primary() {
  if (GetArenaNoVirtual() == NULL && primary_ != NULL) {
    delete primary_;
  }
  primary_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::primary() const {
  const ::eqproto::Tint* p = primary_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Primary)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_primary() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Primary)
  
  ::eqproto::Tint* temp = primary_;
  primary_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_primary() {
  
  if (primary_ == NULL) {
    primary_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Primary)
  return primary_;
}
inline void TintProfile::set_allocated_primary(::eqproto::Tint* primary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete primary_;
  }
  if (primary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      primary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, primary, submessage_arena);
    }
    
  } else {
    
  }
  primary_ = primary;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Primary)
}

// .eqproto.Tint Secondary = 9;
inline bool TintProfile::has_secondary() const {
  return this != internal_default_instance() && secondary_ != NULL;
}
inline void TintProfile::clear_secondary() {
  if (GetArenaNoVirtual() == NULL && secondary_ != NULL) {
    delete secondary_;
  }
  secondary_ = NULL;
}
inline const ::eqproto::Tint& TintProfile::secondary() const {
  const ::eqproto::Tint* p = secondary_;
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Secondary)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* TintProfile::release_secondary() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Secondary)
  
  ::eqproto::Tint* temp = secondary_;
  secondary_ = NULL;
  return temp;
}
inline ::eqproto::Tint* TintProfile::mutable_secondary() {
  
  if (secondary_ == NULL) {
    secondary_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Secondary)
  return secondary_;
}
inline void TintProfile::set_allocated_secondary(::eqproto::Tint* secondary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete secondary_;
  }
  if (secondary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secondary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secondary, submessage_arena);
    }
    
  } else {
    
  }
  secondary_ = secondary;
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Secondary)
}

// -------------------------------------------------------------------

// Tint

// uint32 Blue = 1;
inline void Tint::clear_blue() {
  blue_ = 0u;
}
inline ::google::protobuf::uint32 Tint::blue() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.Blue)
  return blue_;
}
inline void Tint::set_blue(::google::protobuf::uint32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.Blue)
}

// uint32 Green = 2;
inline void Tint::clear_green() {
  green_ = 0u;
}
inline ::google::protobuf::uint32 Tint::green() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.Green)
  return green_;
}
inline void Tint::set_green(::google::protobuf::uint32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.Green)
}

// uint32 Red = 3;
inline void Tint::clear_red() {
  red_ = 0u;
}
inline ::google::protobuf::uint32 Tint::red() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.Red)
  return red_;
}
inline void Tint::set_red(::google::protobuf::uint32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.Red)
}

// uint32 UseTint = 4;
inline void Tint::clear_usetint() {
  usetint_ = 0u;
}
inline ::google::protobuf::uint32 Tint::usetint() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.UseTint)
  return usetint_;
}
inline void Tint::set_usetint(::google::protobuf::uint32 value) {
  
  usetint_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.UseTint)
}

// uint32 Color = 5;
inline void Tint::clear_color() {
  color_ = 0u;
}
inline ::google::protobuf::uint32 Tint::color() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.Color)
  return color_;
}
inline void Tint::set_color(::google::protobuf::uint32 value) {
  
  color_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.Color)
}

// -------------------------------------------------------------------

// Event

// .eqproto.OpCode op = 1;
inline void Event::clear_op() {
  op_ = 0;
}
inline ::eqproto::OpCode Event::op() const {
  // @@protoc_insertion_point(field_get:eqproto.Event.op)
  return static_cast< ::eqproto::OpCode >(op_);
}
inline void Event::set_op(::eqproto::OpCode value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Event.op)
}

// bytes payload = 2;
inline void Event::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::payload() const {
  // @@protoc_insertion_point(field_get:eqproto.Event.payload)
  return payload_.GetNoArena();
}
inline void Event::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.Event.payload)
}
#if LANG_CXX11
inline void Event::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.Event.payload)
}
#endif
inline void Event::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.Event.payload)
}
inline void Event::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.Event.payload)
}
inline ::std::string* Event::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.Event.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_payload() {
  // @@protoc_insertion_point(field_release:eqproto.Event.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:eqproto.Event.payload)
}

// -------------------------------------------------------------------

// DeathEvent

// uint32 spawn_id = 1;
inline void DeathEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
inline ::google::protobuf::uint32 DeathEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.spawn_id)
  return spawn_id_;
}
inline void DeathEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.spawn_id)
}

// uint32 killer_id = 2;
inline void DeathEvent::clear_killer_id() {
  killer_id_ = 0u;
}
inline ::google::protobuf::uint32 DeathEvent::killer_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.killer_id)
  return killer_id_;
}
inline void DeathEvent::set_killer_id(::google::protobuf::uint32 value) {
  
  killer_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.killer_id)
}

// uint32 corpse_id = 3;
inline void DeathEvent::clear_corpse_id() {
  corpse_id_ = 0u;
}
inline ::google::protobuf::uint32 DeathEvent::corpse_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.corpse_id)
  return corpse_id_;
}
inline void DeathEvent::set_corpse_id(::google::protobuf::uint32 value) {
  
  corpse_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.corpse_id)
}

// uint32 bind_zone_id = 4;
inline void DeathEvent::clear_bind_zone_id() {
  bind_zone_id_ = 0u;
}
inline ::google::protobuf::uint32 DeathEvent::bind_zone_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.bind_zone_id)
  return bind_zone_id_;
}
inline void DeathEvent::set_bind_zone_id(::google::protobuf::uint32 value) {
  
  bind_zone_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.bind_zone_id)
}

// uint32 spell_id = 5;
inline void DeathEvent::clear_spell_id() {
  spell_id_ = 0u;
}
inline ::google::protobuf::uint32 DeathEvent::spell_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.spell_id)
  return spell_id_;
}
inline void DeathEvent::set_spell_id(::google::protobuf::uint32 value) {
  
  spell_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.spell_id)
}

// uint32 attack_skill_id = 6;
inline void DeathEvent::clear_attack_skill_id() {
  attack_skill_id_ = 0u;
}
inline ::google::protobuf::uint32 DeathEvent::attack_skill_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.attack_skill_id)
  return attack_skill_id_;
}
inline void DeathEvent::set_attack_skill_id(::google::protobuf::uint32 value) {
  
  attack_skill_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.attack_skill_id)
}

// uint32 damage = 7;
inline void DeathEvent::clear_damage() {
  damage_ = 0u;
}
inline ::google::protobuf::uint32 DeathEvent::damage() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.damage)
  return damage_;
}
inline void DeathEvent::set_damage(::google::protobuf::uint32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.damage)
}

// uint32 unknown028 = 8;
inline void DeathEvent::clear_unknown028() {
  unknown028_ = 0u;
}
inline ::google::protobuf::uint32 DeathEvent::unknown028() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.unknown028)
  return unknown028_;
}
inline void DeathEvent::set_unknown028(::google::protobuf::uint32 value) {
  
  unknown028_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.unknown028)
}

// -------------------------------------------------------------------

// DamageEvent

// uint32 target = 1;
inline void DamageEvent::clear_target() {
  target_ = 0u;
}
inline ::google::protobuf::uint32 DamageEvent::target() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.target)
  return target_;
}
inline void DamageEvent::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.target)
}

// uint32 source = 2;
inline void DamageEvent::clear_source() {
  source_ = 0u;
}
inline ::google::protobuf::uint32 DamageEvent::source() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.source)
  return source_;
}
inline void DamageEvent::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.source)
}

// uint32 type = 3;
inline void DamageEvent::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 DamageEvent::type() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.type)
  return type_;
}
inline void DamageEvent::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.type)
}

// uint32 spellid = 4;
inline void DamageEvent::clear_spellid() {
  spellid_ = 0u;
}
inline ::google::protobuf::uint32 DamageEvent::spellid() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.spellid)
  return spellid_;
}
inline void DamageEvent::set_spellid(::google::protobuf::uint32 value) {
  
  spellid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.spellid)
}

// uint32 damage = 5;
inline void DamageEvent::clear_damage() {
  damage_ = 0u;
}
inline ::google::protobuf::uint32 DamageEvent::damage() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.damage)
  return damage_;
}
inline void DamageEvent::set_damage(::google::protobuf::uint32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.damage)
}

// float force = 6;
inline void DamageEvent::clear_force() {
  force_ = 0;
}
inline float DamageEvent::force() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.force)
  return force_;
}
inline void DamageEvent::set_force(float value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.force)
}

// float meleepush_xy = 7;
inline void DamageEvent::clear_meleepush_xy() {
  meleepush_xy_ = 0;
}
inline float DamageEvent::meleepush_xy() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.meleepush_xy)
  return meleepush_xy_;
}
inline void DamageEvent::set_meleepush_xy(float value) {
  
  meleepush_xy_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.meleepush_xy)
}

// float meleepush_z = 8;
inline void DamageEvent::clear_meleepush_z() {
  meleepush_z_ = 0;
}
inline float DamageEvent::meleepush_z() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.meleepush_z)
  return meleepush_z_;
}
inline void DamageEvent::set_meleepush_z(float value) {
  
  meleepush_z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.meleepush_z)
}

// -------------------------------------------------------------------

// EntityEvent

// uint32 entity_id = 1;
inline void EntityEvent::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityEvent::entity_id() const {
  // @@protoc_insertion_point(field_get:eqproto.EntityEvent.entity_id)
  return entity_id_;
}
inline void EntityEvent::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.EntityEvent.entity_id)
}

// uint32 target_id = 2;
inline void EntityEvent::clear_target_id() {
  target_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityEvent::target_id() const {
  // @@protoc_insertion_point(field_get:eqproto.EntityEvent.target_id)
  return target_id_;
}
inline void EntityEvent::set_target_id(::google::protobuf::uint32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.EntityEvent.target_id)
}

// -------------------------------------------------------------------

// ChannelMessageEvent

// string target_name = 1;
inline void ChannelMessageEvent::clear_target_name() {
  target_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChannelMessageEvent::target_name() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.target_name)
  return target_name_.GetNoArena();
}
inline void ChannelMessageEvent::set_target_name(const ::std::string& value) {
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.target_name)
}
#if LANG_CXX11
inline void ChannelMessageEvent::set_target_name(::std::string&& value) {
  
  target_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessageEvent.target_name)
}
#endif
inline void ChannelMessageEvent::set_target_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessageEvent.target_name)
}
inline void ChannelMessageEvent::set_target_name(const char* value, size_t size) {
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessageEvent.target_name)
}
inline ::std::string* ChannelMessageEvent::mutable_target_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessageEvent.target_name)
  return target_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelMessageEvent::release_target_name() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessageEvent.target_name)
  
  return target_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChannelMessageEvent::set_allocated_target_name(::std::string* target_name) {
  if (target_name != NULL) {
    
  } else {
    
  }
  target_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_name);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessageEvent.target_name)
}

// string sender = 2;
inline void ChannelMessageEvent::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChannelMessageEvent::sender() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.sender)
  return sender_.GetNoArena();
}
inline void ChannelMessageEvent::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.sender)
}
#if LANG_CXX11
inline void ChannelMessageEvent::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessageEvent.sender)
}
#endif
inline void ChannelMessageEvent::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessageEvent.sender)
}
inline void ChannelMessageEvent::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessageEvent.sender)
}
inline ::std::string* ChannelMessageEvent::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessageEvent.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelMessageEvent::release_sender() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessageEvent.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChannelMessageEvent::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessageEvent.sender)
}

// uint32 language = 3;
inline void ChannelMessageEvent::clear_language() {
  language_ = 0u;
}
inline ::google::protobuf::uint32 ChannelMessageEvent::language() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.language)
  return language_;
}
inline void ChannelMessageEvent::set_language(::google::protobuf::uint32 value) {
  
  language_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.language)
}

// uint32 chan_num = 4;
inline void ChannelMessageEvent::clear_chan_num() {
  chan_num_ = 0u;
}
inline ::google::protobuf::uint32 ChannelMessageEvent::chan_num() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.chan_num)
  return chan_num_;
}
inline void ChannelMessageEvent::set_chan_num(::google::protobuf::uint32 value) {
  
  chan_num_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.chan_num)
}

// uint32 cm_unknown4 = 5;
inline void ChannelMessageEvent::clear_cm_unknown4() {
  cm_unknown4_ = 0u;
}
inline ::google::protobuf::uint32 ChannelMessageEvent::cm_unknown4() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.cm_unknown4)
  return cm_unknown4_;
}
inline void ChannelMessageEvent::set_cm_unknown4(::google::protobuf::uint32 value) {
  
  cm_unknown4_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.cm_unknown4)
}

// uint32 skill_in_language = 6;
inline void ChannelMessageEvent::clear_skill_in_language() {
  skill_in_language_ = 0u;
}
inline ::google::protobuf::uint32 ChannelMessageEvent::skill_in_language() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.skill_in_language)
  return skill_in_language_;
}
inline void ChannelMessageEvent::set_skill_in_language(::google::protobuf::uint32 value) {
  
  skill_in_language_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.skill_in_language)
}

// string message = 7;
inline void ChannelMessageEvent::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChannelMessageEvent::message() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.message)
  return message_.GetNoArena();
}
inline void ChannelMessageEvent::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.message)
}
#if LANG_CXX11
inline void ChannelMessageEvent::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.ChannelMessageEvent.message)
}
#endif
inline void ChannelMessageEvent::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessageEvent.message)
}
inline void ChannelMessageEvent::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessageEvent.message)
}
inline ::std::string* ChannelMessageEvent::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessageEvent.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelMessageEvent::release_message() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessageEvent.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChannelMessageEvent::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessageEvent.message)
}

// -------------------------------------------------------------------

// WearChangeEvent

// uint32 spawn_id = 1;
inline void WearChangeEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
inline ::google::protobuf::uint32 WearChangeEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.spawn_id)
  return spawn_id_;
}
inline void WearChangeEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.spawn_id)
}

// uint32 material = 2;
inline void WearChangeEvent::clear_material() {
  material_ = 0u;
}
inline ::google::protobuf::uint32 WearChangeEvent::material() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.material)
  return material_;
}
inline void WearChangeEvent::set_material(::google::protobuf::uint32 value) {
  
  material_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.material)
}

// uint32 unknown06 = 3;
inline void WearChangeEvent::clear_unknown06() {
  unknown06_ = 0u;
}
inline ::google::protobuf::uint32 WearChangeEvent::unknown06() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.unknown06)
  return unknown06_;
}
inline void WearChangeEvent::set_unknown06(::google::protobuf::uint32 value) {
  
  unknown06_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.unknown06)
}

// uint32 elite_material = 4;
inline void WearChangeEvent::clear_elite_material() {
  elite_material_ = 0u;
}
inline ::google::protobuf::uint32 WearChangeEvent::elite_material() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.elite_material)
  return elite_material_;
}
inline void WearChangeEvent::set_elite_material(::google::protobuf::uint32 value) {
  
  elite_material_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.elite_material)
}

// uint32 hero_forge_model = 5;
inline void WearChangeEvent::clear_hero_forge_model() {
  hero_forge_model_ = 0u;
}
inline ::google::protobuf::uint32 WearChangeEvent::hero_forge_model() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.hero_forge_model)
  return hero_forge_model_;
}
inline void WearChangeEvent::set_hero_forge_model(::google::protobuf::uint32 value) {
  
  hero_forge_model_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.hero_forge_model)
}

// uint32 unknown18 = 6;
inline void WearChangeEvent::clear_unknown18() {
  unknown18_ = 0u;
}
inline ::google::protobuf::uint32 WearChangeEvent::unknown18() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.unknown18)
  return unknown18_;
}
inline void WearChangeEvent::set_unknown18(::google::protobuf::uint32 value) {
  
  unknown18_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.unknown18)
}

// .eqproto.Tint color = 7;
inline bool WearChangeEvent::has_color() const {
  return this != internal_default_instance() && color_ != NULL;
}
inline void WearChangeEvent::clear_color() {
  if (GetArenaNoVirtual() == NULL && color_ != NULL) {
    delete color_;
  }
  color_ = NULL;
}
inline const ::eqproto::Tint& WearChangeEvent::color() const {
  const ::eqproto::Tint* p = color_;
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.color)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::Tint*>(
      &::eqproto::_Tint_default_instance_);
}
inline ::eqproto::Tint* WearChangeEvent::release_color() {
  // @@protoc_insertion_point(field_release:eqproto.WearChangeEvent.color)
  
  ::eqproto::Tint* temp = color_;
  color_ = NULL;
  return temp;
}
inline ::eqproto::Tint* WearChangeEvent::mutable_color() {
  
  if (color_ == NULL) {
    color_ = new ::eqproto::Tint;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.WearChangeEvent.color)
  return color_;
}
inline void WearChangeEvent::set_allocated_color(::eqproto::Tint* color) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete color_;
  }
  if (color) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      color = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    
  } else {
    
  }
  color_ = color;
  // @@protoc_insertion_point(field_set_allocated:eqproto.WearChangeEvent.color)
}

// uint32 wear_slot_id = 8;
inline void WearChangeEvent::clear_wear_slot_id() {
  wear_slot_id_ = 0u;
}
inline ::google::protobuf::uint32 WearChangeEvent::wear_slot_id() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.wear_slot_id)
  return wear_slot_id_;
}
inline void WearChangeEvent::set_wear_slot_id(::google::protobuf::uint32 value) {
  
  wear_slot_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.wear_slot_id)
}

// -------------------------------------------------------------------

// DeleteSpawnEvent

// uint32 spawn_id = 1;
inline void DeleteSpawnEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
inline ::google::protobuf::uint32 DeleteSpawnEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeleteSpawnEvent.spawn_id)
  return spawn_id_;
}
inline void DeleteSpawnEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeleteSpawnEvent.spawn_id)
}

// uint32 decay = 2;
inline void DeleteSpawnEvent::clear_decay() {
  decay_ = 0u;
}
inline ::google::protobuf::uint32 DeleteSpawnEvent::decay() const {
  // @@protoc_insertion_point(field_get:eqproto.DeleteSpawnEvent.decay)
  return decay_;
}
inline void DeleteSpawnEvent::set_decay(::google::protobuf::uint32 value) {
  
  decay_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeleteSpawnEvent.decay)
}

// -------------------------------------------------------------------

// HPEvent

// uint32 spawn_id = 1;
inline void HPEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
inline ::google::protobuf::uint32 HPEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.HPEvent.spawn_id)
  return spawn_id_;
}
inline void HPEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.HPEvent.spawn_id)
}

// uint32 cur_hp = 2;
inline void HPEvent::clear_cur_hp() {
  cur_hp_ = 0u;
}
inline ::google::protobuf::uint32 HPEvent::cur_hp() const {
  // @@protoc_insertion_point(field_get:eqproto.HPEvent.cur_hp)
  return cur_hp_;
}
inline void HPEvent::set_cur_hp(::google::protobuf::uint32 value) {
  
  cur_hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.HPEvent.cur_hp)
}

// uint32 max_hp = 3;
inline void HPEvent::clear_max_hp() {
  max_hp_ = 0u;
}
inline ::google::protobuf::uint32 HPEvent::max_hp() const {
  // @@protoc_insertion_point(field_get:eqproto.HPEvent.max_hp)
  return max_hp_;
}
inline void HPEvent::set_max_hp(::google::protobuf::uint32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.HPEvent.max_hp)
}

// -------------------------------------------------------------------

// PlayerPositionUpdateEvent

// uint32 spawn_id = 1;
inline void PlayerPositionUpdateEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerPositionUpdateEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.spawn_id)
  return spawn_id_;
}
inline void PlayerPositionUpdateEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.spawn_id)
}

// int32 delta_heading = 2;
inline void PlayerPositionUpdateEvent::clear_delta_heading() {
  delta_heading_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::delta_heading() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.delta_heading)
  return delta_heading_;
}
inline void PlayerPositionUpdateEvent::set_delta_heading(::google::protobuf::int32 value) {
  
  delta_heading_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.delta_heading)
}

// int32 x_pos = 3;
inline void PlayerPositionUpdateEvent::clear_x_pos() {
  x_pos_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::x_pos() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.x_pos)
  return x_pos_;
}
inline void PlayerPositionUpdateEvent::set_x_pos(::google::protobuf::int32 value) {
  
  x_pos_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.x_pos)
}

// int32 padding0002 = 4;
inline void PlayerPositionUpdateEvent::clear_padding0002() {
  padding0002_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::padding0002() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.padding0002)
  return padding0002_;
}
inline void PlayerPositionUpdateEvent::set_padding0002(::google::protobuf::int32 value) {
  
  padding0002_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.padding0002)
}

// int32 y_pos = 5;
inline void PlayerPositionUpdateEvent::clear_y_pos() {
  y_pos_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::y_pos() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.y_pos)
  return y_pos_;
}
inline void PlayerPositionUpdateEvent::set_y_pos(::google::protobuf::int32 value) {
  
  y_pos_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.y_pos)
}

// int32 animation = 6;
inline void PlayerPositionUpdateEvent::clear_animation() {
  animation_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::animation() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.animation)
  return animation_;
}
inline void PlayerPositionUpdateEvent::set_animation(::google::protobuf::int32 value) {
  
  animation_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.animation)
}

// int32 padding0006 = 7;
inline void PlayerPositionUpdateEvent::clear_padding0006() {
  padding0006_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::padding0006() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.padding0006)
  return padding0006_;
}
inline void PlayerPositionUpdateEvent::set_padding0006(::google::protobuf::int32 value) {
  
  padding0006_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.padding0006)
}

// int32 z_pos = 8;
inline void PlayerPositionUpdateEvent::clear_z_pos() {
  z_pos_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::z_pos() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.z_pos)
  return z_pos_;
}
inline void PlayerPositionUpdateEvent::set_z_pos(::google::protobuf::int32 value) {
  
  z_pos_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.z_pos)
}

// int32 delta_y = 9;
inline void PlayerPositionUpdateEvent::clear_delta_y() {
  delta_y_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::delta_y() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.delta_y)
  return delta_y_;
}
inline void PlayerPositionUpdateEvent::set_delta_y(::google::protobuf::int32 value) {
  
  delta_y_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.delta_y)
}

// int32 delta_x = 10;
inline void PlayerPositionUpdateEvent::clear_delta_x() {
  delta_x_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::delta_x() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.delta_x)
  return delta_x_;
}
inline void PlayerPositionUpdateEvent::set_delta_x(::google::protobuf::int32 value) {
  
  delta_x_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.delta_x)
}

// int32 heading = 11;
inline void PlayerPositionUpdateEvent::clear_heading() {
  heading_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::heading() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.heading)
  return heading_;
}
inline void PlayerPositionUpdateEvent::set_heading(::google::protobuf::int32 value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.heading)
}

// int32 padding0014 = 12;
inline void PlayerPositionUpdateEvent::clear_padding0014() {
  padding0014_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::padding0014() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.padding0014)
  return padding0014_;
}
inline void PlayerPositionUpdateEvent::set_padding0014(::google::protobuf::int32 value) {
  
  padding0014_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.padding0014)
}

// int32 delta_z = 13;
inline void PlayerPositionUpdateEvent::clear_delta_z() {
  delta_z_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::delta_z() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.delta_z)
  return delta_z_;
}
inline void PlayerPositionUpdateEvent::set_delta_z(::google::protobuf::int32 value) {
  
  delta_z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.delta_z)
}

// int32 padding0018 = 14;
inline void PlayerPositionUpdateEvent::clear_padding0018() {
  padding0018_ = 0;
}
inline ::google::protobuf::int32 PlayerPositionUpdateEvent::padding0018() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.padding0018)
  return padding0018_;
}
inline void PlayerPositionUpdateEvent::set_padding0018(::google::protobuf::int32 value) {
  
  padding0018_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.padding0018)
}

// -------------------------------------------------------------------

// AnimationEvent

// uint32 spawnid = 1;
inline void AnimationEvent::clear_spawnid() {
  spawnid_ = 0u;
}
inline ::google::protobuf::uint32 AnimationEvent::spawnid() const {
  // @@protoc_insertion_point(field_get:eqproto.AnimationEvent.spawnid)
  return spawnid_;
}
inline void AnimationEvent::set_spawnid(::google::protobuf::uint32 value) {
  
  spawnid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AnimationEvent.spawnid)
}

// uint32 speed = 2;
inline void AnimationEvent::clear_speed() {
  speed_ = 0u;
}
inline ::google::protobuf::uint32 AnimationEvent::speed() const {
  // @@protoc_insertion_point(field_get:eqproto.AnimationEvent.speed)
  return speed_;
}
inline void AnimationEvent::set_speed(::google::protobuf::uint32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AnimationEvent.speed)
}

// uint32 action = 3;
inline void AnimationEvent::clear_action() {
  action_ = 0u;
}
inline ::google::protobuf::uint32 AnimationEvent::action() const {
  // @@protoc_insertion_point(field_get:eqproto.AnimationEvent.action)
  return action_;
}
inline void AnimationEvent::set_action(::google::protobuf::uint32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AnimationEvent.action)
}

// -------------------------------------------------------------------

// SpawnEvent

// uint32 unknown0000 = 1;
inline void SpawnEvent::clear_unknown0000() {
  unknown0000_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0000() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0000)
  return unknown0000_;
}
inline void SpawnEvent::set_unknown0000(::google::protobuf::uint32 value) {
  
  unknown0000_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0000)
}

// uint32 gm = 2;
inline void SpawnEvent::clear_gm() {
  gm_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::gm() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.gm)
  return gm_;
}
inline void SpawnEvent::set_gm(::google::protobuf::uint32 value) {
  
  gm_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.gm)
}

// uint32 unknown0003 = 3;
inline void SpawnEvent::clear_unknown0003() {
  unknown0003_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0003() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0003)
  return unknown0003_;
}
inline void SpawnEvent::set_unknown0003(::google::protobuf::uint32 value) {
  
  unknown0003_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0003)
}

// uint32 aaitle = 4;
inline void SpawnEvent::clear_aaitle() {
  aaitle_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::aaitle() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.aaitle)
  return aaitle_;
}
inline void SpawnEvent::set_aaitle(::google::protobuf::uint32 value) {
  
  aaitle_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.aaitle)
}

// uint32 unknown0004 = 5;
inline void SpawnEvent::clear_unknown0004() {
  unknown0004_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0004() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0004)
  return unknown0004_;
}
inline void SpawnEvent::set_unknown0004(::google::protobuf::uint32 value) {
  
  unknown0004_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0004)
}

// uint32 anon = 6;
inline void SpawnEvent::clear_anon() {
  anon_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::anon() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.anon)
  return anon_;
}
inline void SpawnEvent::set_anon(::google::protobuf::uint32 value) {
  
  anon_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.anon)
}

// uint32 face = 7;
inline void SpawnEvent::clear_face() {
  face_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::face() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.face)
  return face_;
}
inline void SpawnEvent::set_face(::google::protobuf::uint32 value) {
  
  face_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.face)
}

// string name = 8;
inline void SpawnEvent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpawnEvent::name() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.name)
  return name_.GetNoArena();
}
inline void SpawnEvent::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.name)
}
#if LANG_CXX11
inline void SpawnEvent::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.SpawnEvent.name)
}
#endif
inline void SpawnEvent::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.name)
}
inline void SpawnEvent::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.name)
}
inline ::std::string* SpawnEvent::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpawnEvent::release_name() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpawnEvent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.name)
}

// uint32 deity = 9;
inline void SpawnEvent::clear_deity() {
  deity_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::deity() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deity)
  return deity_;
}
inline void SpawnEvent::set_deity(::google::protobuf::uint32 value) {
  
  deity_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deity)
}

// uint32 unknown0073 = 10;
inline void SpawnEvent::clear_unknown0073() {
  unknown0073_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0073() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0073)
  return unknown0073_;
}
inline void SpawnEvent::set_unknown0073(::google::protobuf::uint32 value) {
  
  unknown0073_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0073)
}

// float size = 11;
inline void SpawnEvent::clear_size() {
  size_ = 0;
}
inline float SpawnEvent::size() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.size)
  return size_;
}
inline void SpawnEvent::set_size(float value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.size)
}

// uint32 unknown0079 = 12;
inline void SpawnEvent::clear_unknown0079() {
  unknown0079_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0079() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0079)
  return unknown0079_;
}
inline void SpawnEvent::set_unknown0079(::google::protobuf::uint32 value) {
  
  unknown0079_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0079)
}

// uint32 NPC = 13;
inline void SpawnEvent::clear_npc() {
  npc_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::npc() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.NPC)
  return npc_;
}
inline void SpawnEvent::set_npc(::google::protobuf::uint32 value) {
  
  npc_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.NPC)
}

// uint32 invis = 14;
inline void SpawnEvent::clear_invis() {
  invis_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::invis() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.invis)
  return invis_;
}
inline void SpawnEvent::set_invis(::google::protobuf::uint32 value) {
  
  invis_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.invis)
}

// uint32 haircolor = 15;
inline void SpawnEvent::clear_haircolor() {
  haircolor_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::haircolor() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.haircolor)
  return haircolor_;
}
inline void SpawnEvent::set_haircolor(::google::protobuf::uint32 value) {
  
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.haircolor)
}

// uint32 curHp = 16;
inline void SpawnEvent::clear_curhp() {
  curhp_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::curhp() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.curHp)
  return curhp_;
}
inline void SpawnEvent::set_curhp(::google::protobuf::uint32 value) {
  
  curhp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.curHp)
}

// uint32 max_hp = 17;
inline void SpawnEvent::clear_max_hp() {
  max_hp_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::max_hp() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.max_hp)
  return max_hp_;
}
inline void SpawnEvent::set_max_hp(::google::protobuf::uint32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.max_hp)
}

// uint32 findable = 18;
inline void SpawnEvent::clear_findable() {
  findable_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::findable() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.findable)
  return findable_;
}
inline void SpawnEvent::set_findable(::google::protobuf::uint32 value) {
  
  findable_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.findable)
}

// uint32 unknown0089 = 19;
inline void SpawnEvent::clear_unknown0089() {
  unknown0089_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0089() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0089)
  return unknown0089_;
}
inline void SpawnEvent::set_unknown0089(::google::protobuf::uint32 value) {
  
  unknown0089_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0089)
}

// int32 deltaHeading = 20;
inline void SpawnEvent::clear_deltaheading() {
  deltaheading_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::deltaheading() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deltaHeading)
  return deltaheading_;
}
inline void SpawnEvent::set_deltaheading(::google::protobuf::int32 value) {
  
  deltaheading_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deltaHeading)
}

// int32 x = 21;
inline void SpawnEvent::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::x() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.x)
  return x_;
}
inline void SpawnEvent::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.x)
}

// int32 padding0054 = 22;
inline void SpawnEvent::clear_padding0054() {
  padding0054_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::padding0054() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.padding0054)
  return padding0054_;
}
inline void SpawnEvent::set_padding0054(::google::protobuf::int32 value) {
  
  padding0054_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.padding0054)
}

// int32 y = 23;
inline void SpawnEvent::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::y() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.y)
  return y_;
}
inline void SpawnEvent::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.y)
}

// int32 animation = 24;
inline void SpawnEvent::clear_animation() {
  animation_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::animation() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.animation)
  return animation_;
}
inline void SpawnEvent::set_animation(::google::protobuf::int32 value) {
  
  animation_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.animation)
}

// int32 padding0058 = 25;
inline void SpawnEvent::clear_padding0058() {
  padding0058_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::padding0058() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.padding0058)
  return padding0058_;
}
inline void SpawnEvent::set_padding0058(::google::protobuf::int32 value) {
  
  padding0058_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.padding0058)
}

// int32 z = 26;
inline void SpawnEvent::clear_z() {
  z_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::z() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.z)
  return z_;
}
inline void SpawnEvent::set_z(::google::protobuf::int32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.z)
}

// int32 deltaY = 27;
inline void SpawnEvent::clear_deltay() {
  deltay_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::deltay() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deltaY)
  return deltay_;
}
inline void SpawnEvent::set_deltay(::google::protobuf::int32 value) {
  
  deltay_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deltaY)
}

// int32 deltaX = 28;
inline void SpawnEvent::clear_deltax() {
  deltax_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::deltax() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deltaX)
  return deltax_;
}
inline void SpawnEvent::set_deltax(::google::protobuf::int32 value) {
  
  deltax_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deltaX)
}

// uint32 heading = 29;
inline void SpawnEvent::clear_heading() {
  heading_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::heading() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.heading)
  return heading_;
}
inline void SpawnEvent::set_heading(::google::protobuf::uint32 value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.heading)
}

// int32 padding0066 = 30;
inline void SpawnEvent::clear_padding0066() {
  padding0066_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::padding0066() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.padding0066)
  return padding0066_;
}
inline void SpawnEvent::set_padding0066(::google::protobuf::int32 value) {
  
  padding0066_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.padding0066)
}

// int32 deltaZ = 31;
inline void SpawnEvent::clear_deltaz() {
  deltaz_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::deltaz() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deltaZ)
  return deltaz_;
}
inline void SpawnEvent::set_deltaz(::google::protobuf::int32 value) {
  
  deltaz_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deltaZ)
}

// int32 padding0070 = 32;
inline void SpawnEvent::clear_padding0070() {
  padding0070_ = 0;
}
inline ::google::protobuf::int32 SpawnEvent::padding0070() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.padding0070)
  return padding0070_;
}
inline void SpawnEvent::set_padding0070(::google::protobuf::int32 value) {
  
  padding0070_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.padding0070)
}

// uint32 eyecolor1 = 33;
inline void SpawnEvent::clear_eyecolor1() {
  eyecolor1_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::eyecolor1() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.eyecolor1)
  return eyecolor1_;
}
inline void SpawnEvent::set_eyecolor1(::google::protobuf::uint32 value) {
  
  eyecolor1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.eyecolor1)
}

// uint32 unknown0115 = 34;
inline void SpawnEvent::clear_unknown0115() {
  unknown0115_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0115() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0115)
  return unknown0115_;
}
inline void SpawnEvent::set_unknown0115(::google::protobuf::uint32 value) {
  
  unknown0115_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0115)
}

// uint32 StandState = 35;
inline void SpawnEvent::clear_standstate() {
  standstate_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::standstate() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.StandState)
  return standstate_;
}
inline void SpawnEvent::set_standstate(::google::protobuf::uint32 value) {
  
  standstate_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.StandState)
}

// uint32 drakkin_heritage = 36;
inline void SpawnEvent::clear_drakkin_heritage() {
  drakkin_heritage_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::drakkin_heritage() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.drakkin_heritage)
  return drakkin_heritage_;
}
inline void SpawnEvent::set_drakkin_heritage(::google::protobuf::uint32 value) {
  
  drakkin_heritage_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.drakkin_heritage)
}

// uint32 drakkin_tattoo = 37;
inline void SpawnEvent::clear_drakkin_tattoo() {
  drakkin_tattoo_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::drakkin_tattoo() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.drakkin_tattoo)
  return drakkin_tattoo_;
}
inline void SpawnEvent::set_drakkin_tattoo(::google::protobuf::uint32 value) {
  
  drakkin_tattoo_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.drakkin_tattoo)
}

// uint32 drakkin_details = 38;
inline void SpawnEvent::clear_drakkin_details() {
  drakkin_details_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::drakkin_details() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.drakkin_details)
  return drakkin_details_;
}
inline void SpawnEvent::set_drakkin_details(::google::protobuf::uint32 value) {
  
  drakkin_details_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.drakkin_details)
}

// uint32 showhelm = 39;
inline void SpawnEvent::clear_showhelm() {
  showhelm_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::showhelm() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.showhelm)
  return showhelm_;
}
inline void SpawnEvent::set_showhelm(::google::protobuf::uint32 value) {
  
  showhelm_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.showhelm)
}

// uint32 unknown0140 = 40;
inline void SpawnEvent::clear_unknown0140() {
  unknown0140_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0140() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0140)
  return unknown0140_;
}
inline void SpawnEvent::set_unknown0140(::google::protobuf::uint32 value) {
  
  unknown0140_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0140)
}

// uint32 is_npc = 41;
inline void SpawnEvent::clear_is_npc() {
  is_npc_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::is_npc() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.is_npc)
  return is_npc_;
}
inline void SpawnEvent::set_is_npc(::google::protobuf::uint32 value) {
  
  is_npc_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.is_npc)
}

// uint32 hairstyle = 42;
inline void SpawnEvent::clear_hairstyle() {
  hairstyle_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::hairstyle() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.hairstyle)
  return hairstyle_;
}
inline void SpawnEvent::set_hairstyle(::google::protobuf::uint32 value) {
  
  hairstyle_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.hairstyle)
}

// uint32 beard = 43;
inline void SpawnEvent::clear_beard() {
  beard_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::beard() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.beard)
  return beard_;
}
inline void SpawnEvent::set_beard(::google::protobuf::uint32 value) {
  
  beard_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.beard)
}

// uint32 unknown0147 = 44;
inline void SpawnEvent::clear_unknown0147() {
  unknown0147_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0147() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0147)
  return unknown0147_;
}
inline void SpawnEvent::set_unknown0147(::google::protobuf::uint32 value) {
  
  unknown0147_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0147)
}

// uint32 level = 45;
inline void SpawnEvent::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::level() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.level)
  return level_;
}
inline void SpawnEvent::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.level)
}

// uint32 PlayerState = 46;
inline void SpawnEvent::clear_playerstate() {
  playerstate_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::playerstate() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.PlayerState)
  return playerstate_;
}
inline void SpawnEvent::set_playerstate(::google::protobuf::uint32 value) {
  
  playerstate_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.PlayerState)
}

// uint32 beardcolor = 47;
inline void SpawnEvent::clear_beardcolor() {
  beardcolor_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::beardcolor() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.beardcolor)
  return beardcolor_;
}
inline void SpawnEvent::set_beardcolor(::google::protobuf::uint32 value) {
  
  beardcolor_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.beardcolor)
}

// string suffix = 48;
inline void SpawnEvent::clear_suffix() {
  suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpawnEvent::suffix() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.suffix)
  return suffix_.GetNoArena();
}
inline void SpawnEvent::set_suffix(const ::std::string& value) {
  
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.suffix)
}
#if LANG_CXX11
inline void SpawnEvent::set_suffix(::std::string&& value) {
  
  suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.SpawnEvent.suffix)
}
#endif
inline void SpawnEvent::set_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.suffix)
}
inline void SpawnEvent::set_suffix(const char* value, size_t size) {
  
  suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.suffix)
}
inline ::std::string* SpawnEvent::mutable_suffix() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.suffix)
  return suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpawnEvent::release_suffix() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.suffix)
  
  return suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpawnEvent::set_allocated_suffix(::std::string* suffix) {
  if (suffix != NULL) {
    
  } else {
    
  }
  suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suffix);
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.suffix)
}

// uint32 petOwnerId = 49;
inline void SpawnEvent::clear_petownerid() {
  petownerid_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::petownerid() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.petOwnerId)
  return petownerid_;
}
inline void SpawnEvent::set_petownerid(::google::protobuf::uint32 value) {
  
  petownerid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.petOwnerId)
}

// uint32 guildrank = 50;
inline void SpawnEvent::clear_guildrank() {
  guildrank_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::guildrank() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.guildrank)
  return guildrank_;
}
inline void SpawnEvent::set_guildrank(::google::protobuf::uint32 value) {
  
  guildrank_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.guildrank)
}

// uint32 unknown0194 = 51;
inline void SpawnEvent::clear_unknown0194() {
  unknown0194_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0194() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0194)
  return unknown0194_;
}
inline void SpawnEvent::set_unknown0194(::google::protobuf::uint32 value) {
  
  unknown0194_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0194)
}

// .eqproto.TextureProfile equipment = 52;
inline bool SpawnEvent::has_equipment() const {
  return this != internal_default_instance() && equipment_ != NULL;
}
inline void SpawnEvent::clear_equipment() {
  if (GetArenaNoVirtual() == NULL && equipment_ != NULL) {
    delete equipment_;
  }
  equipment_ = NULL;
}
inline const ::eqproto::TextureProfile& SpawnEvent::equipment() const {
  const ::eqproto::TextureProfile* p = equipment_;
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.equipment)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::TextureProfile*>(
      &::eqproto::_TextureProfile_default_instance_);
}
inline ::eqproto::TextureProfile* SpawnEvent::release_equipment() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.equipment)
  
  ::eqproto::TextureProfile* temp = equipment_;
  equipment_ = NULL;
  return temp;
}
inline ::eqproto::TextureProfile* SpawnEvent::mutable_equipment() {
  
  if (equipment_ == NULL) {
    equipment_ = new ::eqproto::TextureProfile;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.equipment)
  return equipment_;
}
inline void SpawnEvent::set_allocated_equipment(::eqproto::TextureProfile* equipment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete equipment_;
  }
  if (equipment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      equipment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, equipment, submessage_arena);
    }
    
  } else {
    
  }
  equipment_ = equipment;
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.equipment)
}

// float runspeed = 53;
inline void SpawnEvent::clear_runspeed() {
  runspeed_ = 0;
}
inline float SpawnEvent::runspeed() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.runspeed)
  return runspeed_;
}
inline void SpawnEvent::set_runspeed(float value) {
  
  runspeed_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.runspeed)
}

// uint32 afk = 54;
inline void SpawnEvent::clear_afk() {
  afk_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::afk() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.afk)
  return afk_;
}
inline void SpawnEvent::set_afk(::google::protobuf::uint32 value) {
  
  afk_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.afk)
}

// uint32 guildID = 55;
inline void SpawnEvent::clear_guildid() {
  guildid_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::guildid() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.guildID)
  return guildid_;
}
inline void SpawnEvent::set_guildid(::google::protobuf::uint32 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.guildID)
}

// string title = 56;
inline void SpawnEvent::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpawnEvent::title() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.title)
  return title_.GetNoArena();
}
inline void SpawnEvent::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.title)
}
#if LANG_CXX11
inline void SpawnEvent::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.SpawnEvent.title)
}
#endif
inline void SpawnEvent::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.title)
}
inline void SpawnEvent::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.title)
}
inline ::std::string* SpawnEvent::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpawnEvent::release_title() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpawnEvent::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.title)
}

// uint32 unknown0274 = 57;
inline void SpawnEvent::clear_unknown0274() {
  unknown0274_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0274() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0274)
  return unknown0274_;
}
inline void SpawnEvent::set_unknown0274(::google::protobuf::uint32 value) {
  
  unknown0274_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0274)
}

// uint32 set_to_0xFF = 58;
inline void SpawnEvent::clear_set_to_0xff() {
  set_to_0xff_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::set_to_0xff() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.set_to_0xFF)
  return set_to_0xff_;
}
inline void SpawnEvent::set_set_to_0xff(::google::protobuf::uint32 value) {
  
  set_to_0xff_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.set_to_0xFF)
}

// uint32 helm = 59;
inline void SpawnEvent::clear_helm() {
  helm_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::helm() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.helm)
  return helm_;
}
inline void SpawnEvent::set_helm(::google::protobuf::uint32 value) {
  
  helm_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.helm)
}

// uint32 race = 60;
inline void SpawnEvent::clear_race() {
  race_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::race() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.race)
  return race_;
}
inline void SpawnEvent::set_race(::google::protobuf::uint32 value) {
  
  race_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.race)
}

// uint32 unknown0288 = 61;
inline void SpawnEvent::clear_unknown0288() {
  unknown0288_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0288() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0288)
  return unknown0288_;
}
inline void SpawnEvent::set_unknown0288(::google::protobuf::uint32 value) {
  
  unknown0288_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0288)
}

// string lastName = 62;
inline void SpawnEvent::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpawnEvent::lastname() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.lastName)
  return lastname_.GetNoArena();
}
inline void SpawnEvent::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.lastName)
}
#if LANG_CXX11
inline void SpawnEvent::set_lastname(::std::string&& value) {
  
  lastname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.SpawnEvent.lastName)
}
#endif
inline void SpawnEvent::set_lastname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.lastName)
}
inline void SpawnEvent::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.lastName)
}
inline ::std::string* SpawnEvent::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.lastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpawnEvent::release_lastname() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.lastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpawnEvent::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.lastName)
}

// float walkspeed = 63;
inline void SpawnEvent::clear_walkspeed() {
  walkspeed_ = 0;
}
inline float SpawnEvent::walkspeed() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.walkspeed)
  return walkspeed_;
}
inline void SpawnEvent::set_walkspeed(float value) {
  
  walkspeed_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.walkspeed)
}

// uint32 unknown0328 = 64;
inline void SpawnEvent::clear_unknown0328() {
  unknown0328_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0328() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0328)
  return unknown0328_;
}
inline void SpawnEvent::set_unknown0328(::google::protobuf::uint32 value) {
  
  unknown0328_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0328)
}

// uint32 is_pet = 65;
inline void SpawnEvent::clear_is_pet() {
  is_pet_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::is_pet() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.is_pet)
  return is_pet_;
}
inline void SpawnEvent::set_is_pet(::google::protobuf::uint32 value) {
  
  is_pet_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.is_pet)
}

// uint32 light = 66;
inline void SpawnEvent::clear_light() {
  light_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::light() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.light)
  return light_;
}
inline void SpawnEvent::set_light(::google::protobuf::uint32 value) {
  
  light_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.light)
}

// uint32 class_ = 67;
inline void SpawnEvent::clear_class_() {
  class__ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::class_() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.class_)
  return class__;
}
inline void SpawnEvent::set_class_(::google::protobuf::uint32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.class_)
}

// uint32 eyecolor2 = 68;
inline void SpawnEvent::clear_eyecolor2() {
  eyecolor2_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::eyecolor2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.eyecolor2)
  return eyecolor2_;
}
inline void SpawnEvent::set_eyecolor2(::google::protobuf::uint32 value) {
  
  eyecolor2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.eyecolor2)
}

// uint32 flymode = 69;
inline void SpawnEvent::clear_flymode() {
  flymode_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::flymode() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.flymode)
  return flymode_;
}
inline void SpawnEvent::set_flymode(::google::protobuf::uint32 value) {
  
  flymode_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.flymode)
}

// uint32 gender = 70;
inline void SpawnEvent::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::gender() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.gender)
  return gender_;
}
inline void SpawnEvent::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.gender)
}

// uint32 bodytype = 71;
inline void SpawnEvent::clear_bodytype() {
  bodytype_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::bodytype() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.bodytype)
  return bodytype_;
}
inline void SpawnEvent::set_bodytype(::google::protobuf::uint32 value) {
  
  bodytype_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.bodytype)
}

// uint32 unknown0336 = 72;
inline void SpawnEvent::clear_unknown0336() {
  unknown0336_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0336() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0336)
  return unknown0336_;
}
inline void SpawnEvent::set_unknown0336(::google::protobuf::uint32 value) {
  
  unknown0336_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0336)
}

// uint32 equip_chest2 = 73;
inline void SpawnEvent::clear_equip_chest2() {
  equip_chest2_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::equip_chest2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.equip_chest2)
  return equip_chest2_;
}
inline void SpawnEvent::set_equip_chest2(::google::protobuf::uint32 value) {
  
  equip_chest2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.equip_chest2)
}

// uint32 mount_color = 74;
inline void SpawnEvent::clear_mount_color() {
  mount_color_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::mount_color() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.mount_color)
  return mount_color_;
}
inline void SpawnEvent::set_mount_color(::google::protobuf::uint32 value) {
  
  mount_color_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.mount_color)
}

// uint32 spawnId = 75;
inline void SpawnEvent::clear_spawnid() {
  spawnid_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::spawnid() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.spawnId)
  return spawnid_;
}
inline void SpawnEvent::set_spawnid(::google::protobuf::uint32 value) {
  
  spawnid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.spawnId)
}

// uint32 unknown0344 = 76;
inline void SpawnEvent::clear_unknown0344() {
  unknown0344_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::unknown0344() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0344)
  return unknown0344_;
}
inline void SpawnEvent::set_unknown0344(::google::protobuf::uint32 value) {
  
  unknown0344_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0344)
}

// uint32 IsMercenary = 77;
inline void SpawnEvent::clear_ismercenary() {
  ismercenary_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::ismercenary() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.IsMercenary)
  return ismercenary_;
}
inline void SpawnEvent::set_ismercenary(::google::protobuf::uint32 value) {
  
  ismercenary_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.IsMercenary)
}

// .eqproto.TintProfile equipment_tint = 78;
inline bool SpawnEvent::has_equipment_tint() const {
  return this != internal_default_instance() && equipment_tint_ != NULL;
}
inline void SpawnEvent::clear_equipment_tint() {
  if (GetArenaNoVirtual() == NULL && equipment_tint_ != NULL) {
    delete equipment_tint_;
  }
  equipment_tint_ = NULL;
}
inline const ::eqproto::TintProfile& SpawnEvent::equipment_tint() const {
  const ::eqproto::TintProfile* p = equipment_tint_;
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.equipment_tint)
  return p != NULL ? *p : *reinterpret_cast<const ::eqproto::TintProfile*>(
      &::eqproto::_TintProfile_default_instance_);
}
inline ::eqproto::TintProfile* SpawnEvent::release_equipment_tint() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.equipment_tint)
  
  ::eqproto::TintProfile* temp = equipment_tint_;
  equipment_tint_ = NULL;
  return temp;
}
inline ::eqproto::TintProfile* SpawnEvent::mutable_equipment_tint() {
  
  if (equipment_tint_ == NULL) {
    equipment_tint_ = new ::eqproto::TintProfile;
  }
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.equipment_tint)
  return equipment_tint_;
}
inline void SpawnEvent::set_allocated_equipment_tint(::eqproto::TintProfile* equipment_tint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete equipment_tint_;
  }
  if (equipment_tint) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      equipment_tint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, equipment_tint, submessage_arena);
    }
    
  } else {
    
  }
  equipment_tint_ = equipment_tint;
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.equipment_tint)
}

// uint32 lfg = 79;
inline void SpawnEvent::clear_lfg() {
  lfg_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::lfg() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.lfg)
  return lfg_;
}
inline void SpawnEvent::set_lfg(::google::protobuf::uint32 value) {
  
  lfg_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.lfg)
}

// bool DestructibleObject = 80;
inline void SpawnEvent::clear_destructibleobject() {
  destructibleobject_ = false;
}
inline bool SpawnEvent::destructibleobject() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleObject)
  return destructibleobject_;
}
inline void SpawnEvent::set_destructibleobject(bool value) {
  
  destructibleobject_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleObject)
}

// string DestructibleModel = 82;
inline void SpawnEvent::clear_destructiblemodel() {
  destructiblemodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpawnEvent::destructiblemodel() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleModel)
  return destructiblemodel_.GetNoArena();
}
inline void SpawnEvent::set_destructiblemodel(const ::std::string& value) {
  
  destructiblemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleModel)
}
#if LANG_CXX11
inline void SpawnEvent::set_destructiblemodel(::std::string&& value) {
  
  destructiblemodel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.SpawnEvent.DestructibleModel)
}
#endif
inline void SpawnEvent::set_destructiblemodel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  destructiblemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.DestructibleModel)
}
inline void SpawnEvent::set_destructiblemodel(const char* value, size_t size) {
  
  destructiblemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.DestructibleModel)
}
inline ::std::string* SpawnEvent::mutable_destructiblemodel() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.DestructibleModel)
  return destructiblemodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpawnEvent::release_destructiblemodel() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.DestructibleModel)
  
  return destructiblemodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpawnEvent::set_allocated_destructiblemodel(::std::string* destructiblemodel) {
  if (destructiblemodel != NULL) {
    
  } else {
    
  }
  destructiblemodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destructiblemodel);
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.DestructibleModel)
}

// string DestructibleName2 = 83;
inline void SpawnEvent::clear_destructiblename2() {
  destructiblename2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpawnEvent::destructiblename2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleName2)
  return destructiblename2_.GetNoArena();
}
inline void SpawnEvent::set_destructiblename2(const ::std::string& value) {
  
  destructiblename2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleName2)
}
#if LANG_CXX11
inline void SpawnEvent::set_destructiblename2(::std::string&& value) {
  
  destructiblename2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.SpawnEvent.DestructibleName2)
}
#endif
inline void SpawnEvent::set_destructiblename2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  destructiblename2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.DestructibleName2)
}
inline void SpawnEvent::set_destructiblename2(const char* value, size_t size) {
  
  destructiblename2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.DestructibleName2)
}
inline ::std::string* SpawnEvent::mutable_destructiblename2() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.DestructibleName2)
  return destructiblename2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpawnEvent::release_destructiblename2() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.DestructibleName2)
  
  return destructiblename2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpawnEvent::set_allocated_destructiblename2(::std::string* destructiblename2) {
  if (destructiblename2 != NULL) {
    
  } else {
    
  }
  destructiblename2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destructiblename2);
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.DestructibleName2)
}

// string DestructibleString = 84;
inline void SpawnEvent::clear_destructiblestring() {
  destructiblestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SpawnEvent::destructiblestring() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleString)
  return destructiblestring_.GetNoArena();
}
inline void SpawnEvent::set_destructiblestring(const ::std::string& value) {
  
  destructiblestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleString)
}
#if LANG_CXX11
inline void SpawnEvent::set_destructiblestring(::std::string&& value) {
  
  destructiblestring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eqproto.SpawnEvent.DestructibleString)
}
#endif
inline void SpawnEvent::set_destructiblestring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  destructiblestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.DestructibleString)
}
inline void SpawnEvent::set_destructiblestring(const char* value, size_t size) {
  
  destructiblestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.DestructibleString)
}
inline ::std::string* SpawnEvent::mutable_destructiblestring() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.DestructibleString)
  return destructiblestring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SpawnEvent::release_destructiblestring() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.DestructibleString)
  
  return destructiblestring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SpawnEvent::set_allocated_destructiblestring(::std::string* destructiblestring) {
  if (destructiblestring != NULL) {
    
  } else {
    
  }
  destructiblestring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destructiblestring);
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.DestructibleString)
}

// uint32 DestructibleAppearance = 85;
inline void SpawnEvent::clear_destructibleappearance() {
  destructibleappearance_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleappearance() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleAppearance)
  return destructibleappearance_;
}
inline void SpawnEvent::set_destructibleappearance(::google::protobuf::uint32 value) {
  
  destructibleappearance_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleAppearance)
}

// uint32 DestructibleUnk1 = 86;
inline void SpawnEvent::clear_destructibleunk1() {
  destructibleunk1_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk1() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk1)
  return destructibleunk1_;
}
inline void SpawnEvent::set_destructibleunk1(::google::protobuf::uint32 value) {
  
  destructibleunk1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk1)
}

// uint32 DestructibleID1 = 87;
inline void SpawnEvent::clear_destructibleid1() {
  destructibleid1_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleid1() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleID1)
  return destructibleid1_;
}
inline void SpawnEvent::set_destructibleid1(::google::protobuf::uint32 value) {
  
  destructibleid1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleID1)
}

// uint32 DestructibleID2 = 88;
inline void SpawnEvent::clear_destructibleid2() {
  destructibleid2_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleid2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleID2)
  return destructibleid2_;
}
inline void SpawnEvent::set_destructibleid2(::google::protobuf::uint32 value) {
  
  destructibleid2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleID2)
}

// uint32 DestructibleID3 = 89;
inline void SpawnEvent::clear_destructibleid3() {
  destructibleid3_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleid3() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleID3)
  return destructibleid3_;
}
inline void SpawnEvent::set_destructibleid3(::google::protobuf::uint32 value) {
  
  destructibleid3_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleID3)
}

// uint32 DestructibleID4 = 90;
inline void SpawnEvent::clear_destructibleid4() {
  destructibleid4_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleid4() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleID4)
  return destructibleid4_;
}
inline void SpawnEvent::set_destructibleid4(::google::protobuf::uint32 value) {
  
  destructibleid4_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleID4)
}

// uint32 DestructibleUnk2 = 91;
inline void SpawnEvent::clear_destructibleunk2() {
  destructibleunk2_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk2)
  return destructibleunk2_;
}
inline void SpawnEvent::set_destructibleunk2(::google::protobuf::uint32 value) {
  
  destructibleunk2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk2)
}

// uint32 DestructibleUnk3 = 92;
inline void SpawnEvent::clear_destructibleunk3() {
  destructibleunk3_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk3() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk3)
  return destructibleunk3_;
}
inline void SpawnEvent::set_destructibleunk3(::google::protobuf::uint32 value) {
  
  destructibleunk3_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk3)
}

// uint32 DestructibleUnk4 = 93;
inline void SpawnEvent::clear_destructibleunk4() {
  destructibleunk4_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk4() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk4)
  return destructibleunk4_;
}
inline void SpawnEvent::set_destructibleunk4(::google::protobuf::uint32 value) {
  
  destructibleunk4_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk4)
}

// uint32 DestructibleUnk5 = 94;
inline void SpawnEvent::clear_destructibleunk5() {
  destructibleunk5_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk5() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk5)
  return destructibleunk5_;
}
inline void SpawnEvent::set_destructibleunk5(::google::protobuf::uint32 value) {
  
  destructibleunk5_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk5)
}

// uint32 DestructibleUnk6 = 95;
inline void SpawnEvent::clear_destructibleunk6() {
  destructibleunk6_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk6() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk6)
  return destructibleunk6_;
}
inline void SpawnEvent::set_destructibleunk6(::google::protobuf::uint32 value) {
  
  destructibleunk6_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk6)
}

// uint32 DestructibleUnk7 = 96;
inline void SpawnEvent::clear_destructibleunk7() {
  destructibleunk7_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk7() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk7)
  return destructibleunk7_;
}
inline void SpawnEvent::set_destructibleunk7(::google::protobuf::uint32 value) {
  
  destructibleunk7_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk7)
}

// uint32 DestructibleUnk8 = 97;
inline void SpawnEvent::clear_destructibleunk8() {
  destructibleunk8_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk8() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk8)
  return destructibleunk8_;
}
inline void SpawnEvent::set_destructibleunk8(::google::protobuf::uint32 value) {
  
  destructibleunk8_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk8)
}

// uint32 DestructibleUnk9 = 98;
inline void SpawnEvent::clear_destructibleunk9() {
  destructibleunk9_ = 0u;
}
inline ::google::protobuf::uint32 SpawnEvent::destructibleunk9() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk9)
  return destructibleunk9_;
}
inline void SpawnEvent::set_destructibleunk9(::google::protobuf::uint32 value) {
  
  destructibleunk9_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk9)
}

// bool targetable_with_hotkey = 99;
inline void SpawnEvent::clear_targetable_with_hotkey() {
  targetable_with_hotkey_ = false;
}
inline bool SpawnEvent::targetable_with_hotkey() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.targetable_with_hotkey)
  return targetable_with_hotkey_;
}
inline void SpawnEvent::set_targetable_with_hotkey(bool value) {
  
  targetable_with_hotkey_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.targetable_with_hotkey)
}

// bool show_name = 100;
inline void SpawnEvent::clear_show_name() {
  show_name_ = false;
}
inline bool SpawnEvent::show_name() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.show_name)
  return show_name_;
}
inline void SpawnEvent::set_show_name(bool value) {
  
  show_name_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.show_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace eqproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::eqproto::OpCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eqproto::OpCode>() {
  return ::eqproto::OpCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
