// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package eqproto is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	ChannelMessage
	DailyGain
*/
package eqproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChannelMessage struct {
	ChanNum   int32  `protobuf:"varint,1,opt,name=chan_num,json=chanNum" json:"chan_num,omitempty"`
	Language  int32  `protobuf:"varint,2,opt,name=language" json:"language,omitempty"`
	From      string `protobuf:"bytes,3,opt,name=from" json:"from,omitempty"`
	To        string `protobuf:"bytes,4,opt,name=to" json:"to,omitempty"`
	Message   string `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	Guilddbid int32  `protobuf:"varint,6,opt,name=guilddbid" json:"guilddbid,omitempty"`
	Deliverto string `protobuf:"bytes,7,opt,name=deliverto" json:"deliverto,omitempty"`
	Type      int32  `protobuf:"varint,8,opt,name=type" json:"type,omitempty"`
	Minstatus int32  `protobuf:"varint,9,opt,name=minstatus" json:"minstatus,omitempty"`
	Fromadmin int32  `protobuf:"varint,10,opt,name=fromadmin" json:"fromadmin,omitempty"`
	Noreply   bool   `protobuf:"varint,11,opt,name=noreply" json:"noreply,omitempty"`
	IsEmote   bool   `protobuf:"varint,12,opt,name=is_emote,json=isEmote" json:"is_emote,omitempty"`
	// 0 not queued, 1 queued, 2 queue full, 3 offline
	Queued int32 `protobuf:"varint,13,opt,name=queued" json:"queued,omitempty"`
	// You can specify a zone id if you want a message exclusively to one zone
	ZoneId int32 `protobuf:"varint,14,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
}

func (m *ChannelMessage) Reset()                    { *m = ChannelMessage{} }
func (m *ChannelMessage) String() string            { return proto.CompactTextString(m) }
func (*ChannelMessage) ProtoMessage()               {}
func (*ChannelMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Daily Gain is a special system for tracking players progression in a daily snapshot.
type DailyGain struct {
	AccountId        int32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	CharacterId      int32  `protobuf:"varint,2,opt,name=character_id,json=characterId" json:"character_id,omitempty"`
	LevelsGained     int32  `protobuf:"varint,3,opt,name=levels_gained,json=levelsGained" json:"levels_gained,omitempty"`
	ExperienceGained int32  `protobuf:"varint,4,opt,name=experience_gained,json=experienceGained" json:"experience_gained,omitempty"`
	MoneyEarned      int32  `protobuf:"varint,5,opt,name=money_earned,json=moneyEarned" json:"money_earned,omitempty"`
	Identity         string `protobuf:"bytes,6,opt,name=identity" json:"identity,omitempty"`
}

func (m *DailyGain) Reset()                    { *m = DailyGain{} }
func (m *DailyGain) String() string            { return proto.CompactTextString(m) }
func (*DailyGain) ProtoMessage()               {}
func (*DailyGain) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*ChannelMessage)(nil), "eqproto.ChannelMessage")
	proto.RegisterType((*DailyGain)(nil), "eqproto.DailyGain")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x92, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0xd5, 0x6e, 0xdb, 0x24, 0xb3, 0x6d, 0x05, 0x3e, 0x80, 0x41, 0x20, 0xc1, 0x72, 0x41,
	0x42, 0xe2, 0xc2, 0x23, 0xc0, 0x6a, 0xb5, 0x07, 0x38, 0xe4, 0x05, 0x22, 0x6f, 0x3c, 0x04, 0x4b,
	0x8e, 0x9d, 0x3a, 0x76, 0x45, 0x78, 0x58, 0x5e, 0x83, 0x2b, 0xf6, 0x38, 0x4d, 0x6f, 0xf3, 0x7f,
	0xff, 0xef, 0x99, 0x89, 0x63, 0x38, 0xf4, 0x38, 0x8e, 0xa2, 0xc3, 0xcf, 0x83, 0xb3, 0xde, 0xb2,
	0x02, 0x4f, 0x54, 0xdc, 0xfd, 0x5b, 0xc3, 0xf1, 0xeb, 0x2f, 0x61, 0x0c, 0xea, 0xef, 0x39, 0xc1,
	0x5e, 0x41, 0xd9, 0x46, 0xd2, 0x98, 0xd0, 0xf3, 0xd5, 0xbb, 0xd5, 0xc7, 0x6d, 0x5d, 0x24, 0xfd,
	0x23, 0xf4, 0xec, 0x35, 0x94, 0x5a, 0x98, 0x2e, 0xc4, 0x18, 0x5f, 0x93, 0xb5, 0x68, 0xc6, 0x60,
	0xf3, 0xd3, 0xd9, 0x9e, 0xdf, 0x44, 0x5e, 0xd5, 0x54, 0xb3, 0x23, 0xac, 0xbd, 0xe5, 0x1b, 0x22,
	0xb1, 0x62, 0x1c, 0x8a, 0x79, 0x0f, 0xbe, 0x25, 0x78, 0x91, 0xec, 0x0d, 0x54, 0x5d, 0x50, 0x5a,
	0xca, 0x27, 0x25, 0xf9, 0x8e, 0x5a, 0x5f, 0x41, 0x72, 0x25, 0x6a, 0x75, 0x46, 0x17, 0xdb, 0x15,
	0x74, 0xf2, 0x0a, 0xd2, 0x64, 0x3f, 0x0d, 0xc8, 0x4b, 0x3a, 0x46, 0x75, 0x3a, 0xd1, 0x2b, 0x33,
	0x7a, 0xe1, 0xc3, 0xc8, 0xab, 0xdc, 0x6f, 0x01, 0xc9, 0x4d, 0xfb, 0x09, 0x19, 0x11, 0x87, 0xec,
	0x2e, 0x20, 0x6d, 0x69, 0xac, 0xc3, 0x41, 0x4f, 0xfc, 0x36, 0x7a, 0x65, 0x7d, 0x91, 0xe9, 0x6a,
	0xd4, 0xd8, 0x60, 0x6f, 0x3d, 0xf2, 0x7d, 0xb6, 0xd4, 0x78, 0x9f, 0x24, 0x7b, 0x01, 0xbb, 0x53,
	0xc0, 0x80, 0x92, 0x1f, 0xa8, 0xdf, 0xac, 0xd8, 0x4b, 0x28, 0xfe, 0x58, 0x83, 0x4d, 0xfc, 0xac,
	0x63, 0x36, 0x92, 0x7c, 0x94, 0x77, 0x7f, 0x57, 0x50, 0x7d, 0x13, 0x4a, 0x4f, 0x0f, 0x22, 0xce,
	0x7c, 0x0b, 0x20, 0xda, 0xd6, 0x06, 0xe3, 0x53, 0x32, 0x5f, 0x7b, 0x35, 0x93, 0x47, 0xc9, 0xde,
	0xc3, 0x3e, 0xfe, 0x03, 0x27, 0x5a, 0x8f, 0x2e, 0x05, 0xf2, 0xe5, 0xdf, 0x2e, 0x2c, 0x46, 0x3e,
	0xc0, 0x41, 0xe3, 0x19, 0xf5, 0xd8, 0x74, 0xb1, 0x61, 0xdc, 0xe3, 0x86, 0x32, 0xfb, 0x0c, 0x1f,
	0x88, 0xb1, 0x4f, 0xf0, 0x1c, 0x7f, 0x0f, 0xe8, 0x14, 0x9a, 0x16, 0x2f, 0xc1, 0x0d, 0x05, 0x9f,
	0x5d, 0x8d, 0x39, 0x1c, 0x87, 0xf6, 0x71, 0xd7, 0xa9, 0x41, 0xe1, 0x52, 0x6e, 0x9b, 0x87, 0x12,
	0xbb, 0x27, 0x94, 0x1e, 0x84, 0x92, 0x68, 0xbc, 0xf2, 0x13, 0xfd, 0xb5, 0xaa, 0x5e, 0xf4, 0xd3,
	0x8e, 0x5e, 0xd8, 0x97, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xc6, 0x8d, 0x36, 0x7b, 0x02,
	0x00, 0x00,
}
